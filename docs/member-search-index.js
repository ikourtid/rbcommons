memberSearchIndex = [{"p":"com.rb.biz.types","c":"SignedMoney","l":"abs()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"abs()"},{"p":"com.rb.nonbiz.functional","c":"TriConsumer","l":"accept(T1, T2, T3)","u":"accept(T1,T2,T3)"},{"p":"com.rb.nonbiz.functional","c":"QuadriConsumer","l":"accept(T1, T2, T3, T4)","u":"accept(T1,T2,T3,T4)"},{"p":"com.rb.nonbiz.functional","c":"QuintConsumer","l":"accept(T1, T2, T3, T4, T5)","u":"accept(T1,T2,T3,T4,T5)"},{"p":"com.rb.nonbiz.functional","c":"HexConsumer","l":"accept(T1, T2, T3, T4, T5, T6)","u":"accept(T1,T2,T3,T4,T5,T6)"},{"p":"com.rb.nonbiz.functional","c":"SeptConsumer","l":"accept(T1, T2, T3, T4, T5, T6, T7)","u":"accept(T1,T2,T3,T4,T5,T6,T7)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"add(BuyQuantity)","u":"add(com.rb.biz.types.trading.BuyQuantity)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"add(double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"add(double)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"add(double)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter.IidCounterBuilder","l":"add(InstrumentId, int)","u":"add(com.rb.biz.types.asset.InstrumentId,int)"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray.RBJsonLocalDateArrayBuilder","l":"add(LocalDate)","u":"add(java.time.LocalDate)"},{"p":"com.rb.biz.types","c":"Money","l":"add(Money)","u":"add(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"add(Money)","u":"add(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"add(NonNegativeQuantity)","u":"add(com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"add(PositiveQuantity)","u":"add(com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.biz.types","c":"Price","l":"add(Price)","u":"add(com.rb.biz.types.Price)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"add(SellQuantity)","u":"add(com.rb.biz.types.trading.SellQuantity)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"add(SignedFraction)","u":"add(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"add(SignedMoney)","u":"add(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"add(SignedQuantity)","u":"add(com.rb.biz.types.trading.SignedQuantity)"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray.RBJsonStringArrayBuilder","l":"add(String)","u":"add(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"add(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"add(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"add(T)"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"add(T, int)","u":"add(T,int)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"add(T, T)","u":"add(T,T)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"add(UnitFraction)","u":"add(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"addAll(Collection<? extends T>)","u":"addAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"addAll(Collection<? extends T>)","u":"addAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"addAll(RBMap<T, Integer>)","u":"addAll(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addAllAssumingNoOverlap(JsonObject, JsonObject)","u":"addAllAssumingNoOverlap(com.google.gson.JsonObject,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"addAllAssumingNoOverlap(MutableIidMap<V>, IidMap<V>)","u":"addAllAssumingNoOverlap(com.rb.nonbiz.collections.MutableIidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"addAllAssumingNoOverlap(RBEnumMap<E, V>)","u":"addAllAssumingNoOverlap(com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"addAllAssumingNoOverlap(RBMap<K, V>)","u":"addAllAssumingNoOverlap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"addAssumingAbsent(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"addAssumingAbsent(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"addAssumingAbsent(T)"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats.PartitionPairDifferenceStatsBuilder","l":"addDifference(UnitFraction, UnitFraction)","u":"addDifference(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"addForgiving(UnitFraction, Epsilon)","u":"addForgiving(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"additionSubtractionAndIdentityElement(T, BinaryOperator<T>, BinaryOperator<T>)","u":"additionSubtractionAndIdentityElement(T,java.util.function.BinaryOperator,java.util.function.BinaryOperator)"},{"p":"com.rb.biz.types","c":"Money","l":"addOptional(Optional<Money>)","u":"addOptional(java.util.Optional)"},{"p":"com.rb.nonbiz.json","c":"JsonPointList.JsonPointListBuilder","l":"addPoint(LocalDate, double)","u":"addPoint(java.time.LocalDate,double)"},{"p":"com.rb.nonbiz.json","c":"JsonPointList.JsonPointListBuilder","l":"addPoint(LocalDate, double, String)","u":"addPoint(java.time.LocalDate,double,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries.JsonSparseTimeSeriesBuilder","l":"addPoint(LocalDate, JsonElement)","u":"addPoint(java.time.LocalDate,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries.JsonSparseTimeSeriesBuilder","l":"addPoint(LocalDate, JsonElement, String)","u":"addPoint(java.time.LocalDate,com.google.gson.JsonElement,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addPreciseValueToJsonObjectIfNonZero(JsonObject, String, P, Epsilon)","u":"addPreciseValueToJsonObjectIfNonZero(com.google.gson.JsonObject,java.lang.String,P,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.biz.types","c":"Money","l":"addSigned(SignedMoney)","u":"addSigned(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addStringToJsonObject(JsonObject, String, String)","u":"addStringToJsonObject(com.google.gson.JsonObject,java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addToJsonObject(JsonObject, String, JsonElement)","u":"addToJsonObject(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addToJsonObjectIf(JsonObject, String, T, Predicate<T>, Function<T, JsonElement>)","u":"addToJsonObjectIf(com.google.gson.JsonObject,java.lang.String,T,java.util.function.Predicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addToJsonObjectIfNonEmpty(JsonObject, String, JsonArray)","u":"addToJsonObjectIfNonEmpty(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addToJsonObjectIfNonEmpty(JsonObject, String, JsonObject)","u":"addToJsonObjectIfNonEmpty(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"addToJsonObjectIfOptionalPresent(JsonObject, String, Optional<T>, Function<T, JsonElement>)","u":"addToJsonObjectIfOptionalPresent(com.google.gson.JsonObject,java.lang.String,java.util.Optional,java.util.function.Function)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"aggregate(Iterator<T>)","u":"aggregate(java.util.Iterator)"},{"p":"com.rb.nonbiz.reflection","c":"AllClassesThatImplementInterfacesRetriever","l":"AllClassesThatImplementInterfacesRetriever()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"allDaysUseTheSameFile()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"allEntriesMatch(BiPredicate<K, V>)","u":"allEntriesMatch(java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"allMatch(Predicate<V>)","u":"allMatch(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"allOptionalsEmpty(Optional<?>, Optional<?>, Optional<?>, Optional<?>...)","u":"allOptionalsEmpty(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional...)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"allOptionalsPresent(Optional<?>, Optional<?>, Optional<?>, Optional<?>...)","u":"allOptionalsPresent(java.util.Optional,java.util.Optional,java.util.Optional,java.util.Optional...)"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"ALLOWABLE_SPLIT_RANGE"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"allPairsMatch(Iterable<T1>, Iterable<T2>, BiPredicate<T1, T2>)","u":"allPairsMatch(java.lang.Iterable,java.lang.Iterable,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"allPairsMatch(Iterator<T1>, Iterator<T2>, BiPredicate<T1, T2>)","u":"allPairsMatch(java.util.Iterator,java.util.Iterator,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.jsonapi.doc","c":"AllPropertiesMentionedInSingleDocumentationStringLister","l":"AllPropertiesMentionedInSingleDocumentationStringLister()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.reflection","c":"AllRbTopLevelClasses","l":"allRbTopLevelClasses(RBSet<Class<?>>)","u":"allRbTopLevelClasses(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.reflection","c":"AllRbTopLevelClassesRetriever","l":"AllRbTopLevelClassesRetriever()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testcategories","c":"AllTests","l":"AllTests()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"allValidCharacters(String)","u":"allValidCharacters(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"allValuesPlusDefaultAsStream()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"almostEquals(S, Epsilon)","u":"almostEquals(S,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"almostEquals(T, Epsilon)","u":"almostEquals(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"always()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"alwaysExclude(RBSet<T>)","u":"alwaysExclude(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"alwaysInclude(RBSet<T>)","u":"alwaysInclude(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers","l":"alwaysMatchingMatcher()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseExistingValueAndIgnoreOverride","l":"alwaysUseExistingValueAndIgnoreOverride()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseExistingValueAndIgnoreOverride","l":"AlwaysUseExistingValueAndIgnoreOverride()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseOverrideAndIgnoreExistingValue","l":"alwaysUseOverrideAndIgnoreExistingValue()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseOverrideAndIgnoreExistingValue","l":"AlwaysUseOverrideAndIgnoreExistingValue()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"alwaysUseRules(RBSet<T>)","u":"alwaysUseRules(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.types","c":"Interpolator","l":"andDefaultValue(double)"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"angleInDegrees(double)"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"angleWithCosine(double)"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"annuallyCompoundedAnnualizedReturn(OnesBasedReturn)","u":"annuallyCompoundedAnnualizedReturn(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.io","c":"StringToFileWriter","l":"appendToFile(String, Iterator<String>)","u":"appendToFile(java.lang.String,java.util.Iterator)"},{"p":"com.rb.nonbiz.io","c":"StringToFileWriter","l":"appendToFile(String, String)","u":"appendToFile(java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues","l":"apply(AllowsMissingValues<String>)","u":"apply(com.rb.nonbiz.functional.AllowsMissingValues)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"apply(AllowsMissingValues<X>)","u":"apply(com.rb.nonbiz.functional.AllowsMissingValues)"},{"p":"com.rb.nonbiz.types","c":"RBCachingDoubleFunction","l":"apply(double)"},{"p":"com.rb.nonbiz.collections","c":"MultipleDetailedPartitionModificationsApplier","l":"apply(Partition<K>, DetailedPartitionModification<K>, DetailedPartitionModification<K>, DetailedPartitionModification<K>...)","u":"apply(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.DetailedPartitionModification,com.rb.nonbiz.collections.DetailedPartitionModification,com.rb.nonbiz.collections.DetailedPartitionModification...)"},{"p":"com.rb.nonbiz.collections","c":"MultipleSimplePartitionModificationsApplier","l":"apply(Partition<K>, SimplePartitionModification<K>, SimplePartitionModification<K>, SimplePartitionModification<K>...)","u":"apply(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.SimplePartitionModification,com.rb.nonbiz.collections.SimplePartitionModification,com.rb.nonbiz.collections.SimplePartitionModification...)"},{"p":"com.rb.nonbiz.collections","c":"SingleDetailedPartitionModificationApplier","l":"apply(Partition<T>, DetailedPartitionModification<T>)","u":"apply(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.DetailedPartitionModification)"},{"p":"com.rb.nonbiz.collections","c":"SingleSimplePartitionModificationApplier","l":"apply(Partition<T>, SimplePartitionModification<T>)","u":"apply(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.SimplePartitionModification)"},{"p":"com.rb.nonbiz.functional","c":"TriFunction","l":"apply(T1, T2, T3)","u":"apply(T1,T2,T3)"},{"p":"com.rb.nonbiz.functional","c":"QuadriFunction","l":"apply(T1, T2, T3, T4)","u":"apply(T1,T2,T3,T4)"},{"p":"com.rb.nonbiz.functional","c":"QuintFunction","l":"apply(T1, T2, T3, T4, T5)","u":"apply(T1,T2,T3,T4,T5)"},{"p":"com.rb.nonbiz.functional","c":"HexFunction","l":"apply(T1, T2, T3, T4, T5, T6)","u":"apply(T1,T2,T3,T4,T5,T6)"},{"p":"com.rb.nonbiz.functional","c":"SeptFunction","l":"apply(T1, T2, T3, T4, T5, T6, T7)","u":"apply(T1,T2,T3,T4,T5,T6,T7)"},{"p":"com.rb.nonbiz.functional","c":"UnitFractionFunction","l":"apply(UnitFraction)","u":"apply(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"apply(X)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"applyToConsecutivePairs(Iterator<T>, BiConsumer<T, T>)","u":"applyToConsecutivePairs(java.util.Iterator,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"arithmeticProgression(T, double, UnaryOperator<T>)","u":"arithmeticProgression(T,double,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.jsonapi","c":"ArithmeticProgressionJsonApiConverter","l":"ArithmeticProgressionJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"array2DMatcher(V[][], RBMatchers.MatcherGenerator<V>)","u":"array2DMatcher(V[][],com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"array3DMatcher(V[][][], RBMatchers.MatcherGenerator<V>)","u":"array3DMatcher(V[][][],com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"arrayEqualityMatcher(T[])"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"arrayIndexMappingToJsonArray(ArrayIndexMapping<V>, Function<V, JsonElement>)","u":"arrayIndexMappingToJsonArray(com.rb.nonbiz.collections.ArrayIndexMapping,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"arrayIterator(T[])"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"arrayMatcher(T[], RBMatchers.MatcherGenerator<T>)","u":"arrayMatcher(T[],com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"asAlmostExactIntOrThrow(double, Epsilon)","u":"asAlmostExactIntOrThrow(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"asBigDecimal()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"asBigDecimalList(List<T>)","u":"asBigDecimalList(java.util.List)"},{"p":"com.rb.nonbiz.types","c":"ExistenceOf","l":"asBoolean()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"asClosedRangeOfUnitFraction()"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"asDoubleList(List<T>)","u":"asDoubleList(java.util.List)"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"asDoubleRange()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"asDoubleRange()"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"asFraction()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"asGeneralHardAndSoftRange()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"asIntList(List<T>)","u":"asIntList(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"asJsonArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray","l":"asJsonArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"asJsonArray()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"asJsonObject()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"asJsonObject()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"asList()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"asList()"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"asList()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"asList()"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"asLong()"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"asLong()"},{"p":"com.rb.nonbiz.types","c":"HasLongRepresentation","l":"asLong()"},{"p":"com.rb.nonbiz.types","c":"RBLongId","l":"asLong()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"asMap()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"asMap()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"asMap()"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"asRange()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"asRbMatrix()"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertAlmostEquals(String, T, T, Epsilon)","u":"assertAlmostEquals(java.lang.String,T,T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertAlmostEquals(String, V, V, Epsilon)","u":"assertAlmostEquals(java.lang.String,V,V,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertAlmostEquals(T, T, Epsilon)","u":"assertAlmostEquals(T,T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertCollectionEqualsIgnoringOrder(Collection<? extends T>, Collection<? extends T>)","u":"assertCollectionEqualsIgnoringOrder(java.util.Collection,java.util.Collection)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertDoubleArraysAlmostEqual(double[], double[], Epsilon)","u":"assertDoubleArraysAlmostEqual(double[],double[],com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertDoubleListsAlmostEqual(List<Double>, List<Double>, Epsilon)","u":"assertDoubleListsAlmostEqual(java.util.List,java.util.List,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertEmpty(Collection<?>)","u":"assertEmpty(java.util.Collection)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertEmptyIterator(Iterator<?>)","u":"assertEmptyIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertEmptyRBMap(RBMap<K, V>)","u":"assertEmptyRBMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"Asserters()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertIidSetEquals(IidSet, IidSet)","u":"assertIidSetEquals(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertIllegalArgumentException(Runnable)","u":"assertIllegalArgumentException(java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertIndexOutOfBoundsException(Runnable)","u":"assertIndexOutOfBoundsException(java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertNullPointerException(Runnable)","u":"assertNullPointerException(java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalAlmostEquals(T, Optional<T>, Epsilon)","u":"assertOptionalAlmostEquals(T,java.util.Optional,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalDoubleAlmostEquals(double, OptionalDouble, Epsilon)","u":"assertOptionalDoubleAlmostEquals(double,java.util.OptionalDouble,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalDoubleEmpty(OptionalDouble)","u":"assertOptionalDoubleEmpty(java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalEmpty(Optional<T>)","u":"assertOptionalEmpty(java.util.Optional)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalEquals(T, Optional<T>)","u":"assertOptionalEquals(T,java.util.Optional)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalIntEmpty(OptionalInt)","u":"assertOptionalIntEmpty(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalIntEquals(int, OptionalInt)","u":"assertOptionalIntEquals(int,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalLongEmpty(OptionalLong)","u":"assertOptionalLongEmpty(java.util.OptionalLong)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalLongEquals(long, OptionalLong)","u":"assertOptionalLongEquals(long,java.util.OptionalLong)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalNonEmpty(Optional<T>)","u":"assertOptionalNonEmpty(java.util.Optional)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertOptionalNonEmpty(Optional<T>, TypeSafeMatcher<T>)","u":"assertOptionalNonEmpty(java.util.Optional,org.hamcrest.TypeSafeMatcher)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertPossiblyIllegalArgumentException(boolean, Runnable)","u":"assertPossiblyIllegalArgumentException(boolean,java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertPossiblyThrows(boolean, Class<? extends Exception>, Runnable)","u":"assertPossiblyThrows(boolean,java.lang.Class,java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertPossiblyThrowsAnyException(boolean, Runnable)","u":"assertPossiblyThrowsAnyException(boolean,java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertRuntimeException(Runnable)","u":"assertRuntimeException(java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSingletonIidSet(InstrumentId, IidSet)","u":"assertSingletonIidSet(com.rb.biz.types.asset.InstrumentId,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSingletonList(T, List<T>)","u":"assertSingletonList(T,java.util.List)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSingletonRBList(T, RBSet<T>)","u":"assertSingletonRBList(T,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSingletonRBSet(T, RBSet<T>)","u":"assertSingletonRBSet(T,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSingletonSet(T, Set<T>)","u":"assertSingletonSet(T,java.util.Set)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertSize(int, Collection)","u":"assertSize(int,java.util.Collection)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertStringContains(String, String)","u":"assertStringContains(java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertStringContainsAll(String, RBSet<String>)","u":"assertStringContainsAll(java.lang.String,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertThrows(Class<? extends Exception>, Runnable)","u":"assertThrows(java.lang.Class,java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertThrowsAnyException(Runnable)","u":"assertThrowsAnyException(java.lang.Runnable)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertThrowsAnyException(Runnable, Predicate<Exception>)","u":"assertThrowsAnyException(java.lang.Runnable,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"assertThrowsWithMessage(String, Runnable)","u":"assertThrowsWithMessage(java.lang.String,java.lang.Runnable)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"asSet()"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"asSet()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"asSet()"},{"p":"com.rb.biz.types.asset","c":"AssetId","l":"AssetId()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"asSignedFraction()"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"asSignedFractionRange()"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"asSingleLine(String, String...)","u":"asSingleLine(java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"asSingleLineWithNewlines(String, String...)","u":"asSingleLineWithNewlines(java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"asSortedList()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"asSortedSet()"},{"p":"com.rb.biz.types","c":"Symbol","l":"asString()"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"asString()"},{"p":"com.rb.nonbiz.text","c":"PathComponent","l":"asString()"},{"p":"com.rb.nonbiz.types","c":"RBLongId","l":"asString()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"asUnitFraction()"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"asWeFixDimension(MultidimensionalCounter, int)","u":"asWeFixDimension(org.apache.commons.math3.util.MultidimensionalCounter,int)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"asWeFixDimensionIterator(MultidimensionalCounter, int)","u":"asWeFixDimensionIterator(org.apache.commons.math3.util.MultidimensionalCounter,int)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"asWeVaryDimension(MultidimensionalCounter, int)","u":"asWeVaryDimension(org.apache.commons.math3.util.MultidimensionalCounter,int)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"asWeVaryDimensionIterator(MultidimensionalCounter, int)","u":"asWeVaryDimensionIterator(org.apache.commons.math3.util.MultidimensionalCounter,int)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"asZeroBasedReturnBigDecimal()"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"asZeroBasedReturnDouble()"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"atLeastKTimesOutOfN(int, int)","u":"atLeastKTimesOutOfN(int,int)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"atLeastOnce()"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"average(double, double)","u":"average(double,double)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"average(double, double, double, double...)","u":"average(double,double,double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"averageOfDoubleIterator(Iterator<Double>)","u":"averageOfDoubleIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"averageOfDoubleStream(DoubleStream)","u":"averageOfDoubleStream(java.util.stream.DoubleStream)"},{"p":"com.rb.biz.types","c":"Price","l":"averagePrice(Price, Price)","u":"averagePrice(com.rb.biz.types.Price,com.rb.biz.types.Price)"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"backtestLabelWithoutCommas(String)","u":"backtestLabelWithoutCommas(java.lang.String)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"basisVectorIterator()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride","l":"BehaviorWithValueAndOverride()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride","l":"BehaviorWithValueButNoOverride()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"Interpolator","l":"betweenSuppliedValue(double)"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"bigDecimalAverage(BigDecimal, BigDecimal)","u":"bigDecimalAverage(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"bigDecimalFromJsonBps(JsonElement)","u":"bigDecimalFromJsonBps(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"bigDecimalFromJsonPercentage(JsonElement)","u":"bigDecimalFromJsonPercentage(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"bigDecimalInvert(BigDecimal)","u":"bigDecimalInvert(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"bigDecimalMatcher(BigDecimal, Epsilon)","u":"bigDecimalMatcher(java.math.BigDecimal,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"bigDecimalMax(BigDecimal, BigDecimal)","u":"bigDecimalMax(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"bigDecimalMin(BigDecimal, BigDecimal)","u":"bigDecimalMin(java.math.BigDecimal,java.math.BigDecimal)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"bigDecimalRangeMatcher(Range<BigDecimal>, Epsilon)","u":"bigDecimalRangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"bigDecimalsAlmostEqual(BigDecimal, BigDecimal, Epsilon)","u":"bigDecimalsAlmostEqual(java.math.BigDecimal,java.math.BigDecimal,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"bigDecimalToDoubleRange(Range<BigDecimal>)","u":"bigDecimalToDoubleRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"BIGGEST_ANTI_CORRELATION"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"biMapEqualityMatcher(BiMap<A, B>)","u":"biMapEqualityMatcher(com.google.common.collect.BiMap)"},{"p":"com.rb.nonbiz.search","c":"BinarySearch","l":"BinarySearch()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"binarySearchParametersBuilder()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"binarySearchResultBuilder()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"BinarySearchResultBuilder()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"BitSet2D(BitSet, int, int)","u":"%3Cinit%3E(java.util.BitSet,int,int)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"bitSet2D(int, int)","u":"bitSet2D(int,int)"},{"p":"com.rb.nonbiz.collections","c":"RBBitSets","l":"bitSetOf(boolean, boolean, boolean...)","u":"bitSetOf(boolean,boolean,boolean...)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"both(L, R)","u":"both(L,R)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"both(T, T)","u":"both(T,T)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"BPS_TO_FRACTION"},{"p":"com.rb.nonbiz.util","c":"RBBuilder","l":"build()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"buildAsOptionalOrEmpty()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"buildForTargetOutsideOfBounds()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter.IidCounterBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection.IndexInOrderedCollectionBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats.PartitionPairDifferenceStatsBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapDynamicBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapStaticBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList.JsonPointListBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries.JsonSparseTimeSeriesBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray.RBJsonLocalDateArrayBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray.RBJsonStringArrayBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.nonbiz.util","c":"RBBuilder","l":"buildWithoutPreconditions()"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"buyQuantity(BigDecimal)","u":"buyQuantity(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"buyQuantity(double)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"buyQuantity(PositiveQuantity)","u":"buyQuantity(com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"byteValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"byteValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"byteValue()"},{"p":"com.rb.nonbiz.util","c":"CachingSupplier","l":"CachingSupplier(int)","u":"%3Cinit%3E(int)"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStatsCalculator","l":"calculate(HasInstrumentIdPartition<T>, HasInstrumentIdPartition<T>)","u":"calculate(com.rb.nonbiz.collections.HasInstrumentIdPartition,com.rb.nonbiz.collections.HasInstrumentIdPartition)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator","l":"calculate(Iterator<StatisticalSummary>)","u":"calculate(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStatsCalculator","l":"calculate(Partition<T>, Partition<T>)","u":"calculate(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"SingleDetailedPartitionModificationCalculator","l":"calculate(Partition<T>, Partition<T>)","u":"calculate(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"SingleSimplePartitionModificationCalculator","l":"calculate(Partition<T>, Partition<T>)","u":"calculate(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"DoubleArraysAverager","l":"calculateAverageArray(Iterator<double[]>, boolean)","u":"calculateAverageArray(java.util.Iterator,boolean)"},{"p":"com.rb.biz.types","c":"Money","l":"calculateBuyQuantity(Price)","u":"calculateBuyQuantity(com.rb.biz.types.Price)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"calculateCorrelationMatrix()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"calculateCovarianceMatrix()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"calculateDeterminant()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"calculateEigendecomposition()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"calculateMagnitude()"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionDeviations(Partition<K>, Partition<K>)","u":"calculatePartitionDeviations(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionDeviations(Partition<K>, SignedPartition<K>)","u":"calculatePartitionDeviations(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.SignedPartition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionDeviations(SignedPartition<K>, Partition<K>)","u":"calculatePartitionDeviations(com.rb.nonbiz.collections.SignedPartition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionDeviations(SignedPartition<K>, SignedPartition<K>)","u":"calculatePartitionDeviations(com.rb.nonbiz.collections.SignedPartition,com.rb.nonbiz.collections.SignedPartition)"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradientCalculator","l":"calculatePartitionGradient(Partition<T>, UnitFraction)","u":"calculatePartitionGradient(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionNonZeroDeviations(Partition<K>, Partition<K>)","u":"calculatePartitionNonZeroDeviations(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionNonZeroDeviations(Partition<K>, SignedPartition<K>)","u":"calculatePartitionNonZeroDeviations(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.SignedPartition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionNonZeroDeviations(SignedPartition<K>, Partition<K>)","u":"calculatePartitionNonZeroDeviations(com.rb.nonbiz.collections.SignedPartition,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"calculatePartitionNonZeroDeviations(SignedPartition<K>, SignedPartition<K>)","u":"calculatePartitionNonZeroDeviations(com.rb.nonbiz.collections.SignedPartition,com.rb.nonbiz.collections.SignedPartition)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"calculateSingularValueDecomposition()"},{"p":"com.rb.nonbiz.math.stats","c":"StdDevCalculator","l":"calculateStandardDeviationForPopulationWithOnePass(Iterable<V>)","u":"calculateStandardDeviationForPopulationWithOnePass(java.lang.Iterable)"},{"p":"com.rb.nonbiz.math.stats","c":"StdDevCalculator","l":"calculateStandardDeviationForPopulationWithOnePass(Iterator<V>)","u":"calculateStandardDeviationForPopulationWithOnePass(java.util.Iterator)"},{"p":"com.rb.nonbiz.math.stats","c":"StdDevCalculator","l":"calculateWeightedStandardDeviationForPopulation(List<V>, List<W>)","u":"calculateWeightedStandardDeviationForPopulation(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.date","c":"CalendarDays","l":"CalendarDays()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"canBeConvertedToUnitFraction()"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"cannotBeConsecutiveMarketDays(LocalDate, LocalDate)","u":"cannotBeConsecutiveMarketDays(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"cardinality()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"cardinality()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"CascadingInstrumentMaster","l":"cascadingInstrumentMaster(InstrumentMaster, InstrumentMaster)","u":"cascadingInstrumentMaster(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"CascadingInstrumentMaster","l":"cascadingInstrumentMaster(InstrumentMaster, InstrumentMaster, InstrumentMaster)","u":"cascadingInstrumentMaster(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster)"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"caseInsensitiveStringFilter(RBSet<String>)","u":"caseInsensitiveStringFilter(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"caseInsensitiveStringFilter(String, String...)","u":"caseInsensitiveStringFilter(java.lang.String,java.lang.String...)"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"CASH"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"CASH_ID"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"cashSymbol()"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"castRBSet(RBSet<S>)","u":"castRBSet(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"ceilingSimplistically(double)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllAlmostSame(Iterable<T>, Function<T, V>, Epsilon, String, Object...)","u":"checkAllAlmostSame(java.lang.Iterable,java.util.function.Function,com.rb.nonbiz.types.Epsilon,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllAlmostSame(Iterator<T>, Function<T, V>, Epsilon, String, Object...)","u":"checkAllAlmostSame(java.util.Iterator,java.util.function.Function,com.rb.nonbiz.types.Epsilon,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkAllAreDifferentStrictSubclassesOf(Class<T>, Iterable<? extends T>, String, Object...)","u":"checkAllAreDifferentStrictSubclassesOf(java.lang.Class,java.lang.Iterable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkAllAreStrictSubclassesOf(Class<T>, Iterable<? extends T>, String, Object...)","u":"checkAllAreStrictSubclassesOf(java.lang.Class,java.lang.Iterable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkAllOptionalsArePresentOrAllAreEmpty(Optional<?>, Optional<?>, Optional<?>...)","u":"checkAllOptionalsArePresentOrAllAreEmpty(java.util.Optional,java.util.Optional,java.util.Optional...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Collection<T>, Function<T, V>)","u":"checkAllSame(java.util.Collection,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Collection<T>, Function<T, V>, String, Object...)","u":"checkAllSame(java.util.Collection,java.util.function.Function,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Function<T, V>, Collection<T>, T, T...)","u":"checkAllSame(java.util.function.Function,java.util.Collection,T,T...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Function<T, V>, Stream<T>, T, T...)","u":"checkAllSame(java.util.function.Function,java.util.stream.Stream,T,T...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Iterable<T>, Function<T, V>, String, Object...)","u":"checkAllSame(java.lang.Iterable,java.util.function.Function,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Iterable<T>, String, Object...)","u":"checkAllSame(java.lang.Iterable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Iterator<T>, Function<T, V>)","u":"checkAllSame(java.util.Iterator,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Iterator<T>, Function<T, V>, String, Object...)","u":"checkAllSame(java.util.Iterator,java.util.function.Function,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSame(Iterator<T>, String, Object...)","u":"checkAllSame(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllSameUsingPredicate(Iterator<T>, Function<T, V>, BiPredicate<V, V>, String, Object...)","u":"checkAllSameUsingPredicate(java.util.Iterator,java.util.function.Function,java.util.function.BiPredicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkAllThreeSame(T, T, T, String, Object...)","u":"checkAllThreeSame(T,T,T,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBBuilder","l":"checkAlreadySet(V, V)","u":"checkAlreadySet(V,V)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkArgument(boolean)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkArgument(boolean, String, Object...)","u":"checkArgument(boolean,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkAtLeastOneOptionalIsPresent(Optional<?>, Optional<?>, Optional<?>...)","u":"checkAtLeastOneOptionalIsPresent(java.util.Optional,java.util.Optional,java.util.Optional...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkBothSame(T, T, BiPredicate<T, T>, String, Object...)","u":"checkBothSame(T,T,java.util.function.BiPredicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkBothSame(T, T, String, Object...)","u":"checkBothSame(T,T,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkConsecutive(Iterable<T>, BiPredicate<T, T>)","u":"checkConsecutive(java.lang.Iterable,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkConsecutive(Iterable<T>, BiPredicate<T, T>, String, Object...)","u":"checkConsecutive(java.lang.Iterable,java.util.function.BiPredicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkConsecutive(Iterator<T>, BiPredicate<T, T>)","u":"checkConsecutive(java.util.Iterator,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkConsecutive(Iterator<T>, BiPredicate<T, T>, String, Object...)","u":"checkConsecutive(java.util.Iterator,java.util.function.BiPredicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkConsecutiveClosedDoubleRanges(Iterator<ClosedRange<Double>>, Epsilon)","u":"checkConsecutiveClosedDoubleRanges(java.util.Iterator,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkDecreasingPerPartialComparison(List<T>, String, Object...)","u":"checkDecreasingPerPartialComparison(java.util.List,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkDecreasingPerPartialComparison(PartialComparator<T>, List<T>, String, Object...)","u":"checkDecreasingPerPartialComparison(com.rb.nonbiz.collections.PartialComparator,java.util.List,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"checkDiscriminatorValue(JsonObject, String, String)","u":"checkDiscriminatorValue(com.google.gson.JsonObject,java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkDoesNotThrow(T)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkDoesNotThrowException(Runnable, String, Object...)","u":"checkDoesNotThrowException(java.lang.Runnable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkDoubleArraysAlmostEqual(double[], double[], Epsilon)","u":"checkDoubleArraysAlmostEqual(double[],double[],com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkDoublesNotIncreasing(Iterable<Double>, Epsilon)","u":"checkDoublesNotIncreasing(java.lang.Iterable,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkDoublesNotIncreasing(Iterable<Double>, Epsilon, String, Object...)","u":"checkDoublesNotIncreasing(java.lang.Iterable,com.rb.nonbiz.types.Epsilon,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkDoublesNotIncreasing(Iterator<Double>, Epsilon, String, Object...)","u":"checkDoublesNotIncreasing(java.util.Iterator,com.rb.nonbiz.types.Epsilon,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkExactlyOneOptionalIsNonEmpty(Optional<T>, Optional<T>)","u":"checkExactlyOneOptionalIsNonEmpty(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.util","c":"RBMapPreconditions","l":"checkIidMapKeysMatchValues(IidMap<V>, Function<V, InstrumentId>)","u":"checkIidMapKeysMatchValues(com.rb.nonbiz.collections.IidMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIidsAreSubset(IidSet, IidSet, String, Object...)","u":"checkIidsAreSubset(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIidsAreSubset(IidSet, Set<InstrumentId>, String, Object...)","u":"checkIidsAreSubset(com.rb.nonbiz.collections.IidSet,java.util.Set,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterable<T>)","u":"checkIncreasing(java.lang.Iterable)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterable<T>, Comparator<T>)","u":"checkIncreasing(java.lang.Iterable,java.util.Comparator)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterable<T>, String, Object...)","u":"checkIncreasing(java.lang.Iterable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterator<T>)","u":"checkIncreasing(java.util.Iterator)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterator<T>, Comparator<T>)","u":"checkIncreasing(java.util.Iterator,java.util.Comparator)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterator<T>, Comparator<T>, String, Object...)","u":"checkIncreasing(java.util.Iterator,java.util.Comparator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkIncreasing(Iterator<T>, String, Object...)","u":"checkIncreasing(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkInRange(T, Range<T>)","u":"checkInRange(T,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkInRange(T, Range<T>, String, Object...)","u":"checkInRange(T,com.google.common.collect.Range,java.lang.String,java.lang.Object...)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"checkInstrumentTypeMapHasNoDuplicateInstruments(InstrumentTypeMap<T>, Function<T, IidSet>)","u":"checkInstrumentTypeMapHasNoDuplicateInstruments(com.rb.biz.types.asset.InstrumentTypeMap,java.util.function.Function)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"checkInstrumentTypeMapHasNoDuplicates(InstrumentTypeMap<T>, Function<T, RBSet<K>>)","u":"checkInstrumentTypeMapHasNoDuplicates(com.rb.biz.types.asset.InstrumentTypeMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkIsNonEmpty(Collection<T>, String, Object...)","u":"checkIsNonEmpty(java.util.Collection,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkIsNonEmpty(IidMap<T>, String, Object...)","u":"checkIsNonEmpty(com.rb.nonbiz.collections.IidMap,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIsSubset(RBSet<T>, RBSet<T>, String, Object...)","u":"checkIsSubset(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIsSubset(RBSet<T>, Set<T>, String, Object...)","u":"checkIsSubset(com.rb.nonbiz.collections.RBSet,java.util.Set,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIsSubset(Set<T>, RBSet<T>, String, Object...)","u":"checkIsSubset(java.util.Set,com.rb.nonbiz.collections.RBSet,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"checkIsSubset(Set<T>, Set<T>, String, Object...)","u":"checkIsSubset(java.util.Set,java.util.Set,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBMapPreconditions","l":"checkMapKeysMatchValues(RBMap<K, V>, Function<V, K>)","u":"checkMapKeysMatchValues(com.rb.nonbiz.collections.RBMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBMapPreconditions","l":"checkMatchingMapInstrumentIds(IidMap<T>)","u":"checkMatchingMapInstrumentIds(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.util","c":"RBMapPreconditions","l":"checkMatchingMapInvestables(RBMap<K, T>)","u":"checkMatchingMapInvestables(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkNoHolesInPredicateBeingTrue(Iterator<T>, Predicate<T>, String, Object...)","u":"checkNoHolesInPredicateBeingTrue(java.util.Iterator,java.util.function.Predicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"HumanReadableLabel","l":"checkNonEmptyLabelWithNoWhitespace(String)","u":"checkNonEmptyLabelWithNoWhitespace(java.lang.String)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkNonEmptyString(String)","u":"checkNonEmptyString(java.lang.String)"},{"p":"com.rb.nonbiz.util","c":"RBBuilder","l":"checkNotAlreadySet(V, V)","u":"checkNotAlreadySet(V,V)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotDecreasing(Iterator<T>, Comparator<T>, String, Object...)","u":"checkNotDecreasing(java.util.Iterator,java.util.Comparator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotDecreasing(Iterator<T>, String, Object...)","u":"checkNotDecreasing(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotIncreasing(Iterable<T>)","u":"checkNotIncreasing(java.lang.Iterable)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotIncreasing(Iterable<T>, String, Object...)","u":"checkNotIncreasing(java.lang.Iterable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotIncreasing(Iterator<T>)","u":"checkNotIncreasing(java.util.Iterator)"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"checkNotIncreasing(Iterator<T>, String, Object...)","u":"checkNotIncreasing(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkNotNull(T)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkNotNull(T, Object)","u":"checkNotNull(T,java.lang.Object)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkNotNull(T, String, Object...)","u":"checkNotNull(T,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkThrows(Runnable, String, Object...)","u":"checkThrows(java.lang.Runnable,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkThrowsThisException(Runnable, Class<E>, String, Object...)","u":"checkThrowsThisException(java.lang.Runnable,java.lang.Class,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(Iterator<T>)","u":"checkUnique(java.util.Iterator)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(Iterator<T>, String, Object...)","u":"checkUnique(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(List<T>)","u":"checkUnique(java.util.List)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(List<T>, String, Object...)","u":"checkUnique(java.util.List,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(Stream<T>)","u":"checkUnique(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(Stream<T>, String, Object...)","u":"checkUnique(java.util.stream.Stream,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkUnique(T, T, T...)","u":"checkUnique(T,T,T...)"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"checkValidArrayElement(int, int)","u":"checkValidArrayElement(int,int)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinLimitedRange(Iterable<T>, Predicate<ClosedRange<T>>)","u":"checkWithinLimitedRange(java.lang.Iterable,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinLimitedRange(Iterable<T>, Predicate<ClosedRange<T>>, String, Object...)","u":"checkWithinLimitedRange(java.lang.Iterable,java.util.function.Predicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinLimitedRange(Iterator<T>, Predicate<ClosedRange<T>>)","u":"checkWithinLimitedRange(java.util.Iterator,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinLimitedRange(Iterator<T>, Predicate<ClosedRange<T>>, String, Object...)","u":"checkWithinLimitedRange(java.util.Iterator,java.util.function.Predicate,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinSeconds(Iterable<LocalDateTime>, long)","u":"checkWithinSeconds(java.lang.Iterable,long)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"checkWithinSeconds(Iterator<LocalDateTime>, long)","u":"checkWithinSeconds(java.util.Iterator,long)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"checkYearIsReasonable(Year)","u":"checkYearIsReasonable(java.time.Year)"},{"p":"com.rb.nonbiz.reflection","c":"ClassesWithDepthMultilineStringFormatter","l":"ClassesWithDepthMultilineStringFormatter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"classMatcher(Class<T>)","u":"classMatcher(java.lang.Class)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBClassToInstanceMapMatchers","l":"classToInstanceMapEqualityMatcher(ClassToInstanceMap<T>)","u":"classToInstanceMapEqualityMatcher(com.google.common.collect.ClassToInstanceMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBClassToInstanceMapMatchers","l":"classToInstanceMapGeneralMatcher(ClassToInstanceMap<T>, RBMap<Class<? extends T>, RBMatchers.MatcherGenerator<? extends T>>)","u":"classToInstanceMapGeneralMatcher(com.google.common.collect.ClassToInstanceMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.reflection","c":"ClassWithDepth","l":"classWithDepth(Class<?>, int)","u":"classWithDepth(java.lang.Class,int)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor","l":"clazz"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"clear()"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"clear(int, int)","u":"clear(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"clear(R, C)","u":"clear(R,C)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"closedDoubleRangeContainsWellWithinBounds(ClosedRange<Double>, double)","u":"closedDoubleRangeContainsWellWithinBounds(com.rb.nonbiz.collections.ClosedRange,double)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"closedDoubleRangeContainsWellWithinBounds(ClosedRange<Double>, double, Epsilon)","u":"closedDoubleRangeContainsWellWithinBounds(com.rb.nonbiz.collections.ClosedRange,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"closedDoubleRangeEpsilonContains(ClosedRange<Double>, double)","u":"closedDoubleRangeEpsilonContains(com.rb.nonbiz.collections.ClosedRange,double)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"closedDoubleRangeEpsilonContains(ClosedRange<Double>, double, Epsilon)","u":"closedDoubleRangeEpsilonContains(com.rb.nonbiz.collections.ClosedRange,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"closedRange(Range<T>)","u":"closedRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"closedRange(T, T)","u":"closedRange(T,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"closedRangeToJsonObject(Range<C>, Function<C, JsonElement>)","u":"closedRangeToJsonObject(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"closedSignedFractionRange(SignedFraction, SignedFraction)","u":"closedSignedFractionRange(com.rb.nonbiz.types.SignedFraction,com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"closedSignedFractionRanges(RBMap<K, ClosedSignedFractionRange>)","u":"closedSignedFractionRanges(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"closedUnitFractionHardAndPossiblySameSoftRange(ClosedUnitFractionRange, ClosedUnitFractionRange)","u":"closedUnitFractionHardAndPossiblySameSoftRange(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.ClosedUnitFractionRange)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"closedUnitFractionHardAndSoftRange(ClosedUnitFractionRange, ClosedUnitFractionRange)","u":"closedUnitFractionHardAndSoftRange(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.ClosedUnitFractionRange)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"closedUnitFractionHardAndSoftRanges(RBMap<K, ClosedUnitFractionHardAndSoftRange>)","u":"closedUnitFractionHardAndSoftRanges(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRangesShrinker","l":"ClosedUnitFractionHardAndSoftRangesShrinker()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"closedUnitFractionHardToSoftRangeTighteningInstructions(UnitFraction, UnitFraction)","u":"closedUnitFractionHardToSoftRangeTighteningInstructions(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"closedUnitFractionIidHardAndSoftRanges(IidMap<ClosedUnitFractionHardAndSoftRange>)","u":"closedUnitFractionIidHardAndSoftRanges(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"closedUnitFractionRange(ClosedRange<UnitFraction>)","u":"closedUnitFractionRange(com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"closedUnitFractionRange(Range<UnitFraction>)","u":"closedUnitFractionRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"closedUnitFractionRange(UnitFraction, UnitFraction)","u":"closedUnitFractionRange(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"closedUnitFractionRanges(RBMap<K, ClosedUnitFractionRange>)","u":"closedUnitFractionRanges(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeShrinker","l":"ClosedUnitFractionRangeShrinker()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangesUtilities","l":"closedUnitFractionRangesIntersectionOrThrow(ClosedUnitFractionRanges<K>, ClosedUnitFractionRanges<K>)","u":"closedUnitFractionRangesIntersectionOrThrow(com.rb.nonbiz.collections.ClosedUnitFractionRanges,com.rb.nonbiz.collections.ClosedUnitFractionRanges)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangesUtilities","l":"closedUnitFractionRangesIntersectionOrThrow(List<ClosedUnitFractionRanges<K>>)","u":"closedUnitFractionRangesIntersectionOrThrow(java.util.List)"},{"p":"com.rb.nonbiz.jsonapi","c":"ClosedUnitFractionRangesJsonApiConverter","l":"ClosedUnitFractionRangesJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangesUtilities","l":"ClosedUnitFractionRangesUtilities()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"ClosedUnitFractionRangeUtilities()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"coarseScaleRoundingSameAsFineScale(RoundingScale, RoundingScale)","u":"coarseScaleRoundingSameAsFineScale(com.rb.biz.types.trading.RoundingScale,com.rb.biz.types.trading.RoundingScale)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"collectionJsonApiPropertyDescriptor(JsonApiPropertyDescriptor)","u":"collectionJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"collectionJsonApiPropertyDescriptor(JsonApiPropertyDescriptor, JsonPropertySpecificDocumentation)","u":"collectionJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"columnCardinality(int)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"compareOptionalDoubles(OptionalDouble, OptionalDouble)","u":"compareOptionalDoubles(java.util.OptionalDouble,java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"compareOptionalInts(OptionalInt, OptionalInt)","u":"compareOptionalInts(java.util.OptionalInt,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"compareOptionalInts(T, T, Function<T, OptionalInt>)","u":"compareOptionalInts(T,T,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"compareOptionals(Comparator<T>, Optional<T>, Optional<T>)","u":"compareOptionals(java.util.Comparator,java.util.Optional,java.util.Optional)"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"compareTo(AnnuallyCompoundedAnnualizedReturn)","u":"compareTo(com.rb.biz.investing.quality.AnnuallyCompoundedAnnualizedReturn)"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"compareTo(ContinuouslyCompoundedAnnualizedReturn)","u":"compareTo(com.rb.biz.investing.quality.ContinuouslyCompoundedAnnualizedReturn)"},{"p":"com.rb.nonbiz.types","c":"HasLongRepresentation","l":"compareTo(HasLongRepresentation)","u":"compareTo(com.rb.nonbiz.types.HasLongRepresentation)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"compareTo(RoundingScale)","u":"compareTo(com.rb.biz.types.trading.RoundingScale)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"compareTo(T)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"compareTo(T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"compareTo(T)"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"compareTo(UniqueId<T>)","u":"compareTo(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"compareTo(UnitFraction)","u":"compareTo(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"complement()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"complement()"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"composeComparators(Comparator<T>, Comparator<T>...)","u":"composeComparators(java.util.Comparator,java.util.Comparator...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"composeComparators(Comparator<T>, List<Comparator<T>>)","u":"composeComparators(java.util.Comparator,java.util.List)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"compoundWith(OnesBasedReturn)","u":"compoundWith(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"computeVariance(RBMatrix, RBMatrix)","u":"computeVariance(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.math.vectorspaces.RBMatrix)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"concatenateFirstAndRest(K, K...)","u":"concatenateFirstAndRest(K,K...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateFirstAndRest(K, K...)","u":"concatenateFirstAndRest(K,K...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"concatenateFirstAndRestDoubles(double, double...)","u":"concatenateFirstAndRestDoubles(double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateFirstAndRestDoubles(double, double...)","u":"concatenateFirstAndRestDoubles(double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"concatenateFirstSecondAndRest(K, K, K...)","u":"concatenateFirstSecondAndRest(K,K,K...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateFirstSecondAndRest(K, K, K...)","u":"concatenateFirstSecondAndRest(K,K,K...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"concatenateFirstSecondAndRestDoubles(double, double, double...)","u":"concatenateFirstSecondAndRestDoubles(double,double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateFirstSecondAndRestDoubles(double, double, double...)","u":"concatenateFirstSecondAndRestDoubles(double,double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"concatenateFirstSecondThirdAndRest(K, K, K, K...)","u":"concatenateFirstSecondThirdAndRest(K,K,K,K...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateFirstSecondThirdAndRest(K, K, K, K...)","u":"concatenateFirstSecondThirdAndRest(K,K,K,K...)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"concatenateMapsIntoLinkedHashMap(Map<K, V>, Map<K, V>)","u":"concatenateMapsIntoLinkedHashMap(java.util.Map,java.util.Map)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"concatenateStreams(Stream<T>, Stream<T>, Stream<T>, Stream<T>...)","u":"concatenateStreams(java.util.stream.Stream,java.util.stream.Stream,java.util.stream.Stream,java.util.stream.Stream...)"},{"p":"com.rb.biz.guice.modules","c":"RBCommonsTestModule","l":"configure(Binder)","u":"configure(com.google.inject.Binder)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"consecutiveNonOverlappingPairs(Iterable<T>)","u":"consecutiveNonOverlappingPairs(java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"consecutiveNonOverlappingPairsIterator(Iterator<T>)","u":"consecutiveNonOverlappingPairsIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"consecutiveNonOverlappingPairsStream(Iterable<T>, BiFunction<T, T, V>)","u":"consecutiveNonOverlappingPairsStream(java.lang.Iterable,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"consecutivePairs(Iterable<T>)","u":"consecutivePairs(java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"consecutivePairsForEach(Iterable<T>, BiConsumer<T, T>)","u":"consecutivePairsForEach(java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"consecutivePairsForEach(Iterator<T>, BiConsumer<T, T>)","u":"consecutivePairsForEach(java.util.Iterator,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"consecutivePairsIterator(Iterator<T>)","u":"consecutivePairsIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"consecutivePairsStream(Iterable<T>, BiFunction<T, T, V>)","u":"consecutivePairsStream(java.lang.Iterable,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"consecutiveTuplesForEach(int, Iterable<T>, Consumer<List<T>>)","u":"consecutiveTuplesForEach(int,java.lang.Iterable,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"consecutiveTuplesForEach(int, Iterator<T>, Consumer<List<T>>)","u":"consecutiveTuplesForEach(int,java.util.Iterator,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"consecutiveTuplesIterator(int, Iterator<T>)","u":"consecutiveTuplesIterator(int,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"constantItemIterator(T)"},{"p":"com.rb.nonbiz.math.sequence","c":"ConstantSequence","l":"constantSequence(T)"},{"p":"com.rb.nonbiz.jsonapi","c":"ConstantSequenceJsonApiConverter","l":"ConstantSequenceJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"constantValueArithmeticProgression(T)"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"constantValueGeometricProgression(T)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"constructDoubleRangeAllowingNaN(double, double)","u":"constructDoubleRangeAllowingNaN(double,double)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"constructRange(Optional<P>, BoundType, Optional<P>, BoundType)","u":"constructRange(java.util.Optional,com.google.common.collect.BoundType,java.util.Optional,com.google.common.collect.BoundType)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"contains(SignedFraction)","u":"contains(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"contains(T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"contains(T)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"contains(UnitFraction)","u":"contains(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"containsAll(Collection<? extends T>)","u":"containsAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"containsAll(Collection<? extends T>)","u":"containsAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"containsAll(Collection<? extends T>)","u":"containsAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"containsAll(Collection<? extends T>)","u":"containsAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"containsAll(HasLongSet<T>)","u":"containsAll(com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"containsDate(LocalDate)","u":"containsDate(java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"containsIgnoringCase(String)","u":"containsIgnoringCase(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"containsInteriorPoint(UnitFraction)","u":"containsInteriorPoint(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"containsKey(E)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"containsKey(E)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"containsKey(InstrumentId)","u":"containsKey(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"containsKey(InstrumentId)","u":"containsKey(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"containsKey(K)"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"containsKey(T)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"containsKey(UniqueId<K>)","u":"containsKey(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"containsKeys(X, Y, Z)","u":"containsKeys(X,Y,Z)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"containsKeys(X, Y, Z)","u":"containsKeys(X,Y,Z)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"containsOnlyKey(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"containsOnlyKey(K)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"containsRowAndColumnKeys(R, C)","u":"containsRowAndColumnKeys(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"containsRowAndColumnKeys(R, C)","u":"containsRowAndColumnKeys(R,C)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"containsValue(V)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.ContextSpecific","l":"ContextSpecific()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"contiguousDiscreteRangeMap(List<Range<K>>, List<V>, UnaryOperator<K>)","u":"contiguousDiscreteRangeMap(java.util.List,java.util.List,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"contiguousNonDiscreteRangeCollectionWithEnd(List<K>, ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment)","u":"contiguousNonDiscreteRangeCollectionWithEnd(java.util.List,com.rb.nonbiz.collections.ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"contiguousNonDiscreteRangeCollectionWithNoEnd(List<K>)","u":"contiguousNonDiscreteRangeCollectionWithNoEnd(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"contiguousNonDiscreteRangeMapWithEnd(List<K>, List<V>, K)","u":"contiguousNonDiscreteRangeMapWithEnd(java.util.List,java.util.List,K)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"contiguousNonDiscreteRangeMapWithNoEnd(List<K>, List<V>)","u":"contiguousNonDiscreteRangeMapWithNoEnd(java.util.List,java.util.List)"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"continuouslyCompoundedAnnualizedReturn(OnesBasedReturn)","u":"continuouslyCompoundedAnnualizedReturn(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArrays","l":"convertClosedRangeToRBJsonDoubleArray(ClosedRange<P>)","u":"convertClosedRangeToRBJsonDoubleArray(com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.testmatchers","c":"LambdaSwitchCase","l":"convertToTypeV(T)"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"coordinates(int...)"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"coordinatesAllZero(int)"},{"p":"com.rb.nonbiz.jsonapi","c":"CoordinatesJsonApiConverter","l":"CoordinatesJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"copyPart(ClosedRange<MatrixRowIndex>, ClosedRange<MatrixColumnIndex>)","u":"copyPart(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"copyTopLeftPart(MatrixRowIndex, MatrixColumnIndex)","u":"copyTopLeftPart(com.rb.nonbiz.math.vectorspaces.MatrixRowIndex,com.rb.nonbiz.math.vectorspaces.MatrixColumnIndex)"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"copyWithChangedNthItem(int, int)","u":"copyWithChangedNthItem(int,int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"copyWithEntriesTransformed(TriFunction<Integer, K, V, V2>)","u":"copyWithEntriesTransformed(com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"copyWithEntriesTransformed(TriFunction<Integer, K, V, V2>)","u":"copyWithEntriesTransformed(com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"copyWithFilteredRows(Predicate<SimpleCsvRow>)","u":"copyWithFilteredRows(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"copyWithInstrumentIdRemoved(InstrumentId)","u":"copyWithInstrumentIdRemoved(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"copyWithKeyRemoved(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"copyWithKeysRemoved(RBSet<K>)","u":"copyWithKeysRemoved(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"copyWithModifiedElement(List<T>, int, UnaryOperator<T>)","u":"copyWithModifiedElement(java.util.List,int,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"copyWithOverrideIfUnrestricted(K, ClosedUnitFractionHardAndSoftRange)","u":"copyWithOverrideIfUnrestricted(K,com.rb.nonbiz.types.ClosedUnitFractionHardAndSoftRange)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"copyWithOverridesApplied(RBMap<K, V>)","u":"copyWithOverridesApplied(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"copyWithPossiblyAbsentInstrumentIdsRemoved(IidSet)","u":"copyWithPossiblyAbsentInstrumentIdsRemoved(com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"copyWithPresentInstrumentIdsRemoved(IidSet)","u":"copyWithPresentInstrumentIdsRemoved(com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"copyWithPutOrModifyExisting(K, V, BinaryOperator<V>)","u":"copyWithPutOrModifyExisting(K,V,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"copyWithReplacedDefaultValue(V)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"copyWithValuesReplaced(V2[])"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"copyWithValuesReplaced(V2[])"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"copyWithValuesTransformed(Function<V, V2>)","u":"copyWithValuesTransformed(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"copyWithValuesTransformed(Function<V, V2>)","u":"copyWithValuesTransformed(java.util.function.Function)"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"correlation(double)"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"Correlation(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"counterBuilder()"},{"p":"com.rb.nonbiz.date","c":"CalendarDays","l":"countWeekdaysBetween(LocalDate, LocalDate)","u":"countWeekdaysBetween(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"createUnitVectorDoubleArray(int, int)","u":"createUnitVectorDoubleArray(int,int)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"csvColumnExtractorAllowingInvalidValues(String, Function<String, Optional<T>>)","u":"csvColumnExtractorAllowingInvalidValues(java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"csvColumnExtractorThatThrowsOnInvalidValues(String, Function<String, T>)","u":"csvColumnExtractorThatThrowsOnInvalidValues(java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnInclusionFilter","l":"csvColumnInclusionFilter(RBSet<String>)","u":"csvColumnInclusionFilter(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvLineSplitter","l":"CsvLineSplitter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"cutFromArray(int[], int)","u":"cutFromArray(int[],int)"},{"p":"com.rb.nonbiz.reflection","c":"DataClassRecursiveEnumerator","l":"DataClassRecursiveEnumerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"dateFromYyyyMmDd(String)","u":"dateFromYyyyMmDd(java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY0"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY1"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY2"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY3"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY4"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY5"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY6"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY7"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DAY8"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"debug(String, Object...)","u":"debug(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"debug(Supplier<String>)","u":"debug(java.util.function.Supplier)"},{"p":"com.rb.nonbiz.math.eigen","c":"DecreasingPositiveDoubles","l":"decreasingPositiveDoubles(List<Double>)","u":"decreasingPositiveDoubles(java.util.List)"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"decrement()"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"DEFAULT_EPSILON_1e_8"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"DEFAULT_INITIAL_SIZE"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"DEFAULT_LOAD_FACTOR"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"DEFAULT_LOAD_FACTOR"},{"p":"com.rb.biz.investing.modeling","c":"RBCommonsConstants","l":"DEFAULT_MATH_CONTEXT"},{"p":"com.rb.nonbiz.types","c":"PositiveEpsilon","l":"DEFAULT_POSITIVE_EPSILON_1e_8"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"definedPartialComparison(int)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"definedPartialComparison(V, V, Function<V, F>, Comparator<F>)","u":"definedPartialComparison(V,V,java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers.RBTypeSafeMatcher","l":"describeTo(Description)","u":"describeTo(org.hamcrest.Description)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"detailedPartitionModificationBuilder()"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"deterministicOrderedListComparator()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"deviations(RBMap<K, SignedFraction>)","u":"deviations(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBSquareMatrix","l":"diagonalRBSquareMatrix(RBVector)","u":"diagonalRBSquareMatrix(com.rb.nonbiz.math.vectorspaces.RBVector)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"difference(RBSet<T>, RBSet<T>)","u":"difference(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"difference(RBSet<T>, Set<T>)","u":"difference(com.rb.nonbiz.collections.RBSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"difference(Set<T>, RBSet<T>)","u":"difference(java.util.Set,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"differenceOfIidSets(IidSet, IidSet)","u":"differenceOfIidSets(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"differenceOfIidSets(IidSet, Set<InstrumentId>)","u":"differenceOfIidSets(com.rb.nonbiz.collections.IidSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"differenceOfIidSets(Set<InstrumentId>, IidSet)","u":"differenceOfIidSets(java.util.Set,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.io","c":"DirectoryContentsLister","l":"DirectoryContentsLister()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"DirectoryCreator","l":"DirectoryCreator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"DirectoryExistsChecker","l":"directoryExists(String)","u":"directoryExists(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"DirectoryExistsChecker","l":"DirectoryExistsChecker()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMasters","l":"displaySymbol(HasInstrumentId, InstrumentMaster, LocalDate)","u":"displaySymbol(com.rb.biz.types.asset.HasInstrumentId,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMasters","l":"displaySymbol(InstrumentId, InstrumentMaster, LocalDate)","u":"displaySymbol(com.rb.biz.types.asset.InstrumentId,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMasters","l":"displaySymbol(InstrumentId, InstrumentMaster, LocalDate, boolean)","u":"displaySymbol(com.rb.biz.types.asset.InstrumentId,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMasters","l":"displaySymbolForAssetId(AssetId, InstrumentMaster, LocalDate, boolean)","u":"displaySymbolForAssetId(com.rb.biz.types.asset.AssetId,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.biz.types","c":"Money","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Price","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"divide(BigDecimal)","u":"divide(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Money","l":"divide(double)"},{"p":"com.rb.biz.types","c":"Price","l":"divide(double)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"divide(double)"},{"p":"com.rb.biz.types","c":"Money","l":"divide(Money)","u":"divide(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"Money","l":"divide(PositiveQuantity)","u":"divide(com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.biz.types","c":"Money","l":"divide(Price)","u":"divide(com.rb.biz.types.Price)"},{"p":"com.rb.biz.types","c":"Price","l":"divide(Price)","u":"divide(com.rb.biz.types.Price)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"divide(Price)","u":"divide(com.rb.biz.types.Price)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"divide(SignedFraction)","u":"divide(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"divide(UnitFraction)","u":"divide(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.text","c":"HumanReadableDocumentation","l":"documentation(String)","u":"documentation(java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"doesNotImplementPrintsInstruments()"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"dotProduct(Iterator<Double>, Iterator<Double>)","u":"dotProduct(java.util.Iterator,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"dotProduct(List<Double>, List<Double>)","u":"dotProduct(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"dotProduct(RBVector)","u":"dotProduct(com.rb.nonbiz.math.vectorspaces.RBVector)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"dotProductOfRBEnumMaps(RBEnumMap<E, V1>, RBEnumMap<E, V2>)","u":"dotProductOfRBEnumMaps(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"dotProductOfRBMaps(RBMap<K, V1>, RBMap<K, V2>)","u":"dotProductOfRBMaps(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"doubleAlmostEqualsMatcher(double, Epsilon)","u":"doubleAlmostEqualsMatcher(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"doubleApproximatelyExplained(Epsilon, double, double, double...)","u":"doubleApproximatelyExplained(com.rb.nonbiz.types.Epsilon,double,double,double...)"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"doubleArithmeticProgression(double, double)","u":"doubleArithmeticProgression(double,double)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"doubleArray2DMatcher(double[][], Epsilon)","u":"doubleArray2DMatcher(double[][],com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"doubleArrayMatcher(double[], Epsilon)","u":"doubleArrayMatcher(double[],com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"DoubleArraysAverager","l":"DoubleArraysAverager()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"doubleClosedRangeMatcher(ClosedRange<Double>, Epsilon)","u":"doubleClosedRangeMatcher(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"doubleExplained(double, double, double...)","u":"doubleExplained(double,double,double...)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"doubleFromJsonBps(JsonElement)","u":"doubleFromJsonBps(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"doubleFromJsonPercentage(JsonElement)","u":"doubleFromJsonPercentage(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"doubleGeometricProgression(double, PositiveMultiplier)","u":"doubleGeometricProgression(double,com.rb.nonbiz.types.PositiveMultiplier)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"doubleIsAlmostEqualTo(Epsilon)","u":"doubleIsAlmostEqualTo(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"doubleIsWithin(UnitFraction)","u":"doubleIsWithin(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"doubleIteratorMatcher(Iterator<Double>, Epsilon)","u":"doubleIteratorMatcher(java.util.Iterator,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"doubleListMatcher(List<Double>, Epsilon)","u":"doubleListMatcher(java.util.List,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"doubleMap(RBMap<K, Double>)","u":"doubleMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMaps","l":"doubleMapOfRBNumeric(RBMap<K, N>)","u":"doubleMapOfRBNumeric(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMaps","l":"DoubleMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"DoubleMovement","l":"doubleMovement(double, double)","u":"doubleMovement(double,double)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"doubleMustIncreaseByAtLeast(UnitFraction)","u":"doubleMustIncreaseByAtLeast(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"doubleMustNotDecreaseByMoreThan(UnitFraction)","u":"doubleMustNotDecreaseByMoreThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"doubleMustNotIncreaseByMoreThan(UnitFraction)","u":"doubleMustNotIncreaseByMoreThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeContainsWellWithinBounds(Range<Double>, double)","u":"doubleRangeContainsWellWithinBounds(com.google.common.collect.Range,double)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeContainsWellWithinBounds(Range<Double>, double, Epsilon)","u":"doubleRangeContainsWellWithinBounds(com.google.common.collect.Range,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeIsAlmostSinglePoint(Range<Double>)","u":"doubleRangeIsAlmostSinglePoint(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeIsAlmostSinglePoint(Range<Double>, Epsilon)","u":"doubleRangeIsAlmostSinglePoint(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeIsAlmostThisSinglePoint(Range<Double>, double)","u":"doubleRangeIsAlmostThisSinglePoint(com.google.common.collect.Range,double)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"doubleRangeIsAlmostThisSinglePoint(Range<Double>, double, Epsilon)","u":"doubleRangeIsAlmostThisSinglePoint(com.google.common.collect.Range,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"doubleRangeMatcher(Range<Double>, Epsilon)","u":"doubleRangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"doubleStream()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBStreamMatchers","l":"doubleStreamMatcher(Stream<Double>, Epsilon)","u":"doubleStreamMatcher(java.util.stream.Stream,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"DoublesWeighter","l":"DoublesWeighter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"doubleValue"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"doubleValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"doubleValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"doubleValue()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_BIG_DECIMAL"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_BOOLEAN"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_BUY_QUANTITY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_CORRELATION"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_DATE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_DOUBLE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_DOUBLE_MATRIX_1D"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"DUMMY_ETF_INSTRUMENT_ID"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"DUMMY_INSTRUMENT_ID"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_LABEL"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_LONG"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_MARKET_DATE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_MARKET_TIME"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_MONEY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_NEGATIVE_DOUBLE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_NON_NEGATIVE_QUANTITY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_ONES_BASED_GAIN"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_ONES_BASED_RETURN"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_POSITIVE_DOUBLE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_POSITIVE_INTEGER"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_POSITIVE_MULTIPLIER"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_POSITIVE_QUANTITY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_POSITIVE_SIGNED_MONEY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_PRICE"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_RATIONAL_FRACTION"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SEED"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SELL_QUANTITY"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"DUMMY_SIGNED_FRACTION"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SIGNED_MONEY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SIGNED_QUANTITY"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SPLIT_MULTIPLIER"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_STRING"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_SYMBOL"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_TIME"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"DUMMY_UNIQUE_STRING_ID"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"DUMMY_UNIT_FRACTION"},{"p":"com.rb.biz.guice","c":"RBClock","l":"EAST_COAST_ZONE_ID"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"EAST_COAST_ZONE_ID"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"eitherInitializeOrUpdate(E, Supplier<V>, UnaryOperator<V>)","u":"eitherInitializeOrUpdate(E,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"eitherInitializeOrUpdate(K, Supplier<V>, UnaryOperator<V>)","u":"eitherInitializeOrUpdate(K,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"eitherInitializeOrUpdate(K, Supplier<V>, UnaryOperator<V>)","u":"eitherInitializeOrUpdate(K,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBEitherMatchers","l":"eitherLeftOnlyMatcher(L, RBMatchers.MatcherGenerator<L>)","u":"eitherLeftOnlyMatcher(L,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBEitherMatchers","l":"eitherMatcher(Either<L, R>, RBMatchers.MatcherGenerator<L>, RBMatchers.MatcherGenerator<R>)","u":"eitherMatcher(com.rb.nonbiz.collections.Either,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"eitherOrBoth(Optional<L>, Optional<R>)","u":"eitherOrBoth(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"eitherOrBothOfSameType(Optional<T>, Optional<T>)","u":"eitherOrBothOfSameType(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"eitherOrNeither(Optional<L>, Optional<R>)","u":"eitherOrNeither(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"eitherOrNeitherFromOptionalEither(Optional<Either<L, R>>)","u":"eitherOrNeitherFromOptionalEither(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"eitherOrNeitherOfSameType(Optional<T>, Optional<T>)","u":"eitherOrNeitherOfSameType(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBEitherMatchers","l":"eitherRightOnlyMatcher(R, RBMatchers.MatcherGenerator<R>)","u":"eitherRightOnlyMatcher(R,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"EMPTY_INSTRUMENT_ID_LIST"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"EMPTY_INSTRUMENT_ID_SET"},{"p":"com.rb.nonbiz.collections","c":"RBBitSets","l":"emptyBitSet()"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"emptyCaseInsensitiveStringFilter()"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"emptyClosedSignedFractionRanges()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"emptyClosedUnitFractionHardAndSoftRanges()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"emptyClosedUnitFractionIidHardAndSoftRanges()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"emptyClosedUnitFractionRanges()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"emptyDetailedPartitionModification()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"emptyDeviations()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"emptyDoubleMap()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"emptyHasInstrumentIdMap()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"emptyHasInstrumentIdSet()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"emptyIidBiMap()"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"emptyIidMap()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"emptyIidMapByInstrumentTypeWithSharedDefaults(V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"emptyIidMapWithDefault(V)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"emptyIidSet()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"emptyImmutableDoubleIndexableArray2D()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"emptyImmutableIndexableArray1D(V[])"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"emptyImmutableIndexableArray2D(V[][])"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"emptyImmutableIndexableArray3D(V[][][])"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"emptyImmutableIntegerIndexableArray2D()"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"emptyJsonArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"emptyJsonObject()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"emptyJsonValidationInstructions()"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"emptyLabel()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"emptyMatcherEpsilons()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"emptyMoneySignedFraction()"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"emptyMoneyUnitFraction()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"emptyMutableIndexableArray1D()"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"emptyNearbyDatesMap(int)"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"emptyNonZeroDeviations()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"emptyOptionalIntMatcher()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"emptyOptionalMatcher()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"emptyPositiveMultipliersIidMap()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"emptyPositiveMultipliersMap()"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"emptyRBCategoryMap(V)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"emptyRBEnumMap(Class<E>)","u":"emptyRBEnumMap(java.lang.Class)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"emptyRBIncreasingSet()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"emptyRBJsonDoubleArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray","l":"emptyRBJsonLocalDateArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"emptyRBJsonStringArray()"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"emptyRBListWithSpecialValue()"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"emptyRBMap()"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"emptyRBMapOfHasUniqueId()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"emptyRBMapWithDefault(V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"emptyRBMapWithOptionalDefault(Optional<V>)","u":"emptyRBMapWithOptionalDefault(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"emptyRBMapWithOptionalDefaultMissing()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"emptyRBMapWithOptionalDefaultPresent(V)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"emptyRBSet()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"emptyRBSetOfHasUniqueId()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"emptyRBSortedSet()"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"emptySimpleArrayIndexMapping()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"emptySimplePartitionModification()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"emptyTest()"},{"p":"com.rb.biz.types.asset","c":"TestHasStringList","l":"emptyTestHasStringList()"},{"p":"com.rb.nonbiz.reflection","c":"UniqueClassesWithDepth","l":"emptyUniqueClassesWithDepth()"},{"p":"com.rb.biz.marketdata","c":"InstrumentIdGenerator","l":"encodedIdGenerator"},{"p":"com.rb.biz.marketdata","c":"EncodedIdGenerator","l":"EncodedIdGenerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"entrySet()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"entrySet()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"entrySet()"},{"p":"com.rb.nonbiz.reflection","c":"DataClassRecursiveEnumerator","l":"enumerateNonRecursively(Class<?>, RBSet<Class<?>>)","u":"enumerateNonRecursively(java.lang.Class,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.reflection","c":"DataClassRecursiveEnumerator","l":"enumerateRecursively(Class<?>, RBSet<Class<?>>)","u":"enumerateRecursively(java.lang.Class,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"enumJsonApiPropertyDescriptor(Class<E>)","u":"enumJsonApiPropertyDescriptor(java.lang.Class)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"enumMatcher(V)"},{"p":"com.rb.nonbiz.util","c":"EnumStringRoundTripConversionInfo","l":"enumStringRoundTripConversionInfo(Class<E>)","u":"enumStringRoundTripConversionInfo(java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassWideMatcherEpsilonDescriptor","l":"eps(Class<T>)","u":"eps(java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.GetterSpecificMatcherEpsilonDescriptor","l":"eps(Class<T>, Class<V>)","u":"eps(java.lang.Class,java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassPlusStringKeyMatcherEpsilonDescriptor","l":"eps(Class<T>, UniqueId<Epsilon>)","u":"eps(java.lang.Class,com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"EPSILON_FOR_SNAPPING_TO_ROUND_NUMBER"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"EPSILON_SEED"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"epsilon(double)"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"Epsilon(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.nonbiz.types","c":"AcceptableDifference","l":"epsilonAsDiff(Epsilon)","u":"epsilonAsDiff(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"AcceptableDifference","l":"epsilonAsFraction(UnitFraction)","u":"epsilonAsFraction(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"epsilonCompareBigDecimals(BigDecimal, BigDecimal, Epsilon, RBDoubles.EpsilonComparisonVisitor<T>)","u":"epsilonCompareBigDecimals(java.math.BigDecimal,java.math.BigDecimal,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.RBDoubles.EpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"epsilonCompareDoubles(double, double, Epsilon, RBDoubles.EpsilonComparisonVisitor<T>)","u":"epsilonCompareDoubles(double,double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.RBDoubles.EpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"epsilonCompareDoublesAllowingEpsilonOfZero(double, double, Epsilon, RBDoubles.EpsilonComparisonVisitor<T>)","u":"epsilonCompareDoublesAllowingEpsilonOfZero(double,double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.RBDoubles.EpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValues","l":"epsilonCompareImpreciseValues(T1, T1, Epsilon, RBDoubles.EpsilonComparisonVisitor<T2>)","u":"epsilonCompareImpreciseValues(T1,T1,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.RBDoubles.EpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.types","c":"PreciseValues","l":"epsilonComparePreciseValues(P1, P2, Epsilon, PreciseValues.BigDecimalsEpsilonComparisonVisitor<T>)","u":"epsilonComparePreciseValues(P1,P2,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.PreciseValues.BigDecimalsEpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.types","c":"PreciseValues","l":"epsilonComparePreciseValuesAsDoubles(T1, T1, Epsilon, RBDoubles.EpsilonComparisonVisitor<T2>)","u":"epsilonComparePreciseValuesAsDoubles(T1,T1,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.RBDoubles.EpsilonComparisonVisitor)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"epsilonForNumericsElseEqualityMatcher(T, Epsilon)","u":"epsilonForNumericsElseEqualityMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassPlusStringKeyMatcherEpsilonDescriptor","l":"epsilonId(String)","u":"epsilonId(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"equal()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"equalAsHasLongSets(List<T>, HasLongSet<T>)","u":"equalAsHasLongSets(java.util.List,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"equalAsSets(List<T>, RBSet<T>)","u":"equalAsSets(java.util.List,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"equalAsSets(List<T>, Set<T>)","u":"equalAsSets(java.util.List,java.util.Set)"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.biz.types","c":"Symbol","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.collections","c":"RBVoid","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassPlusStringKeyMatcherEpsilonDescriptor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassWideMatcherEpsilonDescriptor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.GetterSpecificMatcherEpsilonDescriptor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.text","c":"HumanReadableDocumentation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.types","c":"RBLongId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"error(String, Object...)","u":"error(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"error(Supplier<String>)","u":"error(java.util.function.Supplier)"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"ETF_6"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.EtfInstrumentType","l":"etfInstrumentType()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.EtfInstrumentType","l":"EtfInstrumentType()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"N_aryFunction","l":"evaluate(List<X>)","u":"evaluate(java.util.List)"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryFunction","l":"evaluate(List<X>, X)","u":"evaluate(java.util.List,X)"},{"p":"com.rb.nonbiz.types","c":"AcceptableDifference","l":"exactlySame()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment","l":"EXCLUDE"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest","l":"EXCLUDE"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"excludeEverything()"},{"p":"com.rb","c":"ExcludeSlowTestsSuiteRBCommons","l":"ExcludeSlowTestsSuiteRBCommons()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"excludeTheseIncludeRest(RBSet<T>)","u":"excludeTheseIncludeRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"excludeTheseUseRulesForRest(RBSet<T>)","u":"excludeTheseUseRulesForRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.threads","c":"ExecutorCompletionServiceProvider","l":"ExecutorCompletionServiceProvider()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"ExistenceOf","l":"existenceOf(boolean)"},{"p":"com.rb.nonbiz.types","c":"ExistenceOf","l":"existenceOfItems(T)"},{"p":"com.rb.nonbiz.collections","c":"PartitionExtender","l":"extend(Partition<K>, K, UnitFraction)","u":"extend(com.rb.nonbiz.collections.Partition,K,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"extendDoubleRangeBiDirectionally(Range<Double>, double)","u":"extendDoubleRangeBiDirectionally(com.google.common.collect.Range,double)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"extractOptionalValue(String)","u":"extractOptionalValue(java.lang.String)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"extractValueOrThrow(String)","u":"extractValueOrThrow(java.lang.String)"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"FakeInstruments()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"fallsOnWeekend(LocalDate)","u":"fallsOnWeekend(java.time.LocalDate)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"fileByDateStringFormat(String)","u":"fileByDateStringFormat(java.lang.String)"},{"p":"com.rb.nonbiz.jsonapi","c":"FileByDateStringFormatJsonApiConverter","l":"FileByDateStringFormatJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"FileExistsChecker","l":"fileExists(String)","u":"fileExists(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileExistsChecker","l":"FileExistsChecker()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"FileLinesIteratorGenerator","l":"FileLinesIteratorGenerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"Filename","l":"filename(String)","u":"filename(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileToBufferedReader","l":"FileToBufferedReader()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"FileToBufferedWriter","l":"FileToBufferedWriter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"filter(Predicate<InstrumentId>)","u":"filter(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"filter(Predicate<T>)","u":"filter(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.search","c":"Filter","l":"filter(T)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"filteredValuesStreamXYZ(Filter<X>, Filter<Y>, Filter<Z>)","u":"filteredValuesStreamXYZ(com.rb.nonbiz.search.Filter,com.rb.nonbiz.search.Filter,com.rb.nonbiz.search.Filter)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"filteredValuesStreamXYZ(Filter<X>, Filter<Y>, Filter<Z>)","u":"filteredValuesStreamXYZ(com.rb.nonbiz.search.Filter,com.rb.nonbiz.search.Filter,com.rb.nonbiz.search.Filter)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterEntries(BiPredicate<K, V>)","u":"filterEntries(java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"filterEntries(JsonObject, BiPredicate<String, JsonElement>)","u":"filterEntries(com.google.gson.JsonObject,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"filterForPresentValuesAndTransformValuesCopy(IidMap<V>, Function<V, Optional<V1>>)","u":"filterForPresentValuesAndTransformValuesCopy(com.rb.nonbiz.collections.IidMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"filterForPresentValuesAndTransformValuesCopy(RBMap<K, V>, Function<V, Optional<V1>>)","u":"filterForPresentValuesAndTransformValuesCopy(com.rb.nonbiz.collections.RBMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"filterKeys(IntFunction<V[]>, Predicate<K>)","u":"filterKeys(java.util.function.IntFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"filterKeys(JsonObject, Predicate<String>)","u":"filterKeys(com.google.gson.JsonObject,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"filterKeys(Predicate<InstrumentId>)","u":"filterKeys(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterKeys(Predicate<K>)","u":"filterKeys(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"filterKeysAndTransformEntriesCopy(BiFunction<InstrumentId, V, V1>, Predicate<InstrumentId>)","u":"filterKeysAndTransformEntriesCopy(java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterKeysAndTransformEntriesCopy(BiFunction<K, V, V1>, Predicate<K>)","u":"filterKeysAndTransformEntriesCopy(java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"filterKeysAndTransformValuesCopy(Function<V, V1>, Predicate<InstrumentId>)","u":"filterKeysAndTransformValuesCopy(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterKeysAndTransformValuesCopy(Function<V, V1>, Predicate<K>)","u":"filterKeysAndTransformValuesCopy(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBBitSets","l":"filterListUsingBitSet(List<T>, BitSet)","u":"filterListUsingBitSet(java.util.List,java.util.BitSet)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"filterMapKeys(RBMap<K, V>, Predicate<K>)","u":"filterMapKeys(com.rb.nonbiz.collections.RBMap,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionalDoubles(List<OptionalDouble>)","u":"filterPresentOptionalDoubles(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionalDoubles(OptionalDouble, OptionalDouble...)","u":"filterPresentOptionalDoubles(java.util.OptionalDouble,java.util.OptionalDouble...)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionalDoublesInStream(Stream<OptionalDouble>)","u":"filterPresentOptionalDoublesInStream(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionals(Iterator<Optional<T>>)","u":"filterPresentOptionals(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionals(List<Optional<T>>)","u":"filterPresentOptionals(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionals(Optional<T>, Optional<T>...)","u":"filterPresentOptionals(java.util.Optional,java.util.Optional...)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"filterPresentOptionalsInRBMapCopy(RBMap<K, Optional<V>>)","u":"filterPresentOptionalsInRBMapCopy(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"filterPresentOptionalsInStream(Stream<Optional<T>>)","u":"filterPresentOptionalsInStream(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"filterValues(Predicate<T>)","u":"filterValues(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"filterValues(Predicate<V>)","u":"filterValues(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterValues(Predicate<V>)","u":"filterValues(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterValuesAndTransformKeysAndValuesCopy(Function<K, K1>, BiFunction<K1, V, Optional<V1>>)","u":"filterValuesAndTransformKeysAndValuesCopy(java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"filterValuesAndTransformValuesCopy(Function<V, V1>, Predicate<V>)","u":"filterValuesAndTransformValuesCopy(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"findFirstPresentOptional(Collection<V1>, Function<V1, Optional<V2>>)","u":"findFirstPresentOptional(java.util.Collection,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"findIndexOfFirstConsecutivePair(List<T>, BiPredicate<T, T>)","u":"findIndexOfFirstConsecutivePair(java.util.List,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.search","c":"LowerAndUpperBoundsFinder","l":"findLowerAndUpperBounds(Function<X, Y>, X, X, Y, UnaryOperator<X>, UnaryOperator<X>, int)","u":"findLowerAndUpperBounds(java.util.function.Function,X,X,Y,java.util.function.UnaryOperator,java.util.function.UnaryOperator,int)"},{"p":"com.rb.nonbiz.search","c":"LowerAndUpperBoundsFinder","l":"findLowerAndUpperBounds(Function<X, Y>, X, Y, UnaryOperator<X>, UnaryOperator<X>, int)","u":"findLowerAndUpperBounds(java.util.function.Function,X,Y,java.util.function.UnaryOperator,java.util.function.UnaryOperator,int)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"findNthDay(YearMonth, int, DayOfWeek)","u":"findNthDay(java.time.YearMonth,int,java.time.DayOfWeek)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"findOnlyPresentOptional(Optional<T>, Optional<T>)","u":"findOnlyPresentOptional(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"findOnlyPresentOptional(Optional<T>, Optional<T>, Optional<T>)","u":"findOnlyPresentOptional(java.util.Optional,java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"findZeroOrOnePresentOptional(Optional<T>, Optional<T>, Optional<T>)","u":"findZeroOrOnePresentOptional(java.util.Optional,java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"findZeroOrOnePresentOptionalsFromStream(Stream<Optional<T>>)","u":"findZeroOrOnePresentOptionalsFromStream(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"first()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"first()"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"firstCharacterIsAlphabetic(String)","u":"firstCharacterIsAlphabetic(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"fixedFilenameIgnoringDate(String)","u":"fixedFilenameIgnoringDate(java.lang.String)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"FLAT_RETURN"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"flatLinearCombination(List<WeightedBy<W, T>>)","u":"flatLinearCombination(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"flatLinearCombination(T, W, T, W)","u":"flatLinearCombination(T,W,T,W)"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"flatLinearCombination(T, W, T, W, T, W)","u":"flatLinearCombination(T,W,T,W,T,W)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"flatMultidimensionalIterator(MultidimensionalCounter)","u":"flatMultidimensionalIterator(org.apache.commons.math3.util.MultidimensionalCounter)"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"flatSignedLinearCombination(List<WeightedBySignedFraction<T>>)","u":"flatSignedLinearCombination(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"flatSignedLinearCombination(T, SignedFraction, T, SignedFraction)","u":"flatSignedLinearCombination(T,com.rb.nonbiz.types.SignedFraction,T,com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"flatSignedLinearCombination(T, SignedFraction, T, SignedFraction, T, SignedFraction)","u":"flatSignedLinearCombination(T,com.rb.nonbiz.types.SignedFraction,T,com.rb.nonbiz.types.SignedFraction,T,com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.jsonapi","c":"FlatSignedLinearCombinationJsonApiConverter","l":"FlatSignedLinearCombinationJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"flipRange(Range<C>, UnaryOperator<C>)","u":"flipRange(com.google.common.collect.Range,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"flipRange(Range<Double>)","u":"flipRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"floatAlmostEqualsMatcher(float, float)","u":"floatAlmostEqualsMatcher(float,float)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"floatValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"floatValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"floatValue()"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"floorSimplistically(double)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"forEach(BiConsumer<Long, V>)","u":"forEach(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"forEach(Iterator<T>, V, BiFunction<V, T, V>)","u":"forEach(java.util.Iterator,V,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"forEach(Iterator<T>, V, QuadriFunction<V, T, Integer, Boolean, V>)","u":"forEach(java.util.Iterator,V,com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"forEach(Iterator<T>, V, TriFunction<V, T, Boolean, V>)","u":"forEach(java.util.Iterator,V,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachEntry(BiConsumer<InstrumentId, V>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"forEachEntry(BiConsumer<K, V>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"forEachEntry(BiConsumer<K, V>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"forEachEntry(BiConsumer<K, V>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"forEachEntry(BiConsumer<T, UnitFraction>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"forEachEntry(BiConsumer<T, V>)","u":"forEachEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"forEachEntryInKeyOrder(BiConsumer<E, V>)","u":"forEachEntryInKeyOrder(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachIidSortedEntry(BiConsumer<InstrumentId, V>)","u":"forEachIidSortedEntry(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachIidSortedValue(Consumer<V>)","u":"forEachIidSortedValue(java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"forEachInInstrumentIdOrder(BiConsumer<T, UnitFraction>)","u":"forEachInInstrumentIdOrder(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"forEachInInstrumentIdOrder(BiConsumer<T, V>)","u":"forEachInInstrumentIdOrder(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"forEachInKeyOrder(BiConsumer<Long, V>)","u":"forEachInKeyOrder(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"forEachJsonObjectEntry(JsonObject, BiConsumer<String, JsonElement>)","u":"forEachJsonObjectEntry(com.google.gson.JsonObject,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachKeySortedEntry(BiConsumer<InstrumentId, V>, Comparator<InstrumentId>)","u":"forEachKeySortedEntry(java.util.function.BiConsumer,java.util.Comparator)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"forEachPair(BiConsumer<K, V>)","u":"forEachPair(java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"forEachPair(Iterable<T1>, Iterable<T2>, BiConsumer<T1, T2>)","u":"forEachPair(java.lang.Iterable,java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"forEachPair(Iterator<T1>, Iterator<T2>, BiConsumer<T1, T2>)","u":"forEachPair(java.util.Iterator,java.util.Iterator,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"forEachPairWhileBothPresent(Iterable<T1>, Iterable<T2>, BiConsumer<T1, T2>)","u":"forEachPairWhileBothPresent(java.lang.Iterable,java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"forEachPairWhileBothPresent(Iterator<T1>, Iterator<T2>, BiConsumer<T1, T2>)","u":"forEachPairWhileBothPresent(java.util.Iterator,java.util.Iterator,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachSortedEntry(BiConsumer<InstrumentId, V>, Comparator<Pair<InstrumentId, V>>)","u":"forEachSortedEntry(java.util.function.BiConsumer,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"forEachSortedEntry(Comparator<Map.Entry<K, V>>, BiConsumer<K, V>)","u":"forEachSortedEntry(java.util.Comparator,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"forEachUnequalPairInList(List<K>, BiConsumer<K, K>)","u":"forEachUnequalPairInList(java.util.List,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"forEachUniquePair(Iterable<K>, BiConsumer<K, K>)","u":"forEachUniquePair(java.lang.Iterable,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"forEachValueSortedEntry(BiConsumer<InstrumentId, V>, Comparator<V>)","u":"forEachValueSortedEntry(java.util.function.BiConsumer,java.util.Comparator)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"forgivingSum(Collection<UnitFraction>, Epsilon)","u":"forgivingSum(java.util.Collection,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"forgivingSum(Stream<UnitFraction>, Epsilon)","u":"forgivingSum(java.util.stream.Stream,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"forgivingUnitFraction(BigDecimal, Epsilon)","u":"forgivingUnitFraction(java.math.BigDecimal,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"forgivingUnitFraction(double, Epsilon)","u":"forgivingUnitFraction(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"FORMAT_AS_INTEGER_WITH_COMMAS"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"format(String, Object...)","u":"format(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.reflection","c":"ClassesWithDepthMultilineStringFormatter","l":"format(UniqueClassesWithDepth, String)","u":"format(com.rb.nonbiz.reflection.UniqueClassesWithDepth,java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatCollectionInDefaultOrder(Collection<T>)","u":"formatCollectionInDefaultOrder(java.util.Collection)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatCollectionInOrder(Collection<T>)","u":"formatCollectionInOrder(java.util.Collection)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatCollectionInOrder(Collection<T>, Comparator<T>)","u":"formatCollectionInOrder(java.util.Collection,java.util.Comparator)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatCollectionOfPrintsInstruments(Collection<T>, InstrumentMaster, LocalDate)","u":"formatCollectionOfPrintsInstruments(java.util.Collection,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatDeviationsOfAssetId(Deviations<AssetId>, InstrumentMaster, LocalDate, boolean)","u":"formatDeviationsOfAssetId(com.rb.nonbiz.collections.Deviations,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatDoubleArray(double[])"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatDoubleArray(String, double[], String)","u":"formatDoubleArray(java.lang.String,double[],java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMap(IidMap<V>)","u":"formatIidMap(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMap(IidMap<V>, InstrumentMaster, LocalDate)","u":"formatIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMap(IidMap<V>, InstrumentMaster, LocalDate, boolean)","u":"formatIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMap(IidMap<V>, InstrumentMaster, LocalDate, Function<V, String>)","u":"formatIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMap(IidMap<V>, InstrumentMaster, LocalDate, Function<V, String>, boolean)","u":"formatIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,java.util.function.Function,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMapOfPrintsInstruments(IidMap<V>, InstrumentMaster, LocalDate)","u":"formatIidMapOfPrintsInstruments(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMapOfPrintsInstruments(IidMap<V>, InstrumentMaster, LocalDate, boolean)","u":"formatIidMapOfPrintsInstruments(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIidMapOfPrintsInstruments(IidMap<V>, String, InstrumentMaster, LocalDate, boolean)","u":"formatIidMapOfPrintsInstruments(com.rb.nonbiz.collections.IidMap,java.lang.String,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIndexableArray1DWhereKeysPrintInstruments(ImmutableIndexableArray1D<K, V>, InstrumentMaster, LocalDate)","u":"formatIndexableArray1DWhereKeysPrintInstruments(com.rb.nonbiz.collections.ImmutableIndexableArray1D,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIndexableArray1DWhereValuesPrintInstruments(ImmutableIndexableArray1D<K, V>, InstrumentMaster, LocalDate)","u":"formatIndexableArray1DWhereValuesPrintInstruments(com.rb.nonbiz.collections.ImmutableIndexableArray1D,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatIndexableArrayOfPrintsInstrumentsToPrintsInstruments(ImmutableIndexableArray1D<K, V>, InstrumentMaster, LocalDate)","u":"formatIndexableArrayOfPrintsInstrumentsToPrintsInstruments(com.rb.nonbiz.collections.ImmutableIndexableArray1D,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatListInExistingOrder(List<T>)","u":"formatListInExistingOrder(java.util.List)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatListInExistingOrder(List<T>, Function<T, String>)","u":"formatListInExistingOrder(java.util.List,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatListOfPrintsInstrumentsInExistingOrder(List<T>, InstrumentMaster, LocalDate)","u":"formatListOfPrintsInstrumentsInExistingOrder(java.util.List,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMap(RBMap<K, V>, String)","u":"formatMap(com.rb.nonbiz.collections.RBMap,java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapInKeyOrder(RBMap<K, V>, Comparator<K>, String)","u":"formatMapInKeyOrder(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapInKeyOrder(RBMap<K, V>, Comparator<K>, String, Function<V, String>)","u":"formatMapInKeyOrder(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapInKeyOrderWhereValuesPrintInstruments(RBMap<K, V>, String, InstrumentMaster, LocalDate)","u":"formatMapInKeyOrderWhereValuesPrintInstruments(com.rb.nonbiz.collections.RBMap,java.lang.String,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapInValueOrder(RBMap<K, V>, Comparator<V>, String)","u":"formatMapInValueOrder(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapInValueOrder(RBMap<K, V>, Comparator<V>, String, Function<V, String>)","u":"formatMapInValueOrder(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapOfPrintsInstrumentsToPrintsInstruments(RBMap<K, V>, InstrumentMaster, LocalDate)","u":"formatMapOfPrintsInstrumentsToPrintsInstruments(com.rb.nonbiz.collections.RBMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapWhereKeysPrintInstruments(RBMap<K, V>, String, Comparator<V>, InstrumentMaster, LocalDate)","u":"formatMapWhereKeysPrintInstruments(com.rb.nonbiz.collections.RBMap,java.lang.String,java.util.Comparator,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatMapWhereValuesPrintInstruments(RBMap<K, V>, InstrumentMaster, LocalDate)","u":"formatMapWhereValuesPrintInstruments(com.rb.nonbiz.collections.RBMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatNDigits(double, int)","u":"formatNDigits(double,int)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatNonZeroDeviationsOfAssetId(NonZeroDeviations<AssetId>, InstrumentMaster, LocalDate, boolean)","u":"formatNonZeroDeviationsOfAssetId(com.rb.nonbiz.collections.NonZeroDeviations,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatOptional(Optional<T>)","u":"formatOptional(java.util.Optional)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatOptional(Optional<T>, Function<T, String>)","u":"formatOptional(java.util.Optional,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatOptionalPrintsInstruments(Optional<T>, InstrumentMaster, LocalDate)","u":"formatOptionalPrintsInstruments(java.util.Optional,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatPartitionOfAssetIdInDecreasingFraction(Partition<AssetId>, InstrumentMaster, LocalDate, boolean)","u":"formatPartitionOfAssetIdInDecreasingFraction(com.rb.nonbiz.collections.Partition,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatPartitionOfAssetIdInIncreasingId(Partition<AssetId>, InstrumentMaster, LocalDate, boolean)","u":"formatPartitionOfAssetIdInIncreasingId(com.rb.nonbiz.collections.Partition,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatRange(Range<C>)","u":"formatRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatRange(Range<C>, Function<C, String>)","u":"formatRange(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatRBEnumMapWhereValuesPrintInstruments(RBEnumMap<E, V>, InstrumentMaster, LocalDate)","u":"formatRBEnumMapWhereValuesPrintInstruments(com.rb.nonbiz.collections.RBEnumMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"formatRBStatisticalSummary(RBStatisticalSummary<V>)","u":"formatRBStatisticalSummary(com.rb.nonbiz.math.stats.RBStatisticalSummary)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatSortedIidMap(IidMap<V>, InstrumentMaster, LocalDate, String, Comparator<V>)","u":"formatSortedIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,java.lang.String,java.util.Comparator)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatSortedIidMap(IidMap<V>, InstrumentMaster, LocalDate, String, Comparator<V>, boolean)","u":"formatSortedIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,java.lang.String,java.util.Comparator,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatSortedIidMap(IidMap<V>, InstrumentMaster, LocalDate, String, Comparator<V>, Function<V, String>, boolean)","u":"formatSortedIidMap(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,java.lang.String,java.util.Comparator,java.util.function.Function,boolean)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatSortedIidMapOfPrintsInstruments(IidMap<V>, Comparator<V>, InstrumentMaster, LocalDate, boolean)","u":"formatSortedIidMapOfPrintsInstruments(com.rb.nonbiz.collections.IidMap,java.util.Comparator,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate,boolean)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"formatStatisticalSummary(StatisticalSummary)","u":"formatStatisticalSummary(org.apache.commons.math3.stat.descriptive.StatisticalSummary)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"formatStatisticalSummary(StatisticalSummary, int)","u":"formatStatisticalSummary(org.apache.commons.math3.stat.descriptive.StatisticalSummary,int)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"formatStatisticalSummary(StatisticalSummary, NumberFormat)","u":"formatStatisticalSummary(org.apache.commons.math3.stat.descriptive.StatisticalSummary,java.text.NumberFormat)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatValuesOnlyIidMapOfPrintsInstruments(IidMap<V>, InstrumentMaster, LocalDate)","u":"formatValuesOnlyIidMapOfPrintsInstruments(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"formatValuesOnlyIidMapOfPrintsInstrumentsWithoutSize(IidMap<V>, InstrumentMaster, LocalDate)","u":"formatValuesOnlyIidMapOfPrintsInstrumentsWithoutSize(com.rb.nonbiz.collections.IidMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"formatWithCommas(int)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"formatWithCommas(int, int)","u":"formatWithCommas(int,int)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"formatWithoutCommas(int)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"formatWithoutCommas(int, int)","u":"formatWithoutCommas(int,int)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"FRACTION_TO_BPS"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"FRACTION_TO_PERCENTAGE"},{"p":"com.rb.nonbiz.collections","c":"PartitionRangesSanityChecker","l":"fractionRangesAreValid(Collection<ClosedUnitFractionRange>)","u":"fractionRangesAreValid(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"RawInterpolator","l":"from(double)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"fromIteratorOfZeroOrOneItem(Iterator<T>)","u":"fromIteratorOfZeroOrOneItem(java.util.Iterator)"},{"p":"com.rb.nonbiz.jsonapi","c":"CoordinatesJsonApiConverter","l":"fromJsonArray(JsonArray)","u":"fromJsonArray(com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.jsonapi","c":"FlatSignedLinearCombinationJsonApiConverter","l":"fromJsonArray(JsonArray, Function<JsonElement, T>)","u":"fromJsonArray(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueJsonApiConverter","l":"fromJsonBigDecimal(JsonElement, JsonTicker, JsonTickerMap, Function<BigDecimal, V>)","u":"fromJsonBigDecimal(com.google.gson.JsonElement,com.rb.biz.jsonapi.JsonTicker,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"FileByDateStringFormatJsonApiConverter","l":"fromJsonObject(JsonObject)","u":"fromJsonObject(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.jsonapi","c":"MoneyFractionJsonApiConverter","l":"fromJsonObject(JsonObject)","u":"fromJsonObject(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.jsonapi","c":"StatisticalSummaryJsonApiConverter","l":"fromJsonObject(JsonObject)","u":"fromJsonObject(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableIndexableArray1DJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, K>, Function<JsonElement, V>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ConstantSequenceJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"MultiDimensionalArrayJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"WeightedBySignedFractionJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ArithmeticProgressionJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>, BiFunction<T, Double, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.jsonapi","c":"SimpleSequenceJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>, BiFunction<T, Double, T>, BiFunction<T, PositiveMultiplier, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.BiFunction,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.jsonapi","c":"GeometricProgressionJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>, BiFunction<T, PositiveMultiplier, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.jsonapi","c":"InstrumentTypeMapJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonElement, T>, T)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.jsonapi","c":"RangeJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonPrimitive, C>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"HardAndSoftRangeJsonApiConverter","l":"fromJsonObject(JsonObject, Function<JsonPrimitive, T>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ClosedUnitFractionRangesJsonApiConverter","l":"fromJsonObject(JsonObject, Function<String, C>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueRBMapJsonConverter","l":"fromJsonObject(JsonObject, Function<String, K>, Function<BigDecimal, V>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"RBCategoryMapJsonApiConverter","l":"fromJsonObject(JsonObject, Function<String, K>, Function<JsonElement, V>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableDoubleIndexableArray2DJsonApiConverter","l":"fromJsonObject(JsonObject, Function<String, R>, Function<String, C>)","u":"fromJsonObject(com.google.gson.JsonObject,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueIidMapJsonConverter","l":"fromJsonObject(JsonObject, JsonTickerMap, Function<BigDecimal, V>)","u":"fromJsonObject(com.google.gson.JsonObject,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"fromUniqueStableString(String)","u":"fromUniqueStableString(java.lang.String)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers","l":"generalVisitorMatcher(T, Function<T, RBVisitorMatchers.VisitorMatchInfo<T>>)","u":"generalVisitorMatcher(T,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentationForPseudoEnumGenerator","l":"generate(Class<?>, HumanReadableDocumentation, HumanReadableDocumentation, JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor)","u":"generate(java.lang.Class,com.rb.nonbiz.text.HumanReadableDocumentation,com.rb.nonbiz.text.HumanReadableDocumentation,com.rb.nonbiz.json.JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentationForEnumGenerator","l":"generate(HumanReadableDocumentation, HumanReadableDocumentation, JsonApiEnumDescriptor<E>)","u":"generate(com.rb.nonbiz.text.HumanReadableDocumentation,com.rb.nonbiz.text.HumanReadableDocumentation,com.rb.nonbiz.json.JsonApiEnumDescriptor)"},{"p":"com.rb.biz.marketdata","c":"InstrumentIdGenerator","l":"generate(Symbol)","u":"generate(com.rb.biz.types.Symbol)"},{"p":"com.rb.biz.marketdata","c":"EncodedIdGenerator","l":"generateLongId(Symbol)","u":"generateLongId(com.rb.biz.types.Symbol)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"geometricCollaredRBNumericFunctionBuilder()"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"geometricProgression(T, PositiveMultiplier, UnaryOperator<T>)","u":"geometricProgression(T,com.rb.nonbiz.types.PositiveMultiplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.jsonapi","c":"GeometricProgressionJsonApiConverter","l":"GeometricProgressionJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBSupplier","l":"get()"},{"p":"com.rb.nonbiz.types","c":"LazyValue","l":"get()"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"get()"},{"p":"com.rb.nonbiz.types","c":"ObjectReference","l":"get()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"get(Class<?>)","u":"get(java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"get(Class<?>, Class<?>)","u":"get(java.lang.Class,java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"get(Class<?>, UniqueId<Epsilon>)","u":"get(java.lang.Class,com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"get(Coordinates)","u":"get(com.rb.nonbiz.collections.Coordinates)"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"get(Coordinates)","u":"get(com.rb.nonbiz.collections.Coordinates)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"get(InstrumentType)","u":"get(com.rb.biz.types.asset.InstrumentType)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"get(int)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"get(int, int)","u":"get(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"get(int, int)","u":"get(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"get(int, int)","u":"get(int,int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"get(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"get(K)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"get(MatrixRowIndex, MatrixColumnIndex)","u":"get(com.rb.nonbiz.math.vectorspaces.MatrixRowIndex,com.rb.nonbiz.math.vectorspaces.MatrixColumnIndex)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"get(R, C)","u":"get(R,C)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator.StatisticalSummaryOfStatisticalSummaries","l":"get(StatisticalSummaryAspect, StatisticalSummaryAspect)","u":"get(com.rb.nonbiz.math.stats.StatisticalSummaryAspect,com.rb.nonbiz.math.stats.StatisticalSummaryAspect)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"get(X, Y, Z)","u":"get(X,Y,Z)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"get(X, Y, Z)","u":"get(X,Y,Z)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"getAdder()"},{"p":"com.rb.nonbiz.jsonapi","c":"ClosedUnitFractionRangesJsonApiConverter","l":"getAdditionalJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentation","l":"getAdditionalJsonApiDocumentation()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"getAllClassesAsStream()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"getAllInstrumentIdsAsIidSet()"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentation","l":"getAllJsonApiDocumentation(HasJsonApiDocumentation)","u":"getAllJsonApiDocumentation(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"getAllKeys()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"getAllProperties()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"getAlwaysInclude()"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"getAndThenIncrement()"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"getAngleInDegrees()"},{"p":"com.rb.nonbiz.math.stats","c":"PercentilesCalculator","l":"getApproximatePercentiles(List<T>, List<UnitFraction>)","u":"getApproximatePercentiles(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"getArrayIndexMapping()"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"getAsIntOrThrow()"},{"p":"com.rb.nonbiz.text","c":"HumanReadableDocumentation","l":"getAsString()"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"getAsValue()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"getBasisVector(MatrixColumnIndex)","u":"getBasisVector(com.rb.nonbiz.math.vectorspaces.MatrixColumnIndex)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"getBehaviorForRest()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"getBehaviorWithValueAndOverride()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"getBehaviorWithValueButNoOverride()"},{"p":"com.rb.biz.marketdata","c":"EncodedIdGenerator","l":"getBestGuessSymbol(HasLongRepresentation)","u":"getBestGuessSymbol(com.rb.nonbiz.types.HasLongRepresentation)"},{"p":"com.rb.biz.marketdata","c":"InstrumentIdGenerator","l":"getBestGuessSymbol(InstrumentId)","u":"getBestGuessSymbol(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getBestX(BiFunction<Y, Y, T>)","u":"getBestX(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getBestY(BiFunction<Y, Y, T>)","u":"getBestY(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.io","c":"FileToBufferedReader","l":"getBufferedReader(String)","u":"getBufferedReader(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileToBufferedWriter","l":"getBufferedWriter(String)","u":"getBufferedWriter(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"getBumpAmount()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getByIndex(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getByIndex(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getByIndex(int, int)","u":"getByIndex(int,int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getByIndex(int, int, int)","u":"getByIndex(int,int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getByIndex(int, int, int)","u":"getByIndex(int,int,int)"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"getCapitalizedStrings()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers.VisitorMatchInfo","l":"getCaseNumber()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRow","l":"getCell(int)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRow","l":"getCellsInRow()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getChildJsonApiConverter()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getChildJsonApiConverters()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getChildJsonApiConverters()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"getClassBeingDescribed()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"getClassBeingDocumented()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestPlusIntegration","l":"getClassBeingTested()"},{"p":"com.rb.nonbiz.reflection","c":"ClassWithDepth","l":"getClassObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo","l":"getClassOfSubclass()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getClazz()"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"getClock()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"getClosedRange(K)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getClosedRangeFromSorted(Iterable<T>, Function<T, C>)","u":"getClosedRangeFromSorted(java.lang.Iterable,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getClosedRangeFromSorted(Iterator<T>, Function<T, C>)","u":"getClosedRangeFromSorted(java.util.Iterator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"getClosedSignedFractionRange(K)"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"getClosedUnitFractionHardAndSoftRange()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"getCollectionSize()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"getCollectionValueClassDescriptor()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"getColumnHeader(int)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"getColumnIndex(String)","u":"getColumnIndex(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"getColumnKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getColumnMapping()"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"getColumnName()"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnInclusionFilter","l":"getColumnsToInclude()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getColumnVector(MatrixColumnIndex)","u":"getColumnVector(com.rb.nonbiz.math.vectorspaces.MatrixColumnIndex)"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"getCommonDifference()"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"getCommonRatio()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getComparatorForX()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getComparatorForY()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getConditionNumber()"},{"p":"com.rb.nonbiz.math.sequence","c":"ConstantSequence","l":"getConstantValue()"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"getCosine()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getCountOrThrow(InstrumentId)","u":"getCountOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getCountOrThrow(T)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getCountOrZero(InstrumentId)","u":"getCountOrZero(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getCountOrZero(T)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"getDataRows()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"getDefaultValue()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"getDefaultValue()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"getDefaultValues()"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"getDenominator()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"getDenominator()"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"getDenominator()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"getDenominator()"},{"p":"com.rb.nonbiz.reflection","c":"ClassWithDepth","l":"getDepth()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"getDeterminant()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getDiscriminatorProperty()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo","l":"getDiscriminatorPropertyValue()"},{"p":"com.rb.biz.types","c":"Symbol","l":"getDisplaySymbol(Symbol, InstrumentId)","u":"getDisplaySymbol(com.rb.biz.types.Symbol,com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"getDocumentation()"},{"p":"com.rb.nonbiz.text","c":"HasHumanReadableDocumentation","l":"getDocumentation()"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getDouble(CharSequence)","u":"getDouble(java.lang.CharSequence)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getDouble(CharSequence, int, int)","u":"getDouble(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"getDoubleAsLongAssumingIsRound(double, Epsilon)","u":"getDoubleAsLongAssumingIsRound(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"getDoubleOrThrow(OptionalDouble, String, Object...)","u":"getDoubleOrThrow(java.util.OptionalDouble,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBEigenvalueDecomposition","l":"getEigenvectors()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"getEntireRange()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getEnumClass()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"getEnumClass()"},{"p":"com.rb.nonbiz.json","c":"JsonApiEnumDescriptor","l":"getEnumClass()"},{"p":"com.rb.nonbiz.util","c":"EnumStringRoundTripConversionInfo","l":"getEnumValue(String)","u":"getEnumValue(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getEpsilonForNetAdditionSanityCheck()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getEpsilonForRemovalSanityChecks()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getEvaluatorOfX()"},{"p":"com.rb.nonbiz.threads","c":"AbstractExecutionCompletionServiceProvider","l":"getExecutorCompletionService(OptionalInt)","u":"getExecutorCompletionService(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.threads","c":"ExecutorCompletionServiceProvider","l":"getExecutorCompletionService(OptionalInt)","u":"getExecutorCompletionService(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"getFileForDate(LocalDate)","u":"getFileForDate(java.time.LocalDate)"},{"p":"com.rb.nonbiz.io","c":"FileLinesIteratorGenerator","l":"getFileLinesIterator(String)","u":"getFileLinesIterator(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"getFilePathForDate(LocalDate)","u":"getFilePathForDate(java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"getFirst()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"getFirstInvalidPointAfterRange()"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"getFirstNonUniqueIteratorItem(Iterator<T>)","u":"getFirstNonUniqueIteratorItem(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"getFirstNonUniqueListItem(List<T>)","u":"getFirstNonUniqueListItem(java.util.List)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseFixedValueWhenOverrideMissing","l":"getFixedValueToUse()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"getFraction(K)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"getFraction(K)"},{"p":"com.rb.nonbiz.types","c":"DoubleMovement","l":"getFractionalJump()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"getFractionOrThrow(InstrumentId)","u":"getFractionOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"getFractionOrThrow(InstrumentId)","u":"getFractionOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"getFractionOrZero(InstrumentId)","u":"getFractionOrZero(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getFractionPresent()"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"getFreeFormTicker()"},{"p":"com.rb.nonbiz.util","c":"CachingSupplier","l":"getFromCache(K, Supplier<V>)","u":"getFromCache(K,java.util.function.Supplier)"},{"p":"com.rb.biz.investing.modeling","c":"RBCommonsConstants","l":"getFullFilename(String)","u":"getFullFilename(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"getGenericArgumentClassDescriptors()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"getHardRange()"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRange","l":"getHardRange()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"getHasInstrumentIdOrThrow(InstrumentId)","u":"getHasInstrumentIdOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"getHasInstrumentIdOrThrow(InstrumentId, String, Object...)","u":"getHasInstrumentIdOrThrow(com.rb.biz.types.asset.InstrumentId,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.types","c":"WeightedList","l":"getHasList()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"getHeaderRow()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.EtfInstrumentType","l":"getHumanReadableLabel()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.MutualFundInstrumentType","l":"getHumanReadableLabel()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StockInstrumentType","l":"getHumanReadableLabel()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StructuredProductInstrumentType","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryFunction","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"N_aryFunction","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"UnitFractionFunction","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.text","c":"HasHumanReadableLabel","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.text","c":"ItemWithLabel","l":"getHumanReadableLabel()"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"getIdentityElement()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getIfPresentElsePut(E, Supplier<V>)","u":"getIfPresentElsePut(E,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getIfPresentElsePut(K, Supplier<V>)","u":"getIfPresentElsePut(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getIfPresentElsePut(K, Supplier<V>)","u":"getIfPresentElsePut(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"getIndexFromEnd()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"getIndexFromStart()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getIndexOfObject(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getIndexOfObject(K)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"getIndexOfSpecialValue()"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"getIndexOrThrow(T)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"getIndexOrThrow(T)"},{"p":"com.rb.nonbiz.math.sequence","c":"Sequence","l":"getInitialValue()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"getInnerClassRBClasses()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"getInstantiator()"},{"p":"com.rb.biz.types.asset","c":"HasInstrumentId","l":"getInstrumentId()"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"getInstrumentId()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"CascadingInstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"NullInstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"OverridingToConstantDateInstrumentMaster","l":"getInstrumentId(Symbol, LocalDate)","u":"getInstrumentId(com.rb.biz.types.Symbol,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"getInstrumentIdFromItem()"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMap","l":"getInstrumentIdOrThrow(JsonTicker)","u":"getInstrumentIdOrThrow(com.rb.biz.jsonapi.JsonTicker)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"getInstrumentIdOrThrow(JsonTicker)","u":"getInstrumentIdOrThrow(com.rb.biz.jsonapi.JsonTicker)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"getInstrumentTypeWhenUnique(Predicate<T>)","u":"getInstrumentTypeWhenUnique(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getInteger(CharSequence)","u":"getInteger(java.lang.CharSequence)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getInteger(CharSequence, int, int)","u":"getInteger(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getIntegerUnsafe(CharSequence)","u":"getIntegerUnsafe(java.lang.CharSequence)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getIntegerUnsafe(CharSequence, int, int)","u":"getIntegerUnsafe(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getIntegerUnsafeAsDouble(CharSequence, int, int)","u":"getIntegerUnsafeAsDouble(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"getIntOrThrow(OptionalInt, String, Object...)","u":"getIntOrThrow(java.util.OptionalInt,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor","l":"getInvalidJsonApiPropertyDescriptorClasses()"},{"p":"com.rb.biz.types.asset","c":"HasInstrumentId","l":"getInvestable()"},{"p":"com.rb.biz.types.asset","c":"HasInvestable","l":"getInvestable()"},{"p":"com.rb.nonbiz.text","c":"ItemWithId","l":"getItem()"},{"p":"com.rb.nonbiz.text","c":"ItemWithLabel","l":"getItem()"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"getItem()"},{"p":"com.rb.nonbiz.types","c":"WeightedBy","l":"getItem()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"getItemFromInstrumentId()"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getItemsWithCountOf(int)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getItemsWithCountOf(int)"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getItemsWithCountOfAtLeast(int)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getItemsWithCountOfAtLeast(int)"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getItemsWithNonZeroCounts()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getItemsWithNonZeroCounts()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiPair","l":"getJavaObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiPair","l":"getJavaObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiPair","l":"getJavaObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo","l":"getJsonApiConverterForTraversing()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getJsonApiConvertersForContainedObjects()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getJsonApiConvertersForContainedObjects()"},{"p":"com.rb.nonbiz.jsonapi","c":"ArithmeticProgressionJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"ClosedUnitFractionRangesJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"ConstantSequenceJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"CoordinatesJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"FlatSignedLinearCombinationJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"GeometricProgressionJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"HardAndSoftRangeJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentation","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableDoubleIndexableArray2DJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableIndexableArray1DJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"InstrumentTypeMapJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"MoneyFractionJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"MultiDimensionalArrayJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"RBCategoryMapJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"RangeJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"SimpleSequenceJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"StatisticalSummaryJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"WeightedBySignedFractionJsonApiConverter","l":"getJsonApiDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"getJsonApiEnumDescriptor()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getJsonApiSubclassInfoList()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiPair","l":"getJsonArray()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonArrayOrDefaultSingleton(JsonObject, String, JsonElement)","u":"getJsonArrayOrDefaultSingleton(com.google.gson.JsonObject,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonArrayOrEmpty(JsonObject, String)","u":"getJsonArrayOrEmpty(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonArrayOrThrow(JsonObject, String)","u":"getJsonArrayOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBigDecimalFromPercentageOrThrow(JsonObject, String)","u":"getJsonBigDecimalFromPercentageOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBigDecimalOrDefault(JsonObject, String, Function<BigDecimal, T>, T)","u":"getJsonBigDecimalOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBigDecimalOrThrow(JsonObject, String)","u":"getJsonBigDecimalOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBooleanOrDefault(JsonObject, String, boolean)","u":"getJsonBooleanOrDefault(com.google.gson.JsonObject,java.lang.String,boolean)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBooleanOrDefault(JsonObject, String, Function<Boolean, T>, T)","u":"getJsonBooleanOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonBooleanOrThrow(JsonObject, String)","u":"getJsonBooleanOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDateOrThrow(JsonObject, String)","u":"getJsonDateOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDateTimeOrThrow(JsonObject, String)","u":"getJsonDateTimeOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDoubleFromPercentageOrDefault(JsonObject, String, double)","u":"getJsonDoubleFromPercentageOrDefault(com.google.gson.JsonObject,java.lang.String,double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDoubleFromPercentageOrThrow(JsonObject, String)","u":"getJsonDoubleFromPercentageOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDoubleOrDefault(JsonObject, String, DoubleFunction<T>, T)","u":"getJsonDoubleOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.DoubleFunction,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonDoubleOrThrow(JsonObject, String)","u":"getJsonDoubleOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonElementOrDefault(JsonObject, String, Function<JsonElement, T>, T)","u":"getJsonElementOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonElementOrThrow(JsonObject, String)","u":"getJsonElementOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonElementTypes","l":"getJsonElementType(JsonElement)","u":"getJsonElementType(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonIntOrDefault(JsonObject, String, int)","u":"getJsonIntOrDefault(com.google.gson.JsonObject,java.lang.String,int)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonIntOrThrow(JsonObject, String)","u":"getJsonIntOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonLongOrThrow(JsonObject, String)","u":"getJsonLongOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonNumberElementOrThrow(JsonObject, String)","u":"getJsonNumberElementOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"getJsonObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiPair","l":"getJsonObject()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonObjectOrDefault(JsonObject, String, Function<JsonObject, T>, T)","u":"getJsonObjectOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonObjectOrDefaultFromSupplier(JsonObject, String, Function<JsonObject, T>, Supplier<T>)","u":"getJsonObjectOrDefaultFromSupplier(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonObjectOrEmpty(JsonObject, String)","u":"getJsonObjectOrEmpty(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonObjectOrThrow(JsonObject, String)","u":"getJsonObjectOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiPair","l":"getJsonPrimitive()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonPrimitiveOrThrow(JsonObject, String)","u":"getJsonPrimitiveOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonObjectPath","l":"getJsonProperties()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonStringOrDefault(JsonObject, String, Function<String, T>, T)","u":"getJsonStringOrDefault(com.google.gson.JsonObject,java.lang.String,java.util.function.Function,T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonStringOrDefault(JsonObject, String, String)","u":"getJsonStringOrDefault(com.google.gson.JsonObject,java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getJsonStringOrThrow(JsonObject, String)","u":"getJsonStringOrThrow(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMap","l":"getJsonTickerOrThrow(InstrumentId)","u":"getJsonTickerOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"getJsonTickerOrThrow(InstrumentId)","u":"getJsonTickerOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getJsonValidationInstructions()"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"getKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getKey(int)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"getKey(int)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getKeyClass()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"getKeyClassDescriptor()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getKeys()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getKeys()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"getKeysAsIidSet()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getKeysRBSet()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getKeysRBSet()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getKeysToAdd()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"getKeysToAddOrIncrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getKeysToDecrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getKeysToIncrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"getKeysToRemove()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"getKeysToRemoveOrDecrease()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"getLabel()"},{"p":"com.rb.nonbiz.text","c":"HumanReadableLabel","l":"getLabelText()"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"getLabelText()"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"getLast()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getLastColumnIndex()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getLastRowIndex()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"CascadingInstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"NullInstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"OverridingToConstantDateInstrumentMaster","l":"getLatestValidSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getLatestValidSymbolOrAssetIdAsSymbol(AssetId, LocalDate)","u":"getLatestValidSymbolOrAssetIdAsSymbol(com.rb.biz.types.asset.AssetId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getLatestValidSymbolOrBestGuess(InstrumentId, LocalDate)","u":"getLatestValidSymbolOrBestGuess(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getLatestValidSymbolOrInstrumentIdAsSymbol(InstrumentId, LocalDate)","u":"getLatestValidSymbolOrInstrumentIdAsSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"getLeaves()"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"getLeft()"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"getLeft()"},{"p":"com.rb.biz.types.asset","c":"HasList","l":"getList()"},{"p":"com.rb.biz.types.asset","c":"TestHasStringList","l":"getList()"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getLong(CharSequence)","u":"getLong(java.lang.CharSequence)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getLong(CharSequence, int, int)","u":"getLong(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"getLongDocumentation()"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"getLongOrThrow(OptionalLong, String, Object...)","u":"getLongOrThrow(java.util.OptionalLong,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getLowerBoundX()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getLowerBoundX()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getLowerBoundY()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getMappingForBothRowsAndColumns()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"getMapSize()"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"getMatcher(T)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"getMatcherGenerator()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiTestData","l":"getMatcherGenerator()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiTestData","l":"getMatcherGenerator()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers.VisitorMatchInfo","l":"getMatcherGenerator()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getMax()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getMax()"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"getMaxCalendarDaysRangeAllowed()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getMaxIterations()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"getMaxX()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"getMaxY()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getMean()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getMean()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"getMeanAbsoluteDeviation()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"getMeanAbsoluteDeviation()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"getMeanSquaredDeviation()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"getMeanSquaredDeviation()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getMidpointGenerator()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getMin()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getMin()"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getMinMaxClosedRange(Iterable<C>)","u":"getMinMaxClosedRange(java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getMinMaxClosedRange(Iterator<C>)","u":"getMinMaxClosedRange(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getMinMaxClosedRange(Stream<C>)","u":"getMinMaxClosedRange(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getMinMaxOfClosedRanges(ClosedRange<C>, ClosedRange<C>...)","u":"getMinMaxOfClosedRanges(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.collections.ClosedRange...)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getMinMaxOfClosedRanges(Iterator<ClosedRange<C>>)","u":"getMinMaxOfClosedRanges(java.util.Iterator)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getMinMaxRange()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"getMinX()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"getMinY()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"getMultidimensionalCounter()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"getMultidimensionalCounter()"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryFunction","l":"getN()"},{"p":"com.rb.nonbiz.functional","c":"N_aryFunction","l":"getN()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getN()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getN()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"getNearestValueInRange(K, UnitFraction)","u":"getNearestValueInRange(K,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getNearestValueInRange(Range<P>, P)","u":"getNearestValueInRange(com.google.common.collect.Range,P)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"getNearestValueInRange(UnitFraction)","u":"getNearestValueInRange(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"getNearestWeekday(LocalDate)","u":"getNearestWeekday(java.time.LocalDate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getNestedJsonObjectOrThrow(JsonObject, JsonObjectPath)","u":"getNestedJsonObjectOrThrow(com.google.gson.JsonObject,com.rb.nonbiz.json.JsonObjectPath)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getNestedJsonObjectOrThrow(JsonObject, String, String...)","u":"getNestedJsonObjectOrThrow(com.google.gson.JsonObject,java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.collections","c":"NodeWithWeightedChildren","l":"getNode()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getNontrivialSampleJson()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getNontrivialSampleJson()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getNontrivialSampleJson()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getNontrivialSampleJson()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getNorm2()"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"getNthCoordinate(int)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getNumColumns()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getNumColumns()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"getNumColumns()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"getNumColumns()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRow","l":"getNumColumns()"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"getNumDimensions()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"getNumDimensions()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceOrthonormalBasis","l":"getNumDimensions()"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"getNumerator()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"getNumerator()"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"getNumerator()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"getNumerator()"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"getNumericValue()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getNumIterationsUsed()"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getNumRows()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getNumRows()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getNumRowsOrColumns()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBSquareMatrix","l":"getNumRowsOrColumns()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator.StatisticalSummaryOfStatisticalSummaries","l":"getNumStatisticalSummaries()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getNumValuesPresent()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getNumValuesPresentInColumn(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"getNumValuesPresentInRow(int)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers.VisitorMatchInfo","l":"getObject()"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"getOnlyElementOrDefault(Stream<T>, T, String, Object...)","u":"getOnlyElementOrDefault(java.util.stream.Stream,T,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getOnlyElementOrThrow()"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"getOnlyElementOrThrow(Iterator<T>, String, Object...)","u":"getOnlyElementOrThrow(java.util.Iterator,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"getOnlyIndexWhere(Iterable<T>, Predicate<T>)","u":"getOnlyIndexWhere(java.lang.Iterable,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"getOnlyIndexWhere(Iterator<T>, Predicate<T>)","u":"getOnlyIndexWhere(java.util.Iterator,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"getOptional()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"getOptional(double, Epsilon, MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)","u":"getOptional(double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.collections.MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)"},{"p":"com.rb.nonbiz.collections","c":"RBDoubleKeyedMap","l":"getOptional(double, Epsilon, MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)","u":"getOptional(double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.collections.MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getOptional(E)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"getOptional(E)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOptional(K)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"getOptional(K)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"getOptional(K, K)","u":"getOptional(K,K)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"getOptionalDefaultValue()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"getOptionalFlatIndex(K, K)","u":"getOptionalFlatIndex(K,K)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"getOptionalHardAndSoftRange(InstrumentId)","u":"getOptionalHardAndSoftRange(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"getOptionalHardAndSoftRange(K)"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"getOptionalIndex(T)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"getOptionalIndex(T)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMap","l":"getOptionalInstrumentId(JsonTicker)","u":"getOptionalInstrumentId(com.rb.biz.jsonapi.JsonTicker)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"getOptionalInstrumentId(JsonTicker)","u":"getOptionalInstrumentId(com.rb.biz.jsonapi.JsonTicker)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonArray(JsonObject, String)","u":"getOptionalJsonArray(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonDouble(JsonObject, String)","u":"getOptionalJsonDouble(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonElement(JsonObject, String)","u":"getOptionalJsonElement(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonInt(JsonObject, String)","u":"getOptionalJsonInt(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonObject(JsonObject, String)","u":"getOptionalJsonObject(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonPrimitive(JsonObject, String)","u":"getOptionalJsonPrimitive(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalJsonString(JsonObject, String)","u":"getOptionalJsonString(com.google.gson.JsonObject,java.lang.String)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMap","l":"getOptionalJsonTicker(InstrumentId)","u":"getOptionalJsonTicker(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"getOptionalJsonTicker(InstrumentId)","u":"getOptionalJsonTicker(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"getOptionalMinMaxClosedRange(Iterator<C>)","u":"getOptionalMinMaxClosedRange(java.util.Iterator)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalNestedJsonObject(JsonObject, JsonObjectPath)","u":"getOptionalNestedJsonObject(com.google.gson.JsonObject,com.rb.nonbiz.json.JsonObjectPath)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalNestedJsonObject(JsonObject, String, String...)","u":"getOptionalNestedJsonObject(com.google.gson.JsonObject,java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"getOptionalOnlyElement(Stream<T>, String, Object...)","u":"getOptionalOnlyElement(java.util.stream.Stream,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"getOptionalProperties()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getOptionalProperties()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"getOptionalPropertiesAsSortedList()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalTransformedJsonPrimitive(JsonObject, String, Function<JsonPrimitive, T>)","u":"getOptionalTransformedJsonPrimitive(com.google.gson.JsonObject,java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"getOptionalTransformedJsonSubObject(JsonObject, String, Function<JsonObject, T>)","u":"getOptionalTransformedJsonSubObject(com.google.gson.JsonObject,java.lang.String,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"getOptionalWithHighestKeyBelow(K)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"getOptionalWithHighestKeyBelow(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getOrDefault(E, Supplier<V>)","u":"getOrDefault(E,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getOrDefault(E, V)","u":"getOrDefault(E,V)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"getOrDefault(E, V)","u":"getOrDefault(E,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"getOrDefault(InstrumentId)","u":"getOrDefault(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"getOrDefault(InstrumentId, InstrumentType)","u":"getOrDefault(com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentType)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"getOrDefault(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"getOrDefault(K)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getOrDefault(K, Supplier<V>)","u":"getOrDefault(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOrDefault(K, Supplier<V>)","u":"getOrDefault(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getOrDefault(K, Supplier<V>)","u":"getOrDefault(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrDefault(K, Supplier<V>)","u":"getOrDefault(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getOrDefault(K, V)","u":"getOrDefault(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOrDefault(K, V)","u":"getOrDefault(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getOrDefault(K, V)","u":"getOrDefault(K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrDefault(K, V)","u":"getOrDefault(K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"getOrDefault(K, V)","u":"getOrDefault(K,V)"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"getOriginalPartition()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOrNull(K)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"getOrThrow()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"getOrThrow(double, Epsilon, MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)","u":"getOrThrow(double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.collections.MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)"},{"p":"com.rb.nonbiz.collections","c":"RBDoubleKeyedMap","l":"getOrThrow(double, Epsilon, MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)","u":"getOrThrow(double,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.collections.MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getOrThrow(E)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"getOrThrow(E)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"getOrThrow(E, String, Object...)","u":"getOrThrow(E,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"getOrThrow(E, String, Object...)","u":"getOrThrow(E,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"getOrThrow(K)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"getOrThrow(K, K)","u":"getOrThrow(K,K)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getOrThrow(K, String, Object...)","u":"getOrThrow(K,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"getOrThrow(K, String, Object...)","u":"getOrThrow(K,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"getOrThrow(K, String, Object...)","u":"getOrThrow(K,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrThrow(K, String, Object...)","u":"getOrThrow(K,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"getOrThrow(Optional<T>, String, Object...)","u":"getOrThrow(java.util.Optional,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"getOrThrow(UniqueId<K>)","u":"getOrThrow(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrThrowAllowingNull(K)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"getOrThrowAllowingNull(K, String, Object...)","u":"getOrThrowAllowingNull(K,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"getOrZero(InstrumentId)","u":"getOrZero(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"getOrZero(K)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"getOrZero(K)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"getOuterClass()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"getOuterClass()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"getOverridesMap()"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"getPartitionsWhenBumpingDown()"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"getPartitionsWhenBumpingUp()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"getPlural()"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getPositiveIntegerUnsafe(CharSequence, int, int)","u":"getPositiveIntegerUnsafe(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"getPositiveIntegerUnsafeAsDouble(CharSequence, int, int)","u":"getPositiveIntegerUnsafeAsDouble(java.lang.CharSequence,int,int)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"getPowerOf10AsDouble()"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"getPowerOf10InverseAsDouble()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"getPropertySpecificDocumentation()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"getQuick(int)"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRangeGeneralInterpreter","l":"getRangeToUse(Optional<T>, HardAndSoftRange<T>)","u":"getRangeToUse(java.util.Optional,com.rb.nonbiz.types.HardAndSoftRange)"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRangeInterpreter","l":"getRangeToUse(T, HardAndSoftRange<T>)","u":"getRangeToUse(T,com.rb.nonbiz.types.HardAndSoftRange)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getRank()"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"getRawBiMap()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"getRawBitSet()"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"getRawCoordinatesArray()"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"getRawDateMap()"},{"p":"com.rb.nonbiz.json","c":"JsonPropertySpecificDocumentation","l":"getRawDocumentation()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator.StatisticalSummaryOfStatisticalSummaries","l":"getRawEnumMap()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"getRawFractionsMap()"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"getRawFractionsMap()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"getRawFractionsMap()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"getRawFractionsMap()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"getRawIidMap()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"getRawIidMap()"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"getRawInt()"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"getRawList()"},{"p":"com.rb.nonbiz.math.eigen","c":"DecreasingPositiveDoubles","l":"getRawList()"},{"p":"com.rb.nonbiz.reflection","c":"UniqueClassesWithDepth","l":"getRawList()"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"getRawMap()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"getRawMap()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"getRawMap()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"getRawMap()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"getRawMap()"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getRawMapUnsafe()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"getRawMapUnsafe()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"getRawMultiplierForLowerEndPoint()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"getRawMultiplierForUpperEndPoint()"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"getRawPreferenceForSuppliedValue()"},{"p":"com.rb.nonbiz.types","c":"RoundedPreciseValueRange","l":"getRawRange()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"getRawRangeCollection()"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"getRawRangeCollection()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"getRawRangeMap()"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"getRawRangeMap()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"getRawRBMap()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"getRawRBMap()"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"getRawResult()"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"getRawReturn()"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"getRawReturn()"},{"p":"com.rb.nonbiz.reflection","c":"AllRbTopLevelClasses","l":"getRawSet()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"getRawSetUnsafe()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"getRawSignedFractionsMap()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"getRawSignedFractionsMap()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getRawSquareMatrix()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"getRawSquareMatrix()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getRawStatisticalSummary()"},{"p":"com.rb.nonbiz.io","c":"Filename","l":"getRawString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"getRawValue()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"getRawValue()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getRbClassOfArrayItems()"},{"p":"com.rb.biz.types.collections.ts","c":"TestHasRbSet","l":"getRbSet()"},{"p":"com.rb.nonbiz.collections","c":"HasRbSet","l":"getRbSet()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBEigenvalueDecomposition","l":"getRealEigenvaluesAscending()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"getRequiredProperties()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getRequiredProperties()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"getRequiredPropertiesAsSortedList()"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"getReturnRatioOverBenchmark(OnesBasedReturn)","u":"getReturnRatioOverBenchmark(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"getRight()"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"getRight()"},{"p":"com.rb.nonbiz.collections","c":"HasRoughIidCount","l":"getRoughIidCount()"},{"p":"com.rb.nonbiz.collections","c":"HasRoughIidCount","l":"getRoughIidCountInMapValues(RBMap<K, V>)","u":"getRoughIidCountInMapValues(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.types","c":"RoundedPreciseValueRange","l":"getRoundingScale()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"getRowKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"getRowMapping()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"getRowMapping()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"getRowMapping()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"getRowVector(MatrixRowIndex)","u":"getRowVector(com.rb.nonbiz.math.vectorspaces.MatrixRowIndex)"},{"p":"com.rb.nonbiz.math.eigen","c":"StandardDeviationsCalculator","l":"getSampleStandardDeviationsForColumns(RBMatrix)","u":"getSampleStandardDeviationsForColumns(com.rb.nonbiz.math.vectorspaces.RBMatrix)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"getSharedKeys()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"getSharedKeys()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getSigma()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"getSimpleCsvRow()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"getSingleLineSummary()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"getSingular()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getSingularValues()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getSizeInX()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getSizeInX()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getSizeInY()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getSizeInY()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getSizeInZ()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getSizeInZ()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"getSliceOfMultiDimensionalArray(MultiDimensionalArray<T>, int, int)","u":"getSliceOfMultiDimensionalArray(com.rb.nonbiz.collections.MultiDimensionalArray,int,int)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"getSoftRange()"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRange","l":"getSoftRange()"},{"p":"com.rb.nonbiz.io","c":"DirectoryContentsLister","l":"getSortedFilenamesInDirectory(String)","u":"getSortedFilenamesInDirectory(java.lang.String)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getStandardDeviation()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getStandardDeviation()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator.StatisticalSummaryOfStatisticalSummaries","l":"getStatisticalSummary(StatisticalSummaryAspect)","u":"getStatisticalSummary(com.rb.nonbiz.math.stats.StatisticalSummaryAspect)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"getStatisticalSummaryField(StatisticalSummary, StatisticalSummaryAspect)","u":"getStatisticalSummaryField(org.apache.commons.math3.stat.descriptive.StatisticalSummary,com.rb.nonbiz.math.stats.StatisticalSummaryAspect)"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats","l":"getStatsForAbsoluteValueDifferences()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats","l":"getStatsForOverweight()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats","l":"getStatsForSignedDifferences()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats","l":"getStatsForUnderweight()"},{"p":"com.rb.biz.types.collections.ts","c":"TestHasRbSet","l":"getString()"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"getStringId()"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"getSubset(int, int)","u":"getSubset(int,int)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"getSubtracter()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getSum()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getSum()"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"getSumOfCounts()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"getSumOfCounts()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"CascadingInstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"NullInstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"OverridingToConstantDateInstrumentMaster","l":"getSymbol(InstrumentId, LocalDate)","u":"getSymbol(com.rb.biz.types.asset.InstrumentId,java.time.LocalDate)"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"getTarget()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getTargetY()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getTerminationPredicate()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"getTestPairs()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiTestData","l":"getTestPairs()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiTestData","l":"getTestPairs()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"getTextLabels()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"getTextLabels()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getU()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"getUnderlyingMap()"},{"p":"com.rb.nonbiz.text","c":"HasUniqueId","l":"getUniqueId()"},{"p":"com.rb.nonbiz.text","c":"ItemWithId","l":"getUniqueId()"},{"p":"com.rb.nonbiz.text","c":"TestHasUniqueId","l":"getUniqueId()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters","l":"getUpperBoundX()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getUpperBoundX()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"getUpperBoundY()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"getV()"},{"p":"com.rb.nonbiz.json","c":"JsonApiEnumDescriptor","l":"getValidValuesToExplanations()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor","l":"getValidValuesToExplanations()"},{"p":"com.rb.nonbiz.text","c":"TestHasUniqueId","l":"getValue()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"OverridesApplier","l":"getValue(K, HasLongMap<K, V>, Overrides<K, V>)","u":"getValue(K,com.rb.nonbiz.collections.HasLongMap,com.rb.biz.investing.modeling.selection.overrides.Overrides)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"OverridesApplier","l":"getValue(K, RBMap<K, V>, Overrides<K, V>)","u":"getValue(K,com.rb.nonbiz.collections.RBMap,com.rb.biz.investing.modeling.selection.overrides.Overrides)"},{"p":"com.rb.nonbiz.types","c":"DoubleMovement","l":"getValueAfter()"},{"p":"com.rb.nonbiz.types","c":"DoubleMovement","l":"getValueBefore()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"getValueClass()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"getValueClassDescriptor()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"getValueClassDescriptor()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"getValueForEtfs()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"getValueForMutualFunds()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"OverridesApplier","l":"getValueForSingleItem(K, Optional<V>, Overrides<K, V>)","u":"getValueForSingleItem(K,java.util.Optional,com.rb.biz.investing.modeling.selection.overrides.Overrides)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"getValueForStocks()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"getValueForStructuredProducts()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"getValueOrDefault(InstrumentId, V)","u":"getValueOrDefault(com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"getValueOrThrow(InstrumentId)","u":"getValueOrThrow(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"getValueOrThrow(InstrumentId, String, Object...)","u":"getValueOrThrow(com.rb.biz.types.asset.InstrumentId,java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"getValueRegardlessOfCategory()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"getValues()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"getValues()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"getValues()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"getVariance()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"getVariance()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceOrthonormalBasis","l":"getVectorSpaceBasis()"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"getWeight()"},{"p":"com.rb.nonbiz.types","c":"WeightedBy","l":"getWeight()"},{"p":"com.rb.nonbiz.collections","c":"NodeWithWeightedChildren","l":"getWeightedChildren()"},{"p":"com.rb.nonbiz.types","c":"WeightedList","l":"getWeights()"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"getWhenAtMostOneIidMapIsNonEmpty(IidMap<V>, IidMap<V>, IidMap<V>...)","u":"getWhenAtMostOneIidMapIsNonEmpty(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap...)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"getWhenNoValueAndNoOverride()"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"getWhenUpToOneRBEnumMapIsNonEmpty(RBEnumMap<E, V>, RBEnumMap<E, V>, RBEnumMap<E, V>...)","u":"getWhenUpToOneRBEnumMapIsNonEmpty(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"getWhenUpToOneRBMapIsNonEmpty(RBMap<K, V>, RBMap<K, V>, RBMap<K, V>...)","u":"getWhenUpToOneRBMapIsNonEmpty(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap...)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"getX0()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"getXCoordinates()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"getXCoordinates()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getXKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getXKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getXMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getXMapping()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"getY0()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"getY1()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"getYCoordinates()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"getYCoordinates()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"getYForXEqualsX0()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getYKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getYKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getYMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getYMapping()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getZKey(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getZKey(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"getZMapping()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"getZMapping()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"getZScore(double, StatisticalSummary)","u":"getZScore(double,org.apache.commons.math3.stat.descriptive.StatisticalSummary)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"greaterThan()"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRange","l":"hardAndPossiblySameSoftRange(Range<T>, Range<T>)","u":"hardAndPossiblySameSoftRange(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRange","l":"hardAndSoftRange(Range<T>, Range<T>)","u":"hardAndSoftRange(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRangeGeneralInterpreter","l":"HardAndSoftRangeGeneralInterpreter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRangeInterpreter","l":"HardAndSoftRangeInterpreter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"HardAndSoftRangeJsonApiConverter","l":"HardAndSoftRangeJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"hardCodedAllowingEmptyInstrumentMaster(IidMap<Symbol>)","u":"hardCodedAllowingEmptyInstrumentMaster(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"hardCodedAllowingEmptyInstrumentMaster(InstrumentId, String, InstrumentId, String)","u":"hardCodedAllowingEmptyInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"hardCodedAllowingEmptyInstrumentMaster(InstrumentId, String, InstrumentId, String, InstrumentId, String)","u":"hardCodedAllowingEmptyInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"HardCodedInstrumentMaster()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(IidBiMap<Symbol>)","u":"hardCodedInstrumentMaster(com.rb.nonbiz.collections.IidBiMap)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(IidMap<Symbol>)","u":"hardCodedInstrumentMaster(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(InstrumentId, String, InstrumentId, String)","u":"hardCodedInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(InstrumentId, String, InstrumentId, String, InstrumentId, String)","u":"hardCodedInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(InstrumentId, String, InstrumentId, String, InstrumentId, String, InstrumentId, String)","u":"hardCodedInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"hardCodedInstrumentMaster(InstrumentId, String, InstrumentId, String, InstrumentId, String, InstrumentId, String, InstrumentId, String)","u":"hardCodedInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String,com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"hasChildJsonApiConverters(HasJsonApiDocumentation, HasJsonApiDocumentation, HasJsonApiDocumentation...)","u":"hasChildJsonApiConverters(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,com.rb.nonbiz.jsonapi.HasJsonApiDocumentation...)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"hasChildJsonApiConverters(HasJsonApiDocumentation, HasJsonApiDocumentation, HasJsonApiDocumentation...)","u":"hasChildJsonApiConverters(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,com.rb.nonbiz.jsonapi.HasJsonApiDocumentation...)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"hasChildJsonApiConverters(List<HasJsonApiDocumentation>)","u":"hasChildJsonApiConverters(java.util.List)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"hasChildJsonApiConverters(List<HasJsonApiDocumentation>)","u":"hasChildJsonApiConverters(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"hasEitherBoundOpen(Range<C>)","u":"hasEitherBoundOpen(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"hasEnd()"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"hashCode()"},{"p":"com.rb.biz.types","c":"Symbol","l":"hashCode()"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"RBVoid","l":"hashCode()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"hashCode()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassPlusStringKeyMatcherEpsilonDescriptor","l":"hashCode()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.ClassWideMatcherEpsilonDescriptor","l":"hashCode()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor.GetterSpecificMatcherEpsilonDescriptor","l":"hashCode()"},{"p":"com.rb.nonbiz.text","c":"HumanReadableDocumentation","l":"hashCode()"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"hashCode()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"hashCode()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"hashCode()"},{"p":"com.rb.nonbiz.types","c":"RBLongId","l":"hashCode()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"HasInstrumentIdMap(TLongObjectHashMap<Pair<T, V>>)","u":"%3Cinit%3E(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapFromSet(HasInstrumentIdSet<T>, Function<T, V>)","u":"hasInstrumentIdMapFromSet(com.rb.nonbiz.collections.HasInstrumentIdSet,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapOf(T, V, T, V)","u":"hasInstrumentIdMapOf(T,V,T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapOf(T, V, T, V, T, V)","u":"hasInstrumentIdMapOf(T,V,T,V,T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapOf(T, V, T, V, T, V, T, V)","u":"hasInstrumentIdMapOf(T,V,T,V,T,V,T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapOf(T, V, T, V, T, V, T, V, T, V)","u":"hasInstrumentIdMapOf(T,V,T,V,T,V,T,V,T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"hasInstrumentIdMapOf(T, V, T, V, T, V, T, V, T, V, T, V)","u":"hasInstrumentIdMapOf(T,V,T,V,T,V,T,V,T,V,T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"HasInstrumentIdMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"hasInstrumentIdPartition(HasInstrumentIdMap<T, UnitFraction>)","u":"hasInstrumentIdPartition(com.rb.nonbiz.collections.HasInstrumentIdMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"hasInstrumentIdPartitionFromWeights(HasInstrumentIdMap<T, Double>)","u":"hasInstrumentIdPartitionFromWeights(com.rb.nonbiz.collections.HasInstrumentIdMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"HasInstrumentIdSet(TLongObjectHashMap<T>)","u":"%3Cinit%3E(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"hasInstrumentIdSetOf(T, T, T...)","u":"hasInstrumentIdSetOf(T,T,T...)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"HasInstrumentIdSets()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"hasJsonApiConverter(HasJsonApiDocumentation)","u":"hasJsonApiConverter(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"hasJsonApiDocumentationTestHelper()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"HasLongMap(TLongObjectHashMap<V>)","u":"%3Cinit%3E(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"hasLongMapEqualityMatcher(HasLongMap<K, V>)","u":"hasLongMapEqualityMatcher(com.rb.nonbiz.collections.HasLongMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"hasLongMapMatcher(HasLongMap<K, V>, RBMatchers.MatcherGenerator<V>)","u":"hasLongMapMatcher(com.rb.nonbiz.collections.HasLongMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"HasLongSet(TLongHashSet)","u":"%3Cinit%3E(gnu.trove.set.hash.TLongHashSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"HasLongSet(TLongHashSet, List<T>)","u":"%3Cinit%3E(gnu.trove.set.hash.TLongHashSet,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"hasLongSetIsSubsetOf(HasLongSet<T>, Set<T>)","u":"hasLongSetIsSubsetOf(com.rb.nonbiz.collections.HasLongSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"hasLongSetIsSubsetOfHasLongSet(HasLongSet<T>, HasLongSet<T>)","u":"hasLongSetIsSubsetOfHasLongSet(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"hasLongSetMatcher(HasLongSet<K>)","u":"hasLongSetMatcher(com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"HasLongSets()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"hasNoChildJsonApiConverters()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"hasNoChildJsonApiConverters()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"hasNoDefaultValueOrOverrides()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"hasNoDiscriminatorProperty()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"hasNoDiscriminatorPropertyAndThereforeNoValue()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"hasNoJsonApiConverter()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"hasNoJsonValidationInstructions()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"hasNoNontrivialSampleJson()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"hasNoOptionalProperties()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"hasNoRequiredProperties()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"hasNoSeparateJsonApiConverterForTraversing()"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"hasOpenLowerBound(Range<C>)","u":"hasOpenLowerBound(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"hasOpenUpperBound(Range<C>)","u":"hasOpenUpperBound(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"hasSingleChildJsonApiConverter(HasJsonApiDocumentation)","u":"hasSingleChildJsonApiConverter(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"hasSingleChildJsonApiConverter(HasJsonApiDocumentation)","u":"hasSingleChildJsonApiConverter(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_AAPL"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_BAC"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_C"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_DIS"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_EBAY"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_F"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_GE"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_HD"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_IBM"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"I_JPM"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBSquareMatrix","l":"identityRBSquareMatrix(int)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"ifBothPresent(Optional<V1>, Optional<V2>, BiConsumer<V1, V2>)","u":"ifBothPresent(java.util.Optional,java.util.Optional,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"ifBothPresent(OptionalDouble, OptionalDouble, BiConsumer<Double, Double>)","u":"ifBothPresent(java.util.OptionalDouble,java.util.OptionalDouble,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"ifBothPresent(OptionalInt, OptionalInt, BiConsumer<Integer, Integer>)","u":"ifBothPresent(java.util.OptionalInt,java.util.OptionalInt,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"ifHasDoublePropertyElse(JsonObject, String, DoubleConsumer, Runnable)","u":"ifHasDoublePropertyElse(com.google.gson.JsonObject,java.lang.String,java.util.function.DoubleConsumer,java.lang.Runnable)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"ifHasJsonArrayProperty(JsonObject, String, Consumer<JsonArray>)","u":"ifHasJsonArrayProperty(com.google.gson.JsonObject,java.lang.String,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"ifHasJsonObjectProperty(JsonObject, String, Consumer<JsonObject>)","u":"ifHasJsonObjectProperty(com.google.gson.JsonObject,java.lang.String,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"ifHasJsonObjectPropertyElse(JsonObject, String, Consumer<JsonObject>, Runnable)","u":"ifHasJsonObjectPropertyElse(com.google.gson.JsonObject,java.lang.String,java.util.function.Consumer,java.lang.Runnable)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"ifInitialized(Consumer<T>)","u":"ifInitialized(java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"ifNonEmpty(Consumer<IidSet>)","u":"ifNonEmpty(java.util.function.Consumer)"},{"p":"com.rb.nonbiz.search","c":"Filter","l":"ifPresent(Consumer<T>)","u":"ifPresent(java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"ifPresentOrElse(Optional<T>, Consumer<? super T>, Runnable)","u":"ifPresentOrElse(java.util.Optional,java.util.function.Consumer,java.lang.Runnable)"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"ignoresSuppliedValue()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"iidBiMap(IidMap<V>)","u":"iidBiMap(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"iidBiMapOf(InstrumentId, V, InstrumentId, V)","u":"iidBiMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"iidBiMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidBiMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"iidBiMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidBiMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"iidBiMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidBiMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"IidBiMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter.IidCounterBuilder","l":"iidCounterBuilder()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"iidCounterFromMap(IidMap<Integer>)","u":"iidCounterFromMap(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"iidCounterFromStream(Stream<T>)","u":"iidCounterFromStream(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"iidCounterFromStream(Stream<T>, Predicate<T>)","u":"iidCounterFromStream(java.util.stream.Stream,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"iidJsonApiClassDocumentationBuilder()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"IidMap(TLongObjectHashMap<V>)","u":"%3Cinit%3E(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"IidMapConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromCollection(Collection<V>)","u":"iidMapFromCollection(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromCollection(Collection<V>, Function<V, InstrumentId>)","u":"iidMapFromCollection(java.util.Collection,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromFilteredSet(IidSet, Function<InstrumentId, Optional<V>>)","u":"iidMapFromFilteredSet(com.rb.nonbiz.collections.IidSet,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromIterator(Iterator<V1>, Function<V1, InstrumentId>, Function<V1, V2>)","u":"iidMapFromIterator(java.util.Iterator,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromIteratorWithExpectedSize(int, Iterator<V1>, Function<V1, InstrumentId>, Function<V1, V2>)","u":"iidMapFromIteratorWithExpectedSize(int,java.util.Iterator,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromRBMap(RBMap<InstrumentId, V>)","u":"iidMapFromRBMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromSet(IidSet, Function<InstrumentId, V>)","u":"iidMapFromSet(com.rb.nonbiz.collections.IidSet,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromStream(Stream<V>)","u":"iidMapFromStream(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromStream(Stream<V1>, Function<V1, InstrumentId>, Function<V1, V2>)","u":"iidMapFromStream(java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromStreamOfOptionals(Stream<Optional<V>>)","u":"iidMapFromStreamOfOptionals(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromStreamWithExpectedSize(int, Stream<V>)","u":"iidMapFromStreamWithExpectedSize(int,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapFromStreamWithExpectedSize(int, Stream<V1>, Function<V1, InstrumentId>, Function<V1, V2>)","u":"iidMapFromStreamWithExpectedSize(int,java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"iidMapImpreciseValueMatcher(IidMap<V>, Epsilon)","u":"iidMapImpreciseValueMatcher(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"iidMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor)","u":"iidMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"iidMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor, JsonPropertySpecificDocumentation)","u":"iidMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"IidMapMergers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"iidMapOf(InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V, InstrumentId, V)","u":"iidMapOf(com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V,com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapConstructors","l":"iidMapOfHasInstrumentId(V, V, V...)","u":"iidMapOfHasInstrumentId(V,V,V...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"iidMapPreciseValueMatcher(IidMap<V>, Epsilon)","u":"iidMapPreciseValueMatcher(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"IidMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"IidMapSimpleConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"iidMapToFilteredJsonObject(IidMap<V>, JsonTickerMap, BiFunction<InstrumentId, V, JsonElement>, Predicate<JsonElement>)","u":"iidMapToFilteredJsonObject(com.rb.nonbiz.collections.IidMap,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"iidMapToImmutableIndexableArray1D(IidMap<V>, Comparator<Pair<InstrumentId, V>>)","u":"iidMapToImmutableIndexableArray1D(com.rb.nonbiz.collections.IidMap,java.util.Comparator)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"iidMapToJsonObject(IidMap<V>, JsonTickerMap, BiFunction<InstrumentId, V, JsonElement>)","u":"iidMapToJsonObject(com.rb.nonbiz.collections.IidMap,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"iidMapToJsonObject(IidMap<V>, JsonTickerMap, Function<V, JsonElement>)","u":"iidMapToJsonObject(com.rb.nonbiz.collections.IidMap,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"IidMapVisitors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"iidMapWithDefault(V, IidMap<V>)","u":"iidMapWithDefault(V,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"iidMapWithDefaultsByInstrumentType(InstrumentTypeMap<V>, IidMap<V>)","u":"iidMapWithDefaultsByInstrumentType(com.rb.biz.types.asset.InstrumentTypeMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"iidMapWithOnlyDefaultsByInstrumentType(InstrumentTypeMap<V>)","u":"iidMapWithOnlyDefaultsByInstrumentType(com.rb.biz.types.asset.InstrumentTypeMap)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"iidPartition(IidMap<UnitFraction>)","u":"iidPartition(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"iidPartitionFromWeights(IidMap<V>)","u":"iidPartitionFromWeights(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"IidSet(TLongHashSet)","u":"%3Cinit%3E(gnu.trove.set.hash.TLongHashSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"IidSet(TLongHashSet, List<InstrumentId>)","u":"%3Cinit%3E(gnu.trove.set.hash.TLongHashSet,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"iidSetOf(InstrumentId, InstrumentId, InstrumentId...)","u":"iidSetOf(com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"IidSetOperations()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"IidSets()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"IidSetSimpleConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"immutableDoubleIndexableArray2D(double[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"immutableDoubleIndexableArray2D(double[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"immutableDoubleIndexableArray2D(MutableDoubleIndexableArray2D<R, C>)","u":"immutableDoubleIndexableArray2D(com.rb.nonbiz.collections.MutableDoubleIndexableArray2D)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableDoubleIndexableArray2DJsonApiConverter","l":"ImmutableDoubleIndexableArray2DJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"immutableIndexableArray1D(ArrayIndexMapping<K>, V[])","u":"immutableIndexableArray1D(com.rb.nonbiz.collections.ArrayIndexMapping,V[])"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"immutableIndexableArray1D(MutableIndexableArray1D<K, V>)","u":"immutableIndexableArray1D(com.rb.nonbiz.collections.MutableIndexableArray1D)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"immutableIndexableArray1DFromStream(IntFunction<V[]>, Stream<V>, Function<V, K>)","u":"immutableIndexableArray1DFromStream(java.util.function.IntFunction,java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableIndexableArray1DJsonApiConverter","l":"ImmutableIndexableArray1DJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"immutableIndexableArray1DToIidMap(ImmutableIndexableArray1D<InstrumentId, V>)","u":"immutableIndexableArray1DToIidMap(com.rb.nonbiz.collections.ImmutableIndexableArray1D)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"immutableIndexableArray1DToRBMap(ImmutableIndexableArray1D<K, V>)","u":"immutableIndexableArray1DToRBMap(com.rb.nonbiz.collections.ImmutableIndexableArray1D)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"immutableIndexableArray2D(MutableIndexableArray2D<R, C, V>)","u":"immutableIndexableArray2D(com.rb.nonbiz.collections.MutableIndexableArray2D)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"immutableIndexableArray2D(V[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"immutableIndexableArray2D(V[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"immutableIndexableArray3D(MutableIndexableArray3D<X, Y, Z, V>)","u":"immutableIndexableArray3D(com.rb.nonbiz.collections.MutableIndexableArray3D)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"immutableIndexableArray3D(V[][][], ArrayIndexMapping<X>, ArrayIndexMapping<Y>, ArrayIndexMapping<Z>)","u":"immutableIndexableArray3D(V[][][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"ImmutableIndexableArrays1D()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"immutableIntegerIndexableArray2D(int[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"immutableIntegerIndexableArray2D(int[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"immutableIntegerIndexableArray2D(MutableIntegerIndexableArray2D<R, C>)","u":"immutableIntegerIndexableArray2D(com.rb.nonbiz.collections.MutableIntegerIndexableArray2D)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"impliesNoOverrides()"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"imposterizingMockery()"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"ImpreciseValue(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"impreciseValueExplained(V, V)","u":"impreciseValueExplained(V,V)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"impreciseValueListMatcher(List<V>, Epsilon)","u":"impreciseValueListMatcher(java.util.List,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"impreciseValueMapsAlmostEqual(RBMap<K, V>, RBMap<K, V>, Epsilon)","u":"impreciseValueMapsAlmostEqual(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"impreciseValueMatcher(V, Epsilon)","u":"impreciseValueMatcher(V,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"impreciseValueRangeMatcher(Range<T>, Epsilon)","u":"impreciseValueRangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValues","l":"ImpreciseValues()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummaryUtilities","l":"impreciseValuesToRBStatisticalSummary(Iterator<V>, DoubleFunction<V>)","u":"impreciseValuesToRBStatisticalSummary(java.util.Iterator,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment","l":"INCLUDE"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest","l":"INCLUDE"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment","l":"include()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"includeEverything()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"includeTheseExcludeRest(RBSet<T>)","u":"includeTheseExcludeRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"includeTheseExcludeTheseUseRulesForRest(RBSet<T>, RBSet<T>)","u":"includeTheseExcludeTheseUseRulesForRest(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"includeTheseUseRulesForRest(RBSet<T>)","u":"includeTheseUseRulesForRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"increasingPerComparator(Comparator<T>, T, T, T)","u":"increasingPerComparator(java.util.Comparator,T,T,T)"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"increment()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter.IidCounterBuilder","l":"increment(InstrumentId)","u":"increment(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"increment(T)"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"incrementBy(long)"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"incrementOrDecrementBy(long)"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"indexInOrderedCollection(int, Collection<? extends T>)","u":"indexInOrderedCollection(int,java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection.IndexInOrderedCollectionBuilder","l":"indexInOrderedCollectionBuilder()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"indexInSingletonCollection()"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"indexOf(CharSequence, char, int, int)","u":"indexOf(java.lang.CharSequence,char,int,int)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"indexOfNotDigit(CharSequence, int, int)","u":"indexOfNotDigit(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.io","c":"NumberParser","l":"indexOfNotWhiteSpace(CharSequence, int, int)","u":"indexOfNotWhiteSpace(java.lang.CharSequence,int,int)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"info(String, Object...)","u":"info(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"info(Supplier<String>)","u":"info(java.util.function.Supplier)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"initializedPointer(T)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"initializeOrModifyExisting(T, BinaryOperator<T>)","u":"initializeOrModifyExisting(T,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"instantiateItem(long)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"instantiateItem(long)"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"instrumentId(long)"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"instrumentIdArray(Long...)","u":"instrumentIdArray(java.lang.Long...)"},{"p":"com.rb.biz.types","c":"Symbol","l":"instrumentIdAsSymbol(InstrumentId)","u":"instrumentIdAsSymbol(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"instrumentIdGenerator"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"instrumentIdGenerator"},{"p":"com.rb.biz.marketdata","c":"InstrumentIdGenerator","l":"InstrumentIdGenerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"instrumentIdIterator()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"instrumentIdKeysIterator()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"instrumentIdKeysIterator()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"instrumentIdKeysIterator()"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"instrumentIdList(Long...)","u":"instrumentIdList(java.lang.Long...)"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"InstrumentIds()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"instrumentIdSet(Long...)","u":"instrumentIdSet(java.lang.Long...)"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"instrumentIdsToLongs(List<InstrumentId>)","u":"instrumentIdsToLongs(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"instrumentIdStream()"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"instrumentLongsToIds(List<Long>)","u":"instrumentLongsToIds(java.util.List)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"InstrumentMasters","l":"InstrumentMasters()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType","l":"InstrumentType()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"instrumentTypeMapBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"InstrumentTypeMapJsonApiConverter","l":"InstrumentTypeMapJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"instrumentTypeMapWithSharedDefaults(T)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"intArray2DMatcher(int[][])"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"intArrayMatcher(int[])"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"intArrayWithNCopies(int, int)","u":"intArrayWithNCopies(int,int)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"INTEGER_ROUNDING_SCALE"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"IntegerValue(int)","u":"%3Cinit%3E(int)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"integerValueMatcher(T)"},{"p":"com.rb.nonbiz.types","c":"Interpolator","l":"interpolateUsingPreference(InterpolationPreference)","u":"interpolateUsingPreference(com.rb.nonbiz.types.InterpolationPreference)"},{"p":"com.rb.nonbiz.types","c":"RawInterpolator","l":"interpolateWithLeftPreference(UnitFraction)","u":"interpolateWithLeftPreference(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"intersection(List<K>, List<K>)","u":"intersection(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"intersection(RBSet<T>, RBSet<T>)","u":"intersection(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"intersection(RBSet<T>, Set<T>)","u":"intersection(com.rb.nonbiz.collections.RBSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"intersection(Set<T>, RBSet<T>)","u":"intersection(java.util.Set,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"intersectionOfIidSets(IidSet, IidSet)","u":"intersectionOfIidSets(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"intersectionOfIidSets(IidSet, Set<InstrumentId>)","u":"intersectionOfIidSets(com.rb.nonbiz.collections.IidSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"intersectionOfIidSets(Set<InstrumentId>, IidSet)","u":"intersectionOfIidSets(java.util.Set,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"intExplained(int, int)","u":"intExplained(int,int)"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"intuitiveStringSplit(String, char)","u":"intuitiveStringSplit(java.lang.String,char)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"IsArrayIndex","l":"intValue()"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"intValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"intValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"intValue()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"inverse()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"inverse()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultiplier","l":"inverse()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"inverse()"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"invertMapOfDisjointIidSets(RBMap<V, IidSet>)","u":"invertMapOfDisjointIidSets(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"isAcceptable(UnitFraction)","u":"isAcceptable(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"isAllWhiteSpace(String)","u":"isAllWhiteSpace(java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isAlmostEqualTo(double, Epsilon)","u":"isAlmostEqualTo(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isAlmostEqualTo(Epsilon)","u":"isAlmostEqualTo(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isAlmostEqualTo(T, Epsilon)","u":"isAlmostEqualTo(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"isAlmostExtreme(Epsilon)","u":"isAlmostExtreme(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"isAlmostIdentityMatrix(RBMatrix, Epsilon)","u":"isAlmostIdentityMatrix(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isAlmostMultipliedBy(double, Epsilon)","u":"isAlmostMultipliedBy(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"isAlmostOne(Epsilon)","u":"isAlmostOne(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"isAlmostOne(Epsilon)","u":"isAlmostOne(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"isAlmostRound()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"isAlmostUnitVector(Epsilon)","u":"isAlmostUnitVector(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"isAlmostZero(double)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"isAlmostZero(Epsilon)","u":"isAlmostZero(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isAlmostZero(Epsilon)","u":"isAlmostZero(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isAlmostZeroButNotZero(Epsilon)","u":"isAlmostZeroButNotZero(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isBetweenInclusive(C, C)","u":"isBetweenInclusive(C,C)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"isDebugEnabled()"},{"p":"com.rb.nonbiz.text","c":"LogLevelChecker","l":"isDebugEnabled(RBLog)","u":"isDebugEnabled(com.rb.nonbiz.text.RBLog)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isDefined()"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"isEmpty()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"isEmpty()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"isEmpty()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"isEmpty()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"isEmpty()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"isEmpty()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"isEmpty(JsonArray)","u":"isEmpty(com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"isEmpty(JsonObject)","u":"isEmpty(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isEqual()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isEqualTo()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isEqualTo(C)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isExactlyRound()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"isFixedToZero()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"isGeneric()"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isGreaterThan()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isGreaterThan()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isGreaterThan(C)"},{"p":"com.rb.nonbiz.types","c":"RBNumeric","l":"isGreaterThan(T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isGreaterThanOrAlmostEqualTo(T, Epsilon)","u":"isGreaterThanOrAlmostEqualTo(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isGreaterThanOrEqualTo()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isGreaterThanOrEqualTo()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isGreaterThanOrEqualTo(C)"},{"p":"com.rb.nonbiz.types","c":"RBNumeric","l":"isGreaterThanOrEqualTo(T)"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isIn(Range<C>)","u":"isIn(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"isInfoEnabled()"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"isInitialized()"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isLessThan()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isLessThan()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isLessThan(C)"},{"p":"com.rb.nonbiz.types","c":"RBNumeric","l":"isLessThan(T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isLessThanOrAlmostEqualTo(T, Epsilon)","u":"isLessThanOrAlmostEqualTo(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"isLessThanOrEqualTo()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isLessThanOrEqualTo()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isLessThanOrEqualTo(C)"},{"p":"com.rb.nonbiz.types","c":"RBNumeric","l":"isLessThanOrEqualTo(T)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"isLogicallyAndPhysicallySymmetric(Epsilon)","u":"isLogicallyAndPhysicallySymmetric(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isNegative()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isNegativeOrZero()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isNotWithin(UnitFraction)","u":"isNotWithin(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"isOne()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"isOne()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"isOne()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"isOrthoNormalTransformationMatrix(RBMatrix, RBMatrix, Epsilon)","u":"isOrthoNormalTransformationMatrix(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isPositive()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isPositiveOrZero()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"isPositiveSemiDefiniteSymmetricMatrix(RBSquareMatrix)","u":"isPositiveSemiDefiniteSymmetricMatrix(com.rb.nonbiz.math.vectorspaces.RBSquareMatrix)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isRoundToScale(int)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isRoundToScale(RoundingScale)","u":"isRoundToScale(com.rb.biz.types.trading.RoundingScale)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isSafelyGreaterThan(T, Epsilon)","u":"isSafelyGreaterThan(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isSafelyLessThan(T, Epsilon)","u":"isSafelyLessThan(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"isSameOrLooser(ClosedUnitFractionRange)","u":"isSameOrLooser(com.rb.nonbiz.types.ClosedUnitFractionRange)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"isSingleton(JsonArray)","u":"isSingleton(com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"isSpecialValue()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"isSquare()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"isSquare()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"isSquareWithRowKeysSameAsColumnKeys()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"isStrictlyLooser(ClosedUnitFractionRange)","u":"isStrictlyLooser(com.rb.nonbiz.types.ClosedUnitFractionRange)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"isSubsetOf(IidSet, IidSet)","u":"isSubsetOf(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"isSubsetOf(IidSet, Set<InstrumentId>)","u":"isSubsetOf(com.rb.nonbiz.collections.IidSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"isSubsetOf(RBSet<T>, RBSet<T>)","u":"isSubsetOf(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"isSubsetOf(RBSet<T>, Set<T>)","u":"isSubsetOf(com.rb.nonbiz.collections.RBSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"isSubsetOf(Set<InstrumentId>, IidSet)","u":"isSubsetOf(java.util.Set,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"isSubsetOf(Set<T>, RBSet<T>)","u":"isSubsetOf(java.util.Set,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"isSubsetOf(Set<T>, Set<T>)","u":"isSubsetOf(java.util.Set,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"isSubsetOfHasLongSet(Set<T>, HasLongSet<T>)","u":"isSubsetOfHasLongSet(java.util.Set,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"IndexableDoubleDataStore2D","l":"isSymmetric(Epsilon)","u":"isSymmetric(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"isSymmetricMatrix(RBMatrix, Epsilon)","u":"isSymmetricMatrix(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"isTraceEnabled()"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"isTrimmed(String)","u":"isTrimmed(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"isTrivialIdentityMapping()"},{"p":"com.rb.nonbiz.testmatchers","c":"LambdaSwitchCase","l":"isTypeV(T)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"isUnrestricted()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"isUnrestricted()"},{"p":"com.rb.nonbiz.io","c":"RBFileUtilities","l":"isValidFilePath(String)","u":"isValidFilePath(java.lang.String)"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"isValidJavaIdentifier(String)","u":"isValidJavaIdentifier(java.lang.String)"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"isValidRowboatJavaIdentifier(String)","u":"isValidRowboatJavaIdentifier(java.lang.String)"},{"p":"com.rb.biz.types","c":"Symbol","l":"isValidSymbol(String)","u":"isValidSymbol(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"isValidUnitFraction(BigDecimal)","u":"isValidUnitFraction(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"isWithin(UnitFraction)","u":"isWithin(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"isWithin(V, UnitFraction)","u":"isWithin(V,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"isZero()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"isZero()"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem","l":"itemInsteadOfUniqueId(T)"},{"p":"com.rb.nonbiz.text","c":"ItemsWithId","l":"ItemsWithId()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"ItemsWithId","l":"itemsWithUniqueIds(ItemWithId<T>, ItemWithId<T>...)","u":"itemsWithUniqueIds(com.rb.nonbiz.text.ItemWithId,com.rb.nonbiz.text.ItemWithId...)"},{"p":"com.rb.nonbiz.text","c":"ItemWithId","l":"itemWithId(String, T)","u":"itemWithId(java.lang.String,T)"},{"p":"com.rb.nonbiz.text","c":"ItemWithLabel","l":"itemWithLabel(HumanReadableLabel, T)","u":"itemWithLabel(com.rb.nonbiz.text.HumanReadableLabel,T)"},{"p":"com.rb.nonbiz.text","c":"ItemWithLabel","l":"itemWithLabel(String, T)","u":"itemWithLabel(java.lang.String,T)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"iterableEqualityMatcher(Iterable<T>, RBMatchers.MatcherGenerator<T>)","u":"iterableEqualityMatcher(java.lang.Iterable,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"iterableMatcher(Iterable<T>, RBMatchers.MatcherGenerator<T>)","u":"iterableMatcher(java.lang.Iterable,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"iterator()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"iterator()"},{"p":"com.rb.nonbiz.math.sequence","c":"Sequence","l":"iterator()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"iteratorEqualityMatcher(Iterator<T>)","u":"iteratorEqualityMatcher(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"iteratorItemsAreUnique(Iterator<T>)","u":"iteratorItemsAreUnique(java.util.Iterator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"iteratorMatcher(Iterator<T>, RBMatchers.MatcherGenerator<T>)","u":"iteratorMatcher(java.util.Iterator,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"iteratorToJsonArray(int, Iterator<T>, Function<T, JsonElement>)","u":"iteratorToJsonArray(int,java.util.Iterator,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"javaGenericJsonApiPropertyDescriptor(Class<?>, JsonApiPropertyDescriptor, JsonApiPropertyDescriptor...)","u":"javaGenericJsonApiPropertyDescriptor(java.lang.Class,com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonApiPropertyDescriptor...)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"javaGenericJsonApiPropertyDescriptor(Class<?>, JsonPropertySpecificDocumentation, JsonApiPropertyDescriptor, JsonApiPropertyDescriptor...)","u":"javaGenericJsonApiPropertyDescriptor(java.lang.Class,com.rb.nonbiz.json.JsonPropertySpecificDocumentation,com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonApiPropertyDescriptor...)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"javaGenericJsonApiPropertyDescriptor(Class<?>, List<JsonApiPropertyDescriptor>)","u":"javaGenericJsonApiPropertyDescriptor(java.lang.Class,java.util.List)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"javaGenericJsonApiPropertyDescriptor(Class<?>, List<JsonApiPropertyDescriptor>, JsonPropertySpecificDocumentation)","u":"javaGenericJsonApiPropertyDescriptor(java.lang.Class,java.util.List,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"joinWithHarvardComma(List<String>)","u":"joinWithHarvardComma(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_ARRAY"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_BOOLEAN"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_NULL"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_NUMBER"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_OBJECT"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"JSON_STRING"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"jsonApiArrayDocumentationBuilder()"},{"p":"com.rb.nonbiz.io.http","c":"JsonApiCallerUsingPost","l":"JsonApiCallerUsingPost()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"jsonApiClassDocumentationBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"jsonApiClassWithNonFixedPropertiesDocumentationBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"jsonApiClassWithSubclassesDocumentationBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation","l":"JsonApiDocumentation()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentationForEnumGenerator","l":"JsonApiDocumentationForEnumGenerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentationForPseudoEnumGenerator","l":"JsonApiDocumentationForPseudoEnumGenerator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"JsonApiEnumDescriptor","l":"jsonApiEnumDescriptor(Class<E>, RBEnumMap<E, HumanReadableDocumentation>)","u":"jsonApiEnumDescriptor(java.lang.Class,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"jsonApiEnumDocumentationBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiPair","l":"jsonApiPair(T, JsonObject)","u":"jsonApiPair(T,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor","l":"JsonApiPropertyDescriptor()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"jsonApiRbNumericWrapperDocumentationBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"jsonApiSubclassInfoBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"jsonApiTestData(RBMatchers.MatcherGenerator<T>, JsonApiPair<T>, JsonApiPair<T>...)","u":"jsonApiTestData(com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.jsonapi.JsonApiPair,com.rb.nonbiz.jsonapi.JsonApiPair...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArray(Collection<? extends JsonElement>)","u":"jsonArray(java.util.Collection)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArray(int, Stream<? extends JsonElement>)","u":"jsonArray(int,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArray(JsonElement, JsonElement, JsonElement...)","u":"jsonArray(com.google.gson.JsonElement,com.google.gson.JsonElement,com.google.gson.JsonElement...)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiPair","l":"jsonArrayApiPair(T, JsonArray)","u":"jsonArrayApiPair(T,com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiTestData","l":"jsonArrayApiTestData(RBMatchers.MatcherGenerator<T>, JsonArrayApiPair<T>, JsonArrayApiPair<T>...)","u":"jsonArrayApiTestData(com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.jsonapi.JsonArrayApiPair,com.rb.nonbiz.jsonapi.JsonArrayApiPair...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonArrayEpsilonMatcher(JsonArray)","u":"jsonArrayEpsilonMatcher(com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonArrayMatcher(JsonArray, Epsilon)","u":"jsonArrayMatcher(com.google.gson.JsonArray,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayOfObjectsToIidMap(JsonArray, Function<JsonObject, InstrumentId>, Function<JsonObject, T>)","u":"jsonArrayOfObjectsToIidMap(com.google.gson.JsonArray,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayToDoubleArray(JsonArray, Function<JsonElement, Double>)","u":"jsonArrayToDoubleArray(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayToIntArray(JsonArray, Function<JsonElement, Integer>)","u":"jsonArrayToIntArray(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayToList(JsonArray, Function<JsonElement, T>)","u":"jsonArrayToList(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayToRBSet(JsonArray, Function<JsonElement, T>)","u":"jsonArrayToRBSet(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonArrayToSimpleArrayIndexMapping(JsonArray, Function<JsonElement, V>)","u":"jsonArrayToSimpleArrayIndexMapping(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonArrayToStream(JsonArray, Function<JsonElement, T>)","u":"jsonArrayToStream(com.google.gson.JsonArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBigDecimal(BigDecimal)","u":"jsonBigDecimal(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBigDecimal(P)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBigDecimalUnrounded(BigDecimal)","u":"jsonBigDecimalUnrounded(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBigDecimalUnrounded(P)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBoolean(boolean)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonBooleanArray(boolean, boolean, boolean...)","u":"jsonBooleanArray(boolean,boolean,boolean...)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBps(BigDecimal)","u":"jsonBps(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBps(double)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBps(I)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonBps(P)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDate(LocalDate)","u":"jsonDate(java.time.LocalDate)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDouble(double)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDouble(I)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDouble(P)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonDoubleArray(double, double, double...)","u":"jsonDoubleArray(double,double,double...)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDoubleRoundedTo6Digits(double)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonDoubleUnrounded(double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonElementArray(JsonElement, JsonElement, JsonElement...)","u":"jsonElementArray(com.google.gson.JsonElement,com.google.gson.JsonElement,com.google.gson.JsonElement...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonElementEpsilonMatcher(JsonElement)","u":"jsonElementEpsilonMatcher(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonElementMatcher(JsonElement, Epsilon)","u":"jsonElementMatcher(com.google.gson.JsonElement,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"JsonElementTypes","l":"JsonElementTypes()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"JsonFileReader","l":"JsonFileReader()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"JsonFileWriter","l":"JsonFileWriter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonInteger(int)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonIntegerArray(int, int, int...)","u":"jsonIntegerArray(int,int,int...)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonLong(long)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonLongArray(long, long, long...)","u":"jsonLongArray(long,long,long...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(RBMap<String, JsonElement>)","u":"jsonObject(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"jsonObject(String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement, String, JsonElement)","u":"jsonObject(java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement,java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonObjectEpsilonMatcher(JsonObject)","u":"jsonObjectEpsilonMatcher(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonObjectMatcher(JsonObject, Epsilon)","u":"jsonObjectMatcher(com.google.gson.JsonObject,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"JsonObjectPath","l":"jsonObjectPath(List<String>)","u":"jsonObjectPath(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"JsonObjectPath","l":"jsonObjectPath(String, String...)","u":"jsonObjectPath(java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToClosedRange(JsonObject, Function<JsonElement, C>)","u":"jsonObjectToClosedRange(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToIidMap(JsonObject, JsonTickerMap, BiFunction<InstrumentId, JsonElement, V>)","u":"jsonObjectToIidMap(com.google.gson.JsonObject,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToIidMap(JsonObject, JsonTickerMap, Function<JsonElement, V>)","u":"jsonObjectToIidMap(com.google.gson.JsonObject,com.rb.biz.jsonapi.JsonTickerMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRange(JsonObject, Function<JsonElement, C>)","u":"jsonObjectToRange(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRBEnumMap(JsonObject, Class<E>, Function<String, E>, Function<JsonElement, V>)","u":"jsonObjectToRBEnumMap(com.google.gson.JsonObject,java.lang.Class,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRBMap(JsonObject, Function<String, K>, BiFunction<K, JsonElement, V>)","u":"jsonObjectToRBMap(com.google.gson.JsonObject,java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRBMap(JsonObject, Function<String, K>, Function<JsonElement, V>)","u":"jsonObjectToRBMap(com.google.gson.JsonObject,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRBSet(JsonObject, BiFunction<String, JsonElement, V>)","u":"jsonObjectToRBSet(com.google.gson.JsonObject,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToRBSetOfHasUniqueId(JsonObject, Function<JsonElement, V>)","u":"jsonObjectToRBSetOfHasUniqueId(com.google.gson.JsonObject,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonObjectToStream(JsonObject, BiFunction<String, JsonElement, V>)","u":"jsonObjectToStream(com.google.gson.JsonObject,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonPercentage(BigDecimal)","u":"jsonPercentage(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonPercentage(double)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonPercentage(I)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonPercentage(P)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonPercentage(UnitFraction)","u":"jsonPercentage(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.json","c":"JsonPointList.JsonPointListBuilder","l":"jsonPointListBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiPair","l":"jsonPrimitiveApiPair(T, JsonPrimitive)","u":"jsonPrimitiveApiPair(T,com.google.gson.JsonPrimitive)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiTestData","l":"jsonPrimitiveApiTestData(RBMatchers.MatcherGenerator<T>, JsonPrimitiveApiPair<T>, JsonPrimitiveApiPair<T>...)","u":"jsonPrimitiveApiTestData(com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.jsonapi.JsonPrimitiveApiPair,com.rb.nonbiz.jsonapi.JsonPrimitiveApiPair...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonPrimitiveEpsilonMatcher(JsonPrimitive)","u":"jsonPrimitiveEpsilonMatcher(com.google.gson.JsonPrimitive)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"jsonPrimitiveMatcher(JsonPrimitive, Epsilon)","u":"jsonPrimitiveMatcher(com.google.gson.JsonPrimitive,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"JsonPropertySpecificDocumentation","l":"jsonPropertySpecificDocumentation(HumanReadableDocumentation)","u":"jsonPropertySpecificDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.json","c":"JsonPropertySpecificDocumentation","l":"jsonPropertySpecificDocumentation(String)","u":"jsonPropertySpecificDocumentation(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries.JsonSparseTimeSeriesBuilder","l":"jsonSparseTimeSeriesBuilder()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonString(String)","u":"jsonString(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonStringArray(int, Stream<String>)","u":"jsonStringArray(int,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"jsonStringArray(String, String, String...)","u":"jsonStringArray(java.lang.String,java.lang.String,java.lang.String...)"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"jsonTicker(String)","u":"jsonTicker(java.lang.String)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"jsonTickerMap(IidBiMap<JsonTicker>)","u":"jsonTickerMap(com.rb.nonbiz.collections.IidBiMap)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"jsonValidationInstructionsBuilder()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"jsonValidationInstructionsForRange(JsonApiPropertyDescriptor, JsonApiPropertyDescriptor)","u":"jsonValidationInstructionsForRange(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonValidator","l":"JsonValidator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonYear(int)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"jsonZeroBasedReturn(OnesBasedReturn)","u":"jsonZeroBasedReturn(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"keySet()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"keySet()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"keysIterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"keysIterator()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"keysStream()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"keyStream()"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"kTimesOutOfN(int, int)","u":"kTimesOutOfN(int,int)"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"label(String)","u":"label(java.lang.String)"},{"p":"com.rb.nonbiz.testmatchers","c":"LambdaSwitchCase","l":"lambdaCase(Predicate<T>, Function<T, V>, RBMatchers.MatcherGenerator<V>)","u":"lambdaCase(java.util.function.Predicate,java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"LambdaSwitchCase","l":"lambdaSwitchMatcher(T, LambdaSwitchCase<T, ?>, LambdaSwitchCase<T, ?>...)","u":"lambdaSwitchMatcher(T,com.rb.nonbiz.testmatchers.LambdaSwitchCase,com.rb.nonbiz.testmatchers.LambdaSwitchCase...)"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"largeEpsilon(double)"},{"p":"com.rb.nonbiz.types","c":"PositiveEpsilon","l":"largePositiveEpsilon(double)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"last()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"last()"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"lastCharacterIsAlphabetic(String)","u":"lastCharacterIsAlphabetic(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"lazyGetFirstPresentOptionalOrElse(Supplier<Optional<T>>, Supplier<Optional<T>>, Supplier<T>)","u":"lazyGetFirstPresentOptionalOrElse(java.util.function.Supplier,java.util.function.Supplier,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"lazyGetIfPresent(List<Supplier<Optional<T>>>)","u":"lazyGetIfPresent(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"lazyGetIfPresent(Supplier<Optional<T>>...)","u":"lazyGetIfPresent(java.util.function.Supplier...)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"lazyGetPairIfPresent(A, A, Function<A, Optional<B>>)","u":"lazyGetPairIfPresent(A,A,java.util.function.Function)"},{"p":"com.rb.nonbiz.types","c":"LazyValue","l":"lazyValue(Supplier<T>)","u":"lazyValue(java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"left(L)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"left(L)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"left(T)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"leftOnly(L)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"leftOnly(T)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"lessOftenThan(UnitFraction)","u":"lessOftenThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"lessThan()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"linearCollaredRBNumericFunctionBuilder()"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"linearCombination(NodeWithWeightedChildren<N, L>)","u":"linearCombination(com.rb.nonbiz.collections.NodeWithWeightedChildren)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMaps","l":"linearlyCombineDoubleMaps(List<DoubleMap<K>>, List<Double>)","u":"linearlyCombineDoubleMaps(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"linkedHashMapMatcher(LinkedHashMap<K, V>, RBMatchers.MatcherGenerator<V>)","u":"linkedHashMapMatcher(java.util.LinkedHashMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V)","u":"linkedHashMapOf(K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V, K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"linkedHashMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"linkedHashMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"LinkedHashMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi.doc","c":"RecursiveJsonApiDocumentationLister","l":"list(JsonApiDocumentation)","u":"list(com.rb.nonbiz.jsonapi.JsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi.doc","c":"AllPropertiesMentionedInSingleDocumentationStringLister","l":"listAll(HumanReadableDocumentation)","u":"listAll(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listConcatenation(Iterator<List<K>>)","u":"listConcatenation(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listConcatenation(List<K>...)","u":"listConcatenation(java.util.List...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listConcatenationFromEach(Collection<X>, Function<X, Stream<Y>>)","u":"listConcatenationFromEach(java.util.Collection,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listConcatenationFromEachPair(Collection<X1>, Collection<X2>, BiFunction<X1, X2, List<Y>>)","u":"listConcatenationFromEachPair(java.util.Collection,java.util.Collection,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listConcatenationWithoutDuplicates(List<K>...)","u":"listConcatenationWithoutDuplicates(java.util.List...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listItemsAreUnique(List<T>)","u":"listItemsAreUnique(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"listOfOptionalsToJsonArray(List<Optional<T>>, Function<T, JsonElement>)","u":"listOfOptionalsToJsonArray(java.util.List,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"listsAreSimilar(List<T>, List<T>, BiPredicate<T, T>)","u":"listsAreSimilar(java.util.List,java.util.List,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"listToJsonArray(List<T>)","u":"listToJsonArray(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"listToJsonArray(List<T>, Function<T, JsonElement>)","u":"listToJsonArray(java.util.List,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"lockValues(MutableIidMap<MutableRBMap<K, V>>)","u":"lockValues(com.rb.nonbiz.collections.MutableIidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"lockValues(MutableRBMap<K, MutableIidMap<V>>)","u":"lockValues(com.rb.nonbiz.collections.MutableRBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"lockValues(MutableRBMap<K1, MutableRBMap<K2, V>>)","u":"lockValues(com.rb.nonbiz.collections.MutableRBMap)"},{"p":"com.rb.nonbiz.text","c":"LogLevelChecker","l":"LogLevelChecker()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"longArrayMatcher(long[])"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"longCounter()"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"longCounter(long)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"longExplained(long, long)","u":"longExplained(long,long)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"longsIterator()"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"longValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"longValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"longValue()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"loosenClosedUnitFractionRangeByFixedAmount(ClosedUnitFractionRange, UnitFraction)","u":"loosenClosedUnitFractionRangeByFixedAmount(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.search","c":"LowerAndUpperBoundsFinder","l":"LowerAndUpperBoundsFinder()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"lowerEndpoint()"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"lowerEndpoint()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"lowerEndpoint()"},{"p":"com.rb.nonbiz.io","c":"DirectoryCreator","l":"makeAllDirs(String)","u":"makeAllDirs(java.lang.String)"},{"p":"com.rb.nonbiz.io.http","c":"JsonApiCallerUsingPost","l":"makeCall(CloseableHttpClient, URI, JsonObject)","u":"makeCall(org.apache.http.impl.client.CloseableHttpClient,java.net.URI,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.io.http","c":"JsonApiCallerUsingPost","l":"makeCall(URI, JsonObject)","u":"makeCall(java.net.URI,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"makeClosedRangesForDiscreteValues(List<T>, T, UnaryOperator<T>)","u":"makeClosedRangesForDiscreteValues(java.util.List,T,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"makeComparator(Function<T, Comparable>...)","u":"makeComparator(java.util.function.Function...)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"makeContiguousDateDiscreteRangeMap(RBMap<LocalDate, V>, LocalDate)","u":"makeContiguousDateDiscreteRangeMap(com.rb.nonbiz.collections.RBMap,java.time.LocalDate)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"makeDummyObject()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers","l":"makeMatcher(T, Match<T, ?>, Match<T, ?>...)","u":"makeMatcher(T,com.rb.nonbiz.testmatchers.Match,com.rb.nonbiz.testmatchers.Match...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers","l":"makeMatcher(T, Predicate<T>)","u":"makeMatcher(T,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"makeMatchingNontrivialObject()"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"makeNontrivialObject()"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"makeOnlyObject()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestPlusIntegration","l":"makeRealObject()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestPlusIntegration","l":"makeRealObject(LocalDateTime)","u":"makeRealObject(java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers","l":"makeSimpleMatcher(Predicate<T>)","u":"makeSimpleMatcher(java.util.function.Predicate)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"makeTrivialObject()"},{"p":"com.rb.nonbiz.collections","c":"UniqueIdToEnum","l":"makeUniqueIdToEnumMap(T[])"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeUnweightedAverage(Iterable<T>)","u":"makeUnweightedAverage(java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeUnweightedAverage(Iterator<T>)","u":"makeUnweightedAverage(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"DoublesWeighter","l":"makeWeightedAverage(Iterable<Double>, Iterable<Double>)","u":"makeWeightedAverage(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeWeightedAverage(Iterable<T>, Iterable<W>)","u":"makeWeightedAverage(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"DoublesWeighter","l":"makeWeightedAverage(Iterator<Double>, Iterator<Double>)","u":"makeWeightedAverage(java.util.Iterator,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeWeightedAverage(Iterator<T>, Iterator<W>)","u":"makeWeightedAverage(java.util.Iterator,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeWeightedAverageWithBigDecimalWeights(Iterable<T>, Iterable<BigDecimal>)","u":"makeWeightedAverageWithBigDecimalWeights(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"makeWeightedAverageWithBigDecimalWeights(Iterator<T>, Iterator<BigDecimal>)","u":"makeWeightedAverageWithBigDecimalWeights(java.util.Iterator,java.util.Iterator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"mapEntryMatcher(Map.Entry<K, V>, RBMatchers.MatcherGenerator<V>)","u":"mapEntryMatcher(java.util.Map.Entry,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"mapEntrySet(RBMap<K, V1>, BiFunction<K, V1, V2>)","u":"mapEntrySet(com.rb.nonbiz.collections.RBMap,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"mapEntrySetToDouble(RBMap<K, V1>, ToDoubleBiFunction<K, V1>)","u":"mapEntrySetToDouble(com.rb.nonbiz.collections.RBMap,java.util.function.ToDoubleBiFunction)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"match(Function<T, F>, RBMatchers.MatcherGenerator<F>)","u":"match(java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchArrayUsingEquals(Function<T, V[]>)","u":"matchArrayUsingEquals(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchClass(Function<T, T>)","u":"matchClass(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchDoubleList(Function<T, List<Double>>, Epsilon)","u":"matchDoubleList(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchEnum(Function<T, F>)","u":"matchEnum(java.util.function.Function)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilonDescriptor","l":"MatcherEpsilonDescriptor(Class<T>)","u":"%3Cinit%3E(java.lang.Class)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon, MatcherEpsilonDescriptor<?>, Epsilon)","u":"matcherEpsilons(com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"matcherEpsilons(Optional<Epsilon>, RBMap<MatcherEpsilonDescriptor<?>, Epsilon>)","u":"matcherEpsilons(java.util.Optional,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"matcherMetaTest()"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"matcherMetaTest()"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matches(T, T)","u":"matches(T,T)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchIidMap(Function<T, IidMap<V>>, RBMatchers.MatcherGenerator<V>)","u":"matchIidMap(java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchIidPreciseValuesMap(Function<T, IidMap<V>>, Epsilon)","u":"matchIidPreciseValuesMap(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchIidSet(Function<T, IidSet>)","u":"matchIidSet(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchImpreciseValuesRBMap(Function<T, RBMap<K, V>>, Epsilon)","u":"matchImpreciseValuesRBMap(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchIntArray(Function<T, int[]>)","u":"matchIntArray(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchIntegerValue(Function<T, F>)","u":"matchIntegerValue(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchList(Function<T, List<V>>, RBMatchers.MatcherGenerator<V>)","u":"matchList(java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchListUsingAlmostEquals(Function<T, List<V>>, Epsilon)","u":"matchListUsingAlmostEquals(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchListUsingEquals(Function<T, List<V>>)","u":"matchListUsingEquals(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptional(Function<T, Optional<F>>, RBMatchers.MatcherGenerator<F>)","u":"matchOptional(java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalDouble(Function<T, OptionalDouble>, Epsilon)","u":"matchOptionalDouble(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalEnum(Function<T, Optional<F>>)","u":"matchOptionalEnum(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalImpreciseValue(Function<T, Optional<V>>, Epsilon)","u":"matchOptionalImpreciseValue(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalInt(Function<T, OptionalInt>)","u":"matchOptionalInt(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalPreciseValue(Function<T, Optional<V>>, Epsilon)","u":"matchOptionalPreciseValue(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchOptionalUsingEquals(Function<T, Optional<F>>)","u":"matchOptionalUsingEquals(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchPreciseValuesRBMap(Function<T, RBMap<K, V>>, Epsilon)","u":"matchPreciseValuesRBMap(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchRBMap(Function<T, RBMap<K, V>>, RBMatchers.MatcherGenerator<V>)","u":"matchRBMap(java.util.function.Function,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchSuperClass(RBMatchers.MatcherGenerator<S>)","u":"matchSuperClass(com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchUsingAlmostEquals(Function<T, F>, Epsilon)","u":"matchUsingAlmostEquals(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchUsingDoubleAlmostEquals(Function<T, Double>, Epsilon)","u":"matchUsingDoubleAlmostEquals(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchUsingEquals(Function<T, F>)","u":"matchUsingEquals(java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"Match","l":"matchUsingImpreciseAlmostEquals(Function<T, F>, Epsilon)","u":"matchUsingImpreciseAlmostEquals(java.util.function.Function,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBColtMatchers","l":"matrix1dMatcher(DoubleMatrix1D, Epsilon)","u":"matrix1dMatcher(cern.colt.matrix.DoubleMatrix1D,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBColtMatchers","l":"matrix1dMatcher(DoubleMatrix1D, MatcherEpsilons)","u":"matrix1dMatcher(cern.colt.matrix.DoubleMatrix1D,com.rb.nonbiz.testutils.MatcherEpsilons)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"MatrixColumnIndex","l":"matrixColumnIndex(int)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"matrixColumnIndexStream()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBColtMatchers","l":"matrixMatcher(DoubleMatrix2D, Epsilon)","u":"matrixMatcher(cern.colt.matrix.DoubleMatrix2D,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBColtMatchers","l":"matrixMatcher(DoubleMatrix2D, MatcherEpsilons)","u":"matrixMatcher(cern.colt.matrix.DoubleMatrix2D,com.rb.nonbiz.testutils.MatcherEpsilons)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"MatrixRowIndex","l":"matrixRowIndex(int)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"matrixRowIndexStream()"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"MAX_ALLOWED_EPSILON_VALUE"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"MAX_SPLIT_MULTIPLIER"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"max(NonNegativeQuantity, NonNegativeQuantity)","u":"max(com.rb.biz.types.trading.NonNegativeQuantity,com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"max(PositiveQuantity, PositiveQuantity)","u":"max(com.rb.biz.types.trading.PositiveQuantity,com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"max(SignedQuantity, SignedQuantity)","u":"max(com.rb.biz.types.trading.SignedQuantity,com.rb.biz.types.trading.SignedQuantity)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"max(T, T)","u":"max(T,T)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"max(T, T)","u":"max(T,T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"max(T, T)","u":"max(T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"max(T, T...)","u":"max(T,T...)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"maxAllowingOptionalDouble(double, OptionalDouble)","u":"maxAllowingOptionalDouble(double,java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"maxAllowingOptionalDouble(OptionalDouble, double)","u":"maxAllowingOptionalDouble(java.util.OptionalDouble,double)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"maxAllowingOptionalInt(int, OptionalInt)","u":"maxAllowingOptionalInt(int,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"maxAllowingOptionalInt(OptionalInt, int)","u":"maxAllowingOptionalInt(java.util.OptionalInt,int)"},{"p":"com.rb.nonbiz.types","c":"RBLongs","l":"maxAllowingOptionalLong(long, OptionalLong)","u":"maxAllowingOptionalLong(long,java.util.OptionalLong)"},{"p":"com.rb.nonbiz.types","c":"RBLongs","l":"maxAllowingOptionalLong(OptionalLong, long)","u":"maxAllowingOptionalLong(java.util.OptionalLong,long)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"maxDate(Collection<LocalDate>)","u":"maxDate(java.util.Collection)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"maxDate(Iterator<LocalDate>)","u":"maxDate(java.util.Iterator)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"maxDate(LocalDate, LocalDate)","u":"maxDate(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"maxDate(LocalDate, Optional<LocalDate>)","u":"maxDate(java.time.LocalDate,java.util.Optional)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"maxDate(Stream<LocalDate>)","u":"maxDate(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"maxDouble(double, double, double, double...)","u":"maxDouble(double,double,double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"maxFromComparator(Comparator<T>, T, T)","u":"maxFromComparator(java.util.Comparator,T,T)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparators","l":"maxFromPartialComparatorOrThrow(PartialComparator<T>, T, T)","u":"maxFromPartialComparatorOrThrow(com.rb.nonbiz.collections.PartialComparator,T,T)"},{"p":"com.rb.biz.types","c":"Price","l":"maxPrice(Stream<Price>)","u":"maxPrice(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"PrioritizedRangeMerger","l":"merge(Range<T>, Range<T>)","u":"merge(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"mergeHasInstrumentIdSetsAllowingOverlapOnSimilarItemsOnly(BiPredicate<T, T>, HasInstrumentIdSet<T>, HasInstrumentIdSet<T>, HasInstrumentIdSet<T>...)","u":"mergeHasInstrumentIdSetsAllowingOverlapOnSimilarItemsOnly(java.util.function.BiPredicate,com.rb.nonbiz.collections.HasInstrumentIdSet,com.rb.nonbiz.collections.HasInstrumentIdSet,com.rb.nonbiz.collections.HasInstrumentIdSet...)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"mergeHasInstrumentIdSetsDisallowingOverlap(HasInstrumentIdSet<T>, HasInstrumentIdSet<T>, HasInstrumentIdSet<T>...)","u":"mergeHasInstrumentIdSetsDisallowingOverlap(com.rb.nonbiz.collections.HasInstrumentIdSet,com.rb.nonbiz.collections.HasInstrumentIdSet,com.rb.nonbiz.collections.HasInstrumentIdSet...)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsAllowingOverlapOnSimilarItemsOnly(Iterator<IidMap<V>>, BiPredicate<V, V>)","u":"mergeIidMapsAllowingOverlapOnSimilarItemsOnly(java.util.Iterator,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"mergeIidMapsAssumingNoOverlap(IidMap<V>, IidMap<V>)","u":"mergeIidMapsAssumingNoOverlap(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMaps","l":"mergeIidMapsAssumingNoOverlap(IidMap<V>, IidMap<V>, IidMap<V>, IidMap<V>...)","u":"mergeIidMapsAssumingNoOverlap(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap...)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByTransformedEntry(TriFunction<InstrumentId, V1, V2, V>, BiFunction<InstrumentId, V1, V>, BiFunction<InstrumentId, V2, V>, IidMap<V1>, IidMap<V2>)","u":"mergeIidMapsByTransformedEntry(com.rb.nonbiz.functional.TriFunction,java.util.function.BiFunction,java.util.function.BiFunction,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByTransformedValue(BiFunction<InstrumentId, List<V1>, V2>, List<IidMap<V1>>)","u":"mergeIidMapsByTransformedValue(java.util.function.BiFunction,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByTransformedValue(BiFunction<V1, V2, V>, Function<V1, V>, Function<V2, V>, IidMap<V1>, IidMap<V2>)","u":"mergeIidMapsByTransformedValue(java.util.function.BiFunction,java.util.function.Function,java.util.function.Function,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByTransformedValueAssumingFullOverlap(IidMap<V1>, IidMap<V2>, BiFunction<V1, V2, V>)","u":"mergeIidMapsByTransformedValueAssumingFullOverlap(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByValue(BinaryOperator<V>, IidMap<V>, IidMap<V>, IidMap<V>...)","u":"mergeIidMapsByValue(java.util.function.BinaryOperator,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap...)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByValue(BinaryOperator<V>, Stream<IidMap<V>>)","u":"mergeIidMapsByValue(java.util.function.BinaryOperator,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsByValue(BinaryOperator<V>, UnaryOperator<V>, UnaryOperator<V>, IidMap<V>, IidMap<V>)","u":"mergeIidMapsByValue(java.util.function.BinaryOperator,java.util.function.UnaryOperator,java.util.function.UnaryOperator,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsDisallowingOverlap(IidMap<V>, IidMap<V>, IidMap<V>...)","u":"mergeIidMapsDisallowingOverlap(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap...)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsDisallowingOverlap(Iterator<IidMap<V>>)","u":"mergeIidMapsDisallowingOverlap(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeIidMapsInOrderAllowingOverwriting(IidMap<V>, IidMap<V>, IidMap<V>...)","u":"mergeIidMapsInOrderAllowingOverwriting(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap...)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"mergeImmutableIndexableArrays1DByValue(IntFunction<V[]>, BinaryOperator<V>, ImmutableIndexableArray1D<K, V>, ImmutableIndexableArray1D<K, V>, ImmutableIndexableArray1D<K, V>...)","u":"mergeImmutableIndexableArrays1DByValue(java.util.function.IntFunction,java.util.function.BinaryOperator,com.rb.nonbiz.collections.ImmutableIndexableArray1D,com.rb.nonbiz.collections.ImmutableIndexableArray1D,com.rb.nonbiz.collections.ImmutableIndexableArray1D...)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"mergeImmutableIndexableArrays1DByValue(IntFunction<V[]>, BinaryOperator<V>, List<ImmutableIndexableArray1D<K, V>>)","u":"mergeImmutableIndexableArrays1DByValue(java.util.function.IntFunction,java.util.function.BinaryOperator,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeIntoEithersEnumMap(RBEnumMap<E, L>, RBEnumMap<E, R>)","u":"mergeIntoEithersEnumMap(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeIntoEithersMap(RBMap<K, L>, RBMap<K, R>)","u":"mergeIntoEithersMap(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"PartitionMerger","l":"mergePartitions(V, Partition<T>, V, Partition<T>)","u":"mergePartitions(V,com.rb.nonbiz.collections.Partition,V,com.rb.nonbiz.collections.Partition)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapEntriesExpectingSameKeys(RBEnumMap<E, V1>, RBEnumMap<E, V2>, RBEnumMap<E, V3>, QuadriFunction<E, V1, V2, V3, V>)","u":"mergeRBEnumMapEntriesExpectingSameKeys(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapEntriesExpectingSameKeys(TriFunction<E, V1, V2, V>, RBEnumMap<E, V1>, RBEnumMap<E, V2>)","u":"mergeRBEnumMapEntriesExpectingSameKeys(com.rb.nonbiz.functional.TriFunction,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsAllowingOverlapOnSimilarItemsOnly(Iterator<RBEnumMap<E, V>>, BiPredicate<V, V>)","u":"mergeRBEnumMapsAllowingOverlapOnSimilarItemsOnly(java.util.Iterator,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByTransformedValue(BiFunction<E, List<V1>, V2>, List<RBEnumMap<E, V1>>)","u":"mergeRBEnumMapsByTransformedValue(java.util.function.BiFunction,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByTransformedValue(BiFunction<V1, V2, V3>, Function<V1, V3>, Function<V2, V3>, RBEnumMap<E, V1>, RBEnumMap<E, V2>)","u":"mergeRBEnumMapsByTransformedValue(java.util.function.BiFunction,java.util.function.Function,java.util.function.Function,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByValue(BinaryOperator<V>, RBEnumMap<E, V>, RBEnumMap<E, V>)","u":"mergeRBEnumMapsByValue(java.util.function.BinaryOperator,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByValue(BinaryOperator<V>, RBEnumMap<E, V>, RBEnumMap<E, V>, RBEnumMap<E, V>...)","u":"mergeRBEnumMapsByValue(java.util.function.BinaryOperator,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByValue(BinaryOperator<V>, Stream<RBEnumMap<E, V>>)","u":"mergeRBEnumMapsByValue(java.util.function.BinaryOperator,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsByValue(BinaryOperator<V>, UnaryOperator<V>, UnaryOperator<V>, RBEnumMap<E, V>, RBEnumMap<E, V>)","u":"mergeRBEnumMapsByValue(java.util.function.BinaryOperator,java.util.function.UnaryOperator,java.util.function.UnaryOperator,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsDisallowingOverlap(RBEnumMap<E, V>, RBEnumMap<E, V>, RBEnumMap<E, V>...)","u":"mergeRBEnumMapsDisallowingOverlap(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapsDisallowingOverlap(UnaryOperator<V>, UnaryOperator<V>, RBEnumMap<E, V>, RBEnumMap<E, V>)","u":"mergeRBEnumMapsDisallowingOverlap(java.util.function.UnaryOperator,java.util.function.UnaryOperator,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapValuesExpectingSameKeys(BiFunction<V1, V2, V>, RBEnumMap<E, V1>, RBEnumMap<E, V2>)","u":"mergeRBEnumMapValuesExpectingSameKeys(java.util.function.BiFunction,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"mergeRBEnumMapValuesExpectingSameKeys(RBEnumMap<E, V1>, RBEnumMap<E, V2>, RBEnumMap<E, V3>, TriFunction<V1, V2, V3, V>)","u":"mergeRBEnumMapValuesExpectingSameKeys(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapEntriesExpectingSameKeys(RBMap<K, V1>, RBMap<K, V2>, RBMap<K, V3>, QuadriFunction<K, V1, V2, V3, V>, String)","u":"mergeRBMapEntriesExpectingSameKeys(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.QuadriFunction,java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapEntriesExpectingSameKeys(TriFunction<K, V1, V2, V>, RBMap<K, V1>, RBMap<K, V2>)","u":"mergeRBMapEntriesExpectingSameKeys(com.rb.nonbiz.functional.TriFunction,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsAllowingOverlapOnSimilarItemsOnly(Iterator<RBMap<K, V>>, BiPredicate<V, V>)","u":"mergeRBMapsAllowingOverlapOnSimilarItemsOnly(java.util.Iterator,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsByTransformedValue(BiFunction<K, List<V1>, V2>, List<RBMap<K, V1>>)","u":"mergeRBMapsByTransformedValue(java.util.function.BiFunction,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsByTransformedValue(BiFunction<V1, V2, V3>, Function<V1, V3>, Function<V2, V3>, RBMap<K, V1>, RBMap<K, V2>)","u":"mergeRBMapsByTransformedValue(java.util.function.BiFunction,java.util.function.Function,java.util.function.Function,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsByValue(BinaryOperator<V>, RBMap<K, V>, RBMap<K, V>, RBMap<K, V>...)","u":"mergeRBMapsByValue(java.util.function.BinaryOperator,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsByValue(BinaryOperator<V>, Stream<RBMap<K, V>>)","u":"mergeRBMapsByValue(java.util.function.BinaryOperator,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsByValue(BinaryOperator<V>, UnaryOperator<V>, UnaryOperator<V>, RBMap<K, V>, RBMap<K, V>)","u":"mergeRBMapsByValue(java.util.function.BinaryOperator,java.util.function.UnaryOperator,java.util.function.UnaryOperator,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsDisallowingOverlap(RBMap<K, V>, RBMap<K, V>, RBMap<K, V>...)","u":"mergeRBMapsDisallowingOverlap(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsDisallowingOverlap(UnaryOperator<V>, UnaryOperator<V>, RBMap<K, V>, RBMap<K, V>)","u":"mergeRBMapsDisallowingOverlap(java.util.function.UnaryOperator,java.util.function.UnaryOperator,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapsInOrderAllowingOverwriting(RBMap<K, V>, RBMap<K, V>, RBMap<K, V>...)","u":"mergeRBMapsInOrderAllowingOverwriting(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap...)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapValuesExpectingSameKeys(BiFunction<V1, V2, V>, RBMap<K, V1>, RBMap<K, V2>)","u":"mergeRBMapValuesExpectingSameKeys(java.util.function.BiFunction,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeRBMapValuesExpectingSameKeys(RBMap<K, V1>, RBMap<K, V2>, RBMap<K, V3>, TriFunction<V1, V2, V3, V>, String)","u":"mergeRBMapValuesExpectingSameKeys(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.TriFunction,java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeSortedRBMapEntriesExpectingSameKeys(TriFunction<K, V1, V2, V>, Comparator<K>, RBMap<K, V1>, RBMap<K, V2>)","u":"mergeSortedRBMapEntriesExpectingSameKeys(com.rb.nonbiz.functional.TriFunction,java.util.Comparator,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"mergeSortedRBMapValuesExpectingSameKeys(BiFunction<V1, V2, V>, Comparator<K>, RBMap<K, V1>, RBMap<K, V2>)","u":"mergeSortedRBMapValuesExpectingSameKeys(java.util.function.BiFunction,java.util.Comparator,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeThreeIidMapsByTransformedEntry(QuadriFunction<InstrumentId, Optional<V1>, Optional<V2>, Optional<V3>, V>, IidMap<V1>, IidMap<V2>, IidMap<V3>)","u":"mergeThreeIidMapsByTransformedEntry(com.rb.nonbiz.functional.QuadriFunction,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapMergers","l":"mergeThreeIidMapsByTransformedValue(TriFunction<Optional<V1>, Optional<V2>, Optional<V3>, V>, IidMap<V1>, IidMap<V2>, IidMap<V3>)","u":"mergeThreeIidMapsByTransformedValue(com.rb.nonbiz.functional.TriFunction,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"MIN_SPLIT_MULTIPLIER"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"min(NonNegativeQuantity, NonNegativeQuantity)","u":"min(com.rb.biz.types.trading.NonNegativeQuantity,com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"min(PositiveQuantity, PositiveQuantity)","u":"min(com.rb.biz.types.trading.PositiveQuantity,com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"min(SignedQuantity, SignedQuantity)","u":"min(com.rb.biz.types.trading.SignedQuantity,com.rb.biz.types.trading.SignedQuantity)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"min(T, T)","u":"min(T,T)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"min(T, T)","u":"min(T,T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"min(T, T)","u":"min(T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"min(T, T...)","u":"min(T,T...)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"minAllowingOptionalDouble(double, OptionalDouble)","u":"minAllowingOptionalDouble(double,java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"minAllowingOptionalDouble(OptionalDouble, double)","u":"minAllowingOptionalDouble(java.util.OptionalDouble,double)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"minAllowingOptionalInt(int, OptionalInt)","u":"minAllowingOptionalInt(int,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"minAllowingOptionalInt(OptionalInt, int)","u":"minAllowingOptionalInt(java.util.OptionalInt,int)"},{"p":"com.rb.nonbiz.types","c":"RBLongs","l":"minAllowingOptionalLong(long, OptionalLong)","u":"minAllowingOptionalLong(long,java.util.OptionalLong)"},{"p":"com.rb.nonbiz.types","c":"RBLongs","l":"minAllowingOptionalLong(OptionalLong, long)","u":"minAllowingOptionalLong(java.util.OptionalLong,long)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"minDate(Collection<LocalDate>)","u":"minDate(java.util.Collection)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"minDate(Iterator<LocalDate>)","u":"minDate(java.util.Iterator)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"minDate(LocalDate, LocalDate)","u":"minDate(java.time.LocalDate,java.time.LocalDate)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"minDate(LocalDate, Optional<LocalDate>)","u":"minDate(java.time.LocalDate,java.util.Optional)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"minDate(Stream<LocalDate>)","u":"minDate(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"minDouble(double, double, double, double...)","u":"minDouble(double,double,double,double...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"minFromComparator(Comparator<T>, T, T)","u":"minFromComparator(java.util.Comparator,T,T)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparators","l":"minFromPartialComparatorOrThrow(PartialComparator<T>, T, T)","u":"minFromPartialComparatorOrThrow(com.rb.nonbiz.collections.PartialComparator,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"minimallyLoosenRangeToTouchOtherRange(Range<P>, Range<P>)","u":"minimallyLoosenRangeToTouchOtherRange(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.biz.types","c":"Price","l":"minPrice(Stream<Price>)","u":"minPrice(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"modifyExisting(T, BinaryOperator<T>)","u":"modifyExisting(T,java.util.function.BinaryOperator)"},{"p":"com.rb.biz.types","c":"Money","l":"money(BigDecimal)","u":"money(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Money","l":"money(BigDecimal, double)","u":"money(java.math.BigDecimal,double)"},{"p":"com.rb.biz.types","c":"Money","l":"money(double)"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"moneyFraction(Money, Money)","u":"moneyFraction(com.rb.biz.types.Money,com.rb.biz.types.Money)"},{"p":"com.rb.nonbiz.jsonapi","c":"MoneyFractionJsonApiConverter","l":"MoneyFractionJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"moneySignedFraction(SignedMoney, Money)","u":"moneySignedFraction(com.rb.biz.types.SignedMoney,com.rb.biz.types.Money)"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"moneyUnitFraction(Money, Money)","u":"moneyUnitFraction(com.rb.biz.types.Money,com.rb.biz.types.Money)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"monotonic(Comparator<? super P>, P, P, P...)","u":"monotonic(java.util.Comparator,P,P,P...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"monotonic(P, P, P...)","u":"monotonic(P,P,P...)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"moreOftenThan(UnitFraction)","u":"moreOftenThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"multiDimensionalArray(MultidimensionalCounter, BiFunction<Integer, Coordinates, T>)","u":"multiDimensionalArray(org.apache.commons.math3.util.MultidimensionalCounter,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.jsonapi","c":"MultiDimensionalArrayJsonApiConverter","l":"MultiDimensionalArrayJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"MultiDimensionalArrays()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"multiDimensionalArraysHaveSameSize(MultiDimensionalArray<T1>, MultiDimensionalArray<T2>)","u":"multiDimensionalArraysHaveSameSize(com.rb.nonbiz.collections.MultiDimensionalArray,com.rb.nonbiz.collections.MultiDimensionalArray)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"multidimensionalCounterCoordinatesAreValid(MultidimensionalCounter, Coordinates)","u":"multidimensionalCounterCoordinatesAreValid(org.apache.commons.math3.util.MultidimensionalCounter,com.rb.nonbiz.collections.Coordinates)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"multidimensionalCounterMatcher(MultidimensionalCounter)","u":"multidimensionalCounterMatcher(org.apache.commons.math3.util.MultidimensionalCounter)"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"multiDimensionalCountersAreEqual(MultidimensionalCounter, MultidimensionalCounter)","u":"multiDimensionalCountersAreEqual(org.apache.commons.math3.util.MultidimensionalCounter,org.apache.commons.math3.util.MultidimensionalCounter)"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"multidimensionalCounterToString(MultidimensionalCounter)","u":"multidimensionalCounterToString(org.apache.commons.math3.util.MultidimensionalCounter)"},{"p":"com.rb.nonbiz.collections","c":"MultipleDetailedPartitionModificationsApplier","l":"MultipleDetailedPartitionModificationsApplier()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"MultipleSimplePartitionModificationsApplier","l":"MultipleSimplePartitionModificationsApplier()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types","c":"Money","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Price","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"multiply(BigDecimal)","u":"multiply(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Money","l":"multiply(double)"},{"p":"com.rb.biz.types","c":"Price","l":"multiply(double)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"multiply(double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"multiply(double)"},{"p":"com.rb.biz.types","c":"Money","l":"multiply(long)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"multiply(Money)","u":"multiply(com.rb.biz.types.Money)"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"multiply(NonNegativeMultiplier)","u":"multiply(com.rb.nonbiz.types.NonNegativeMultiplier)"},{"p":"com.rb.biz.types","c":"Price","l":"multiply(NonNegativeQuantity)","u":"multiply(com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types","c":"Money","l":"multiply(OnesBasedReturn)","u":"multiply(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.biz.types","c":"Price","l":"multiply(OnesBasedReturn)","u":"multiply(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultiplier","l":"multiply(PositiveMultiplier)","u":"multiply(com.rb.nonbiz.types.PositiveMultiplier)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"multiply(Price)","u":"multiply(com.rb.biz.types.Price)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"multiply(RBIndexableMatrix<C, C2>)","u":"multiply(com.rb.nonbiz.math.vectorspaces.RBIndexableMatrix)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"multiply(RBMatrix)","u":"multiply(com.rb.nonbiz.math.vectorspaces.RBMatrix)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"multiply(RBVector)","u":"multiply(com.rb.nonbiz.math.vectorspaces.RBVector)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"multiply(SignedFraction)","u":"multiply(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.biz.types","c":"Price","l":"multiply(SignedQuantity)","u":"multiply(com.rb.biz.types.trading.SignedQuantity)"},{"p":"com.rb.biz.types","c":"Money","l":"multiply(UnitFraction)","u":"multiply(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"multiply(UnitFraction)","u":"multiply(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"multiply(UnitFraction)","u":"multiply(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"multiplyBigDecimals(Iterator<BigDecimal>)","u":"multiplyBigDecimals(java.util.Iterator)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"multiplyByScalar(double)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"multiplyOnLeft(DoubleMatrix2D)","u":"multiplyOnLeft(cern.colt.matrix.DoubleMatrix2D)"},{"p":"com.rb.nonbiz.collections","c":"PartitionMultiplier","l":"multiplyPartitionBy(Partition<K>, V, Function<BigDecimal, V>)","u":"multiplyPartitionBy(com.rb.nonbiz.collections.Partition,V,java.util.function.Function)"},{"p":"com.rb.biz.types","c":"Money","l":"multiplyToSigned(double)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator","l":"mustBeIncluded(T, SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions<T>)","u":"mustBeIncluded(T,com.rb.nonbiz.collections.SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"mustDecreaseByAtLeast(UnitFraction)","u":"mustDecreaseByAtLeast(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"mustIncreaseByAtLeast(UnitFraction)","u":"mustIncreaseByAtLeast(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"mustNotDecreaseByMoreThan(UnitFraction)","u":"mustNotDecreaseByMoreThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"mustNotIncreaseByMoreThan(UnitFraction)","u":"mustNotIncreaseByMoreThan(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableDifference(HasLongSet<T>, HasLongSet<T>)","u":"mutableDifference(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableDifference(HasLongSet<T>, Set<T>)","u":"mutableDifference(com.rb.nonbiz.collections.HasLongSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableDifference(Set<T>, HasLongSet<T>)","u":"mutableDifference(java.util.Set,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"mutableDoubleIndexableArray2D(double[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"mutableDoubleIndexableArray2D(double[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"MutableHasLongMap(TLongObjectHashMap<V>)","u":"%3Cinit%3E(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"MutableHasLongSet(TLongHashSet)","u":"%3Cinit%3E(gnu.trove.set.hash.TLongHashSet)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"mutableIndexableArray1D(ArrayIndexMapping<K>, V[])","u":"mutableIndexableArray1D(com.rb.nonbiz.collections.ArrayIndexMapping,V[])"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"mutableIndexableArray2D(V[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"mutableIndexableArray2D(V[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"mutableIndexableArray3D(V[][][], ArrayIndexMapping<X>, ArrayIndexMapping<Y>, ArrayIndexMapping<Z>)","u":"mutableIndexableArray3D(V[][][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"mutableIndexableBitSet2D(BitSet2D, ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"mutableIndexableBitSet2D(com.rb.nonbiz.collections.BitSet2D,com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"mutableIntegerIndexableArray2D(int[][], ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"mutableIntegerIndexableArray2D(int[][],com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableIntersectionOfHasLongSets(HasLongSet<T>, HasLongSet<T>)","u":"mutableIntersectionOfHasLongSets(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableIntersectionOfHasLongSets(HasLongSet<T>, Set<T>)","u":"mutableIntersectionOfHasLongSets(com.rb.nonbiz.collections.HasLongSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableIntersectionOfHasLongSets(Set<T>, HasLongSet<T>)","u":"mutableIntersectionOfHasLongSets(java.util.Set,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"mutableMultiDimensionalArray(int...)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"mutableOptionalDoubleIndexableArray2D(ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"mutableOptionalDoubleIndexableArray2D(com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"mutableOptionalDoubleRawArray2D(int, int)","u":"mutableOptionalDoubleRawArray2D(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"MutableOptionalDoubleRawArray2D(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"mutableRBSortedSetMatcher(MutableRBSortedSet<T>, RBMatchers.MatcherGenerator<T>)","u":"mutableRBSortedSetMatcher(com.rb.nonbiz.collections.MutableRBSortedSet,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableUnionOfHasLongSets(HasLongSet<T>, HasLongSet<T>...)","u":"mutableUnionOfHasLongSets(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet...)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableUnionOfHasLongSets(HasLongSet<T>, Set<T>)","u":"mutableUnionOfHasLongSets(com.rb.nonbiz.collections.HasLongSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableUnionOfHasLongSets(Iterator<? extends HasLongSet<T>>, int)","u":"mutableUnionOfHasLongSets(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"mutableUnionOfHasLongSets(Set<T>, HasLongSet<T>)","u":"mutableUnionOfHasLongSets(java.util.Set,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"MUTUAL_FUND_1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"MUTUAL_FUND_2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"MUTUAL_FUND_3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"MUTUAL_FUND_4"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.MutualFundInstrumentType","l":"mutualFundInstrumentType()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.MutualFundInstrumentType","l":"MutualFundInstrumentType()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"N_aryFunction","l":"n_aryFunction(int, Function<List<X>, Y>, HumanReadableLabel)","u":"n_aryFunction(int,java.util.function.Function,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"N_aryFunction","l":"N_aryFunction(int, Function<List<X>, Y>, HumanReadableLabel)","u":"%3Cinit%3E(int,java.util.function.Function,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"N_aryOperator","l":"n_aryIdentityOperator()"},{"p":"com.rb.nonbiz.functional","c":"N_aryOperator","l":"n_aryOperator(int, Function<List<T>, T>, HumanReadableLabel)","u":"n_aryOperator(int,java.util.function.Function,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"nearbyDatesMap(RBMap<LocalDate, V>, int)","u":"nearbyDatesMap(com.rb.nonbiz.collections.RBMap,int)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"negate()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"negate()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"negate()"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"negativeWeighted(T, double)","u":"negativeWeighted(T,double)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"neither()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"neither()"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"never()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"newHasInstrumentIdMap(MutableIidMap<Pair<T, V>>)","u":"newHasInstrumentIdMap(com.rb.nonbiz.collections.MutableIidMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"newHasInstrumentIdSet(IidMap<T>)","u":"newHasInstrumentIdSet(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"newHasInstrumentIdSet(MutableIidMap<T>)","u":"newHasInstrumentIdSet(com.rb.nonbiz.collections.MutableIidMap)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"newHasInstrumentIdSet(Stream<T>)","u":"newHasInstrumentIdSet(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"newIidMap(Map<InstrumentId, V>)","u":"newIidMap(java.util.Map)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"newIidMap(MutableIidMap<V>)","u":"newIidMap(com.rb.nonbiz.collections.MutableIidMap)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"newIidMap(TLongObjectHashMap<V>)","u":"newIidMap(gnu.trove.map.hash.TLongObjectHashMap)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(Collection<InstrumentId>)","u":"newIidSet(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(InstrumentId, InstrumentId...)","u":"newIidSet(com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(InstrumentId[])","u":"newIidSet(com.rb.biz.types.asset.InstrumentId[])"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(Iterator<InstrumentId>, int)","u":"newIidSet(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(MutableHasLongSet<InstrumentId>)","u":"newIidSet(com.rb.nonbiz.collections.MutableHasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSet(RBSet<InstrumentId>)","u":"newIidSet(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSetFromPossibleDuplicates(Collection<InstrumentId>)","u":"newIidSetFromPossibleDuplicates(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSetFromPossibleDuplicates(InstrumentId...)","u":"newIidSetFromPossibleDuplicates(com.rb.biz.types.asset.InstrumentId...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSetFromPossibleDuplicates(Iterator<InstrumentId>, int)","u":"newIidSetFromPossibleDuplicates(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"newIidSetInOrder(List<InstrumentId>)","u":"newIidSetInOrder(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"newJsonArrayWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"newMultiDimensionalArray(MutableMultiDimensionalArray<T>)","u":"newMultiDimensionalArray(com.rb.nonbiz.collections.MutableMultiDimensionalArray)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"newMutableHasLongSetWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidMap","l":"newMutableIidMap()"},{"p":"com.rb.nonbiz.collections","c":"MutableIidMap","l":"newMutableIidMap(HasLongMap<InstrumentId, V>)","u":"newMutableIidMap(com.rb.nonbiz.collections.HasLongMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidMap","l":"newMutableIidMapWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidMap","l":"newMutableIidMapWithExpectedSizeLike(HasRoughIidCount)","u":"newMutableIidMapWithExpectedSizeLike(com.rb.nonbiz.collections.HasRoughIidCount)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidSet","l":"newMutableIidSet(IidSet)","u":"newMutableIidSet(com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidSet","l":"newMutableIidSetWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIidSet","l":"newMutableIidSetWithExpectedSizeLike(HasRoughIidCount)","u":"newMutableIidSetWithExpectedSizeLike(com.rb.nonbiz.collections.HasRoughIidCount)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"newMutableRBDoubleKeyedMap()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"newMutableRBEnumMap(Class<E>)","u":"newMutableRBEnumMap(java.lang.Class)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"newMutableRBEnumMap(Class<E>, RBSet<? extends E>, Supplier<V>)","u":"newMutableRBEnumMap(java.lang.Class,com.rb.nonbiz.collections.RBSet,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"newMutableRBEnumMap(RBEnumMap<E, V>)","u":"newMutableRBEnumMap(com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"newMutableRBEnumMapFromPlainRBMap(Class<E>, RBMap<E, V>)","u":"newMutableRBEnumMapFromPlainRBMap(java.lang.Class,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"newMutableRBMap()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"newMutableRBMap(RBMap<K, V>)","u":"newMutableRBMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"newMutableRBMap(RBSet<? extends K>, Supplier<V>)","u":"newMutableRBMap(com.rb.nonbiz.collections.RBSet,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.text","c":"MutableRBMapOfHasUniqueId","l":"newMutableRBMapOfHasUniqueId()"},{"p":"com.rb.nonbiz.text","c":"MutableRBMapOfHasUniqueId","l":"newMutableRBMapOfHasUniqueIdWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"newMutableRBMapWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"newMutableRBSet()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"newMutableRBSetWithExpectedSize(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"newMutableRBSortedSet(Comparator<T>)","u":"newMutableRBSortedSet(java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBDoubleKeyedMap","l":"newRBDoubleKeyedMap(MutableRBDoubleKeyedMap<V>)","u":"newRBDoubleKeyedMap(com.rb.nonbiz.collections.MutableRBDoubleKeyedMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"newRBEnumMap(Class<E>, RBMap<E, V>)","u":"newRBEnumMap(java.lang.Class,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"newRBEnumMap(MutableRBEnumMap<E, V>)","u":"newRBEnumMap(com.rb.nonbiz.collections.MutableRBEnumMap)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"newRBIncreasingSet(List<T>)","u":"newRBIncreasingSet(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"newRBIncreasingSet(T...)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"newRBListWithExpectedSize(int, Iterator<T>)","u":"newRBListWithExpectedSize(int,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"newRBMap(Map<K, V>)","u":"newRBMap(java.util.Map)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"newRBMap(MutableRBMap<K, V>)","u":"newRBMap(com.rb.nonbiz.collections.MutableRBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSet(Collection<T>)","u":"newRBSet(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSet(Iterator<T>)","u":"newRBSet(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSet(MutableRBSet<T>)","u":"newRBSet(com.rb.nonbiz.collections.MutableRBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSet(Stream<T>)","u":"newRBSet(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSet(T...)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSetFromPossibleDuplicates(Collection<T>)","u":"newRBSetFromPossibleDuplicates(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSetFromPossibleDuplicates(Iterator<T>)","u":"newRBSetFromPossibleDuplicates(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSetFromPossibleDuplicates(Stream<T>)","u":"newRBSetFromPossibleDuplicates(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"newRBSetFromPossibleDuplicates(T...)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSet(Comparator<T>, Iterable<T>)","u":"newRBSortedSet(java.util.Comparator,java.lang.Iterable)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSet(Comparator<T>, Iterator<T>)","u":"newRBSortedSet(java.util.Comparator,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSet(Comparator<T>, Stream<T>)","u":"newRBSortedSet(java.util.Comparator,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSet(Comparator<T>, T...)","u":"newRBSortedSet(java.util.Comparator,T...)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSet(MutableRBSortedSet<T>)","u":"newRBSortedSet(com.rb.nonbiz.collections.MutableRBSortedSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSetFromPossibleDuplicates(Comparator<T>, Collection<T>)","u":"newRBSortedSetFromPossibleDuplicates(java.util.Comparator,java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSetFromPossibleDuplicates(Comparator<T>, Iterator<T>)","u":"newRBSortedSetFromPossibleDuplicates(java.util.Comparator,java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSetFromPossibleDuplicates(Comparator<T>, Stream<T>)","u":"newRBSortedSetFromPossibleDuplicates(java.util.Comparator,java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"newRBSortedSetFromPossibleDuplicates(Comparator<T>, T...)","u":"newRBSortedSetFromPossibleDuplicates(java.util.Comparator,T...)"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"NO_CORRELATION"},{"p":"com.rb.nonbiz.collections","c":"NodeWithWeightedChildren","l":"nodeWithTwoWeightedLeafChildren(N, UnitFraction, L, UnitFraction, L)","u":"nodeWithTwoWeightedLeafChildren(N,com.rb.nonbiz.types.UnitFraction,L,com.rb.nonbiz.types.UnitFraction,L)"},{"p":"com.rb.nonbiz.collections","c":"NodeWithWeightedChildren","l":"nodeWithWeightedChildren(N, List<WeightedByUnitFraction<LinearCombination<N, L>>>)","u":"nodeWithWeightedChildren(N,java.util.List)"},{"p":"com.rb.nonbiz.search","c":"Filter","l":"noFilter()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"noKeysToAdd()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"noKeysToAddOrIncrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"noKeysToDecrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"noKeysToIncrease()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"noKeysToRemove()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"noKeysToRemoveOrDecrease()"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"NON_NEGATIVE_MULTIPLIER_0"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"NON_NEGATIVE_MULTIPLIER_1"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"nonContiguousRangeCollection(List<Range<K>>)","u":"nonContiguousRangeCollection(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"nonContiguousRangeCollectionWithEnd(List<Range<K>>)","u":"nonContiguousRangeCollectionWithEnd(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"nonContiguousRangeCollectionWithNoEnd(List<Range<K>>)","u":"nonContiguousRangeCollectionWithNoEnd(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"nonContiguousRangeMap(List<Range<K>>, List<V>)","u":"nonContiguousRangeMap(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"nonContiguousRangeMapWithEnd(List<Range<K>>, List<V>)","u":"nonContiguousRangeMapWithEnd(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"nonContiguousRangeMapWithNoEnd(List<Range<K>>, List<V>)","u":"nonContiguousRangeMapWithNoEnd(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"nonDecreasingPerComparator(Comparator<T>, T, T, T)","u":"nonDecreasingPerComparator(java.util.Comparator,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"nonEmptyClosedSignedFractionRanges(RBMap<K, ClosedSignedFractionRange>)","u":"nonEmptyClosedSignedFractionRanges(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"nonEmptyClosedUnitFractionRanges(RBMap<K, ClosedUnitFractionRange>)","u":"nonEmptyClosedUnitFractionRanges(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"nonEmptyOptionalDoubleMatcher(double, Epsilon)","u":"nonEmptyOptionalDoubleMatcher(double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"nonEmptyOptionalImpreciseValueMatcher(T, Epsilon)","u":"nonEmptyOptionalImpreciseValueMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"nonEmptyOptionalMatcher(TypeSafeMatcher<T>)","u":"nonEmptyOptionalMatcher(org.hamcrest.TypeSafeMatcher)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"nonEmptyOptionalPreciseValueMatcher(T, Epsilon)","u":"nonEmptyOptionalPreciseValueMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"WeightedList","l":"nonEmptyWeightedList(L, List<Double>)","u":"nonEmptyWeightedList(L,java.util.List)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"nonGenericRbClass(Class<T>)","u":"nonGenericRbClass(java.lang.Class)"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"nonNegativeMultiplier(double)"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"NonNegativeMultiplier(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"nonNegativeQuantity(BigDecimal)","u":"nonNegativeQuantity(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"NonNegativeQuantity(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"nonNegativeQuantity(double)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"noNontrivialSampleJsonSupplied()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"noNontrivialSampleJsonSupplied()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"noNontrivialSampleJsonSupplied()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"nonZeroDeviations(RBMap<K, SignedFraction>)","u":"nonZeroDeviations(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"noOrderingDefined()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"noOverrides()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"noSharedHasLongs(HasLongSet<T>, HasLongSet<T>)","u":"noSharedHasLongs(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"noSharedHasLongs(HasLongSet<T>, Set<T>)","u":"noSharedHasLongs(com.rb.nonbiz.collections.HasLongSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"noSharedHasLongs(HasLongSet<T>...)","u":"noSharedHasLongs(com.rb.nonbiz.collections.HasLongSet...)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"noSharedHasLongs(Set<T>, HasLongSet<T>)","u":"noSharedHasLongs(java.util.Set,com.rb.nonbiz.collections.HasLongSet)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"noSharedHasLongsInCollection(Collection<? extends HasLongSet<T>>)","u":"noSharedHasLongsInCollection(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"noSharedIids(IidSet, IidSet)","u":"noSharedIids(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"noSharedIids(IidSet, IidSet, IidSet, IidSet...)","u":"noSharedIids(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet...)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"noSharedIids(IidSet, Set<InstrumentId>)","u":"noSharedIids(com.rb.nonbiz.collections.IidSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"noSharedIids(Set<InstrumentId>, IidSet)","u":"noSharedIids(java.util.Set,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"noSharedIidsInCollection(Collection<IidSet>)","u":"noSharedIidsInCollection(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItems(RBSet<T>, RBSet<T>)","u":"noSharedItems(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItems(RBSet<T>, Set<T>)","u":"noSharedItems(com.rb.nonbiz.collections.RBSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItems(RBSet<T>...)","u":"noSharedItems(com.rb.nonbiz.collections.RBSet...)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItems(Set<T>, RBSet<T>)","u":"noSharedItems(java.util.Set,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItems(Set<T>, Set<T>)","u":"noSharedItems(java.util.Set,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"noSharedItemsInCollection(Collection<RBSet<T>>)","u":"noSharedItemsInCollection(java.util.Collection)"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"not(BiPredicate<T1, T2>)","u":"not(java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"notAlways()"},{"p":"com.rb.biz.guice","c":"RBClock","l":"now()"},{"p":"com.rb.biz.guice","c":"RBSimpleTestClock","l":"now()"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"now()"},{"p":"com.rb.biz.guice","c":"RBClock","l":"nowOnEastCoast()"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"nowOnEastCoast()"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryFunction","l":"nPlusOneAryFunction(int, BiFunction<List<X>, X, Y>, HumanReadableLabel)","u":"nPlusOneAryFunction(int,java.util.function.BiFunction,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryFunction","l":"NPlusOneAryFunction(int, BiFunction<List<X>, X, Y>, HumanReadableLabel)","u":"%3Cinit%3E(int,java.util.function.BiFunction,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryPredicate","l":"nPlusOneAryPredicate(int, BiFunction<List<X>, X, Boolean>, HumanReadableLabel)","u":"nPlusOneAryPredicate(int,java.util.function.BiFunction,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"NPlusOneAryPredicate","l":"NPlusOneAryPredicate(int, BiFunction<List<X>, X, Boolean>, HumanReadableLabel)","u":"%3Cinit%3E(int,java.util.function.BiFunction,com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"NullInstrumentMaster","l":"NULL_INSTRUMENT_MASTER"},{"p":"com.rb.nonbiz.threads","c":"ExecutorCompletionServiceProvider","l":"NUM_CORES_INCLUDING_HYPERTHREADING"},{"p":"com.rb.nonbiz.threads","c":"ExecutorCompletionServiceProvider","l":"NUM_PHYSICAL_CORES"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"numberMatcher(T, Epsilon)","u":"numberMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"AcceptableDifference","l":"numericallySame()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"numValuesPresentInColumn(C)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"numValuesPresentInRow(R)"},{"p":"com.rb.nonbiz.types","c":"ObjectReference","l":"objectReference(T)"},{"p":"com.rb.nonbiz.testmatchers","c":"LambdaSwitchCase","l":"objectsMatch(T, T)","u":"objectsMatch(T,T)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedGain(BigDecimal)","u":"onesBasedGain(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedGain(double)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedLoss(BigDecimal)","u":"onesBasedLoss(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedLoss(double)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedReturn(BigDecimal)","u":"onesBasedReturn(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedReturn(double)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"onesBasedReturnFromJsonZeroBasedReturnPercentage(BigDecimal)","u":"onesBasedReturnFromJsonZeroBasedReturnPercentage(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"onesBasedReturnFromJsonZeroBasedReturnPercentage(JsonElement)","u":"onesBasedReturnFromJsonZeroBasedReturnPercentage(com.google.gson.JsonElement)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedReturnFromTo(Money, Money)","u":"onesBasedReturnFromTo(com.rb.biz.types.Money,com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"onesBasedReturnFromTo(Price, Price)","u":"onesBasedReturnFromTo(com.rb.biz.types.Price,com.rb.biz.types.Price)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"only1stOf3(T1)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"only2ndOf3(T2)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"only3rdOf3(T3)"},{"p":"com.rb.nonbiz.testcategories","c":"OnlyRunEigenAnalyzers","l":"OnlyRunEigenAnalyzers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testcategories","c":"OnlyRunMarketDataSanityTestsSuite","l":"OnlyRunMarketDataSanityTestsSuite()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchTerminationPredicate","l":"onlyTerminateBasedOnX(BiPredicate<X, X>)","u":"onlyTerminateBasedOnX(java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchTerminationPredicate","l":"onlyTerminateBasedOnY(BiPredicate<Y, Y>)","u":"onlyTerminateBasedOnY(java.util.function.BiPredicate)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.OnlyUseOverrideToFurtherReduceExistingValue","l":"onlyUseOverrideToFurtherReduceExistingValue()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.OnlyUseOverrideToFurtherReduceExistingValue","l":"OnlyUseOverrideToFurtherReduceExistingValue()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"optionalClosedRangeIntersection(ClosedRange<T>, ClosedRange<T>)","u":"optionalClosedRangeIntersection(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"optionalClosedUnitFractionRangeIntersection(ClosedUnitFractionRange, ClosedUnitFractionRange)","u":"optionalClosedUnitFractionRangeIntersection(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.ClosedUnitFractionRange)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"optionalDoubleMatcher(OptionalDouble, Epsilon)","u":"optionalDoubleMatcher(java.util.OptionalDouble,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalDoubleOfNullable(Double)","u":"optionalDoubleOfNullable(java.lang.Double)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"optionalImpreciseValueMatcher(Optional<T>, Epsilon)","u":"optionalImpreciseValueMatcher(java.util.Optional,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"optionalIntersection(Range<C>, Range<C>)","u":"optionalIntersection(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"optionalIntMatcher(OptionalInt)","u":"optionalIntMatcher(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalIntOfNullable(Integer)","u":"optionalIntOfNullable(java.lang.Integer)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"optionalMatcher(Optional<T>, RBMatchers.MatcherGenerator<T>)","u":"optionalMatcher(java.util.Optional,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"optionalPreciseValueMatcher(Optional<T>, Epsilon)","u":"optionalPreciseValueMatcher(java.util.Optional,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalSatisfies(Optional<T>, Predicate<T>)","u":"optionalSatisfies(java.util.Optional,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalsEqual(Optional<A>, Optional<B>)","u":"optionalsEqual(java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalsEqual(Optional<A>, Optional<B>, BiPredicate<A, B>)","u":"optionalsEqual(java.util.Optional,java.util.Optional,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"optionalToStream(Optional<T>)","u":"optionalToStream(java.util.Optional)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"orderedIterableEqualityMatcher(Iterable<T>)","u":"orderedIterableEqualityMatcher(java.lang.Iterable)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"orderedIterableMatcher(Iterable<T>, RBMatchers.MatcherGenerator<T>)","u":"orderedIterableMatcher(java.lang.Iterable,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"OrderedIterable","l":"orderedIterator(Comparator<T>)","u":"orderedIterator(java.util.Comparator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"orderedJsonObjectEpsilonMatcher(JsonObject)","u":"orderedJsonObjectEpsilonMatcher(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"orderedJsonObjectMatcher(JsonObject, Epsilon)","u":"orderedJsonObjectMatcher(com.google.gson.JsonObject,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"orderedListEqualityMatcher(List<T>)","u":"orderedListEqualityMatcher(java.util.List)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"orderedListMatcher(List<T>, RBMatchers.MatcherGenerator<T>)","u":"orderedListMatcher(java.util.List,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"orderedListPointerMatcher(List<T>)","u":"orderedListPointerMatcher(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"orderedRBMapToJsonObject(RBMap<K, V>, Function<K, String>, Function<V, JsonElement>, Comparator<K>)","u":"orderedRBMapToJsonObject(com.rb.nonbiz.collections.RBMap,java.util.function.Function,java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"orderedStream()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"orderedToIidMap(Function<InstrumentId, V>)","u":"orderedToIidMap(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"orderedToRBMap(Function<T, V>, Comparator<T>)","u":"orderedToRBMap(java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"orderedTransformEntriesCopy(BiFunction<K, V, V1>, Comparator<K>)","u":"orderedTransformEntriesCopy(java.util.function.BiFunction,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"orderedTransformKeysAndValuesCopy(Function<InstrumentId, K1>, Function<V, V1>)","u":"orderedTransformKeysAndValuesCopy(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"orderedTransformKeysAndValuesCopy(Function<K, K1>, Function<V, V1>, Comparator<K>)","u":"orderedTransformKeysAndValuesCopy(java.util.function.Function,java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"orderedTransformValuesCopy(Function<V, V1>, Comparator<K>)","u":"orderedTransformValuesCopy(java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"orderingDefined(int)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"OverridesApplier","l":"OverridesApplier()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"overridesBuilder()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"OverridesBuilder()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"OverridingToConstantDateInstrumentMaster","l":"overridingToConstantDateInstrumentMaster(InstrumentMaster, LocalDate)","u":"overridingToConstantDateInstrumentMaster(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.guice","c":"RBClockModifier","l":"overwriteCurrentTime(LocalDateTime)","u":"overwriteCurrentTime(java.time.LocalDateTime)"},{"p":"com.rb.biz.guice","c":"RBClock","l":"overwriteCurrentTime(RBClockModifier.RBClockModifierToken, LocalDateTime)","u":"overwriteCurrentTime(com.rb.biz.guice.RBClockModifier.RBClockModifierToken,java.time.LocalDateTime)"},{"p":"com.rb.biz.guice","c":"RBSimpleTestClock","l":"overwriteCurrentTime(RBClockModifier.RBClockModifierToken, LocalDateTime)","u":"overwriteCurrentTime(com.rb.biz.guice.RBClockModifier.RBClockModifierToken,java.time.LocalDateTime)"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"overwriteCurrentTime(RBClockModifier.RBClockModifierToken, LocalDateTime)","u":"overwriteCurrentTime(com.rb.biz.guice.RBClockModifier.RBClockModifierToken,java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"pair(L, R)","u":"pair(L,R)"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"pairOfSameType(T, T)","u":"pairOfSameType(T,T)"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"parseInstrumentId(String)","u":"parseInstrumentId(java.lang.String)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRowParser","l":"parseLine(String, Optional<BitSet>, int, OptionalInt)","u":"parseLine(java.lang.String,java.util.Optional,int,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRowParser","l":"parseLine(String, Optional<BitSet>, OptionalInt)","u":"parseLine(java.lang.String,java.util.Optional,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvParser","l":"parseOnlySomeCsvColumns(String, CsvColumnInclusionFilter)","u":"parseOnlySomeCsvColumns(java.lang.String,com.rb.nonbiz.text.csv.CsvColumnInclusionFilter)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvParser","l":"parseSimpleCsv(String)","u":"parseSimpleCsv(java.lang.String)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"parseValidYear(String)","u":"parseValidYear(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparators","l":"PartialComparators()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"partialComparisonResult(OptionalInt)","u":"partialComparisonResult(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparator","l":"partiallyCompare(T, T)","u":"partiallyCompare(T,T)"},{"p":"com.rb.nonbiz.collections","c":"PartialComparators","l":"partiallyCompareMultiple(PartialComparisonResult, PartialComparisonResult, PartialComparisonResult...)","u":"partiallyCompareMultiple(com.rb.nonbiz.collections.PartialComparisonResult,com.rb.nonbiz.collections.PartialComparisonResult,com.rb.nonbiz.collections.PartialComparisonResult...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"partiallyCompareOptionals(PartialComparator<T>, Optional<T>, Optional<T>)","u":"partiallyCompareOptionals(com.rb.nonbiz.collections.PartialComparator,java.util.Optional,java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"PartiallyComparable","l":"partiallyCompareTo(T)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partition(RBMap<K, UnitFraction>)","u":"partition(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"PartitionExtender","l":"PartitionExtender()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"partitionFromApproximateFractions(RBMap<K, UnitFraction>, Epsilon)","u":"partitionFromApproximateFractions(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMayNotSumTo1(DoubleMap<K>)","u":"partitionFromPositiveWeightsWhichMayNotSumTo1(com.rb.nonbiz.collections.DoubleMap)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMayNotSumTo1(DoubleMap<K>, Epsilon)","u":"partitionFromPositiveWeightsWhichMayNotSumTo1(com.rb.nonbiz.collections.DoubleMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMayNotSumTo1(RBMap<K, V>)","u":"partitionFromPositiveWeightsWhichMayNotSumTo1(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMaySumToBelow1(DoubleMap<K>)","u":"partitionFromPositiveWeightsWhichMaySumToBelow1(com.rb.nonbiz.collections.DoubleMap)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMaySumToBelow1(DoubleMap<K>, Epsilon)","u":"partitionFromPositiveWeightsWhichMaySumToBelow1(com.rb.nonbiz.collections.DoubleMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMaySumToBelow1(RBMap<K, V>)","u":"partitionFromPositiveWeightsWhichMaySumToBelow1(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"partitionFromPositiveWeightsWhichMaySumToBelow1(RBMap<K, V>, Epsilon)","u":"partitionFromPositiveWeightsWhichMaySumToBelow1(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"partitionGradient(Partition<T>, UnitFraction, RBMap<T, Partition<T>>, RBMap<T, Partition<T>>)","u":"partitionGradient(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradientCalculator","l":"PartitionGradientCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionItemsRemover","l":"PartitionItemsRemover()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionMerger","l":"PartitionMerger()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionMultiplier","l":"PartitionMultiplier()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats.PartitionPairDifferenceStatsBuilder","l":"partitionPairDifferenceStatsBuilder()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStatsCalculator","l":"PartitionPairDifferenceStatsCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionRangesSanityChecker","l":"PartitionRangesSanityChecker()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"Partitions","l":"Partitions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionTilter","l":"PartitionTilter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"PartitionUnextender","l":"PartitionUnextender()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"paste3IntoNewIterator(Iterator<T1>, Iterator<T2>, Iterator<T3>, TriFunction<T1, T2, T3, T>)","u":"paste3IntoNewIterator(java.util.Iterator,java.util.Iterator,java.util.Iterator,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"paste4IntoNewIterator(Iterator<T1>, Iterator<T2>, Iterator<T3>, Iterator<T4>, QuadriFunction<T1, T2, T3, T4, T>)","u":"paste4IntoNewIterator(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"paste5IntoNewIterator(Iterator<T1>, Iterator<T2>, Iterator<T3>, Iterator<T4>, Iterator<T5>, QuintFunction<T1, T2, T3, T4, T5, T>)","u":"paste5IntoNewIterator(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,com.rb.nonbiz.functional.QuintFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"paste6IntoNewIterator(Iterator<T1>, Iterator<T2>, Iterator<T3>, Iterator<T4>, Iterator<T5>, Iterator<T6>, HexFunction<T1, T2, T3, T4, T5, T6, T>)","u":"paste6IntoNewIterator(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator,com.rb.nonbiz.functional.HexFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"pasteIntoNewIterator(Iterator<T1>, Iterator<T2>, BiFunction<T1, T2, T3>)","u":"pasteIntoNewIterator(java.util.Iterator,java.util.Iterator,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(Collection<T1>, Collection<T2>, BiFunction<T1, T2, R>)","u":"pasteIntoStream(java.util.Collection,java.util.Collection,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(Collection<T1>, Collection<T2>, Collection<T3>, TriFunction<T1, T2, T3, R>)","u":"pasteIntoStream(java.util.Collection,java.util.Collection,java.util.Collection,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(Iterator<T1>, Iterator<T2>, BiFunction<T1, T2, R>)","u":"pasteIntoStream(java.util.Iterator,java.util.Iterator,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(Iterator<T1>, Iterator<T2>, Iterator<T3>, TriFunction<T1, T2, T3, R>)","u":"pasteIntoStream(java.util.Iterator,java.util.Iterator,java.util.Iterator,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(List<T1>, List<T2>, BiFunction<T1, T2, R>)","u":"pasteIntoStream(java.util.List,java.util.List,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"pasteIntoStream(List<T1>, List<T2>, List<T3>, TriFunction<T1, T2, T3, R>)","u":"pasteIntoStream(java.util.List,java.util.List,java.util.List,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"pasteLists(List<T1>, List<T2>, BiFunction<T1, T2, T>)","u":"pasteLists(java.util.List,java.util.List,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"pasteMultipleIntoNewIterator(Function<List<T1>, T2>, List<Iterator<T1>>)","u":"pasteMultipleIntoNewIterator(java.util.function.Function,java.util.List)"},{"p":"com.rb.nonbiz.text","c":"PathComponent","l":"pathComponent(String)","u":"pathComponent(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"PERCENTAGE_TO_FRACTION"},{"p":"com.rb.nonbiz.math.stats","c":"PercentilesCalculator","l":"PercentilesCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"PERFECT_CORRELATION"},{"p":"com.rb.nonbiz.search","c":"BinarySearch","l":"performBinarySearch(BinarySearchParameters<X, Y>)","u":"performBinarySearch(com.rb.nonbiz.search.BinarySearchParameters)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultiplier","l":"POSITIVE_MULTIPLIER_1"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"POSITIVE_QUANTITY_1"},{"p":"com.rb.nonbiz.types","c":"PositiveEpsilon","l":"positiveEpsilon(double)"},{"p":"com.rb.nonbiz.types","c":"PositiveEpsilon","l":"PositiveEpsilon(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultiplier","l":"positiveMultiplier(double)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultiplier","l":"PositiveMultiplier(double)","u":"%3Cinit%3E(double)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"positiveMultipliersIidMap(IidMap<PositiveMultiplier>)","u":"positiveMultipliersIidMap(com.rb.nonbiz.collections.IidMap)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"positiveMultipliersMap(RBMap<K, PositiveMultiplier>)","u":"positiveMultipliersMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"positiveQuantity(BigDecimal)","u":"positiveQuantity(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"PositiveQuantity(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"positiveQuantity(double)"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"positiveWeighted(T, double)","u":"positiveWeighted(T,double)"},{"p":"com.rb.nonbiz.types","c":"WeightedList","l":"possiblyEmptyWeightedList(L, List<Double>)","u":"possiblyEmptyWeightedList(L,java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"possiblyInitializeAndThenUpdate(E, Supplier<V>, UnaryOperator<V>)","u":"possiblyInitializeAndThenUpdate(E,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"possiblyInitializeAndThenUpdate(K, Supplier<V>, UnaryOperator<V>)","u":"possiblyInitializeAndThenUpdate(K,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"possiblyInitializeAndThenUpdate(K, Supplier<V>, UnaryOperator<V>)","u":"possiblyInitializeAndThenUpdate(K,java.util.function.Supplier,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"possiblyInitializeAndThenUpdateInPlace(E, Supplier<V>, Consumer<V>)","u":"possiblyInitializeAndThenUpdateInPlace(E,java.util.function.Supplier,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"possiblyInitializeAndThenUpdateInPlace(K, Supplier<V>, Consumer<V>)","u":"possiblyInitializeAndThenUpdateInPlace(K,java.util.function.Supplier,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"possiblyInitializeAndThenUpdateInPlace(K, Supplier<V>, Consumer<V>)","u":"possiblyInitializeAndThenUpdateInPlace(K,java.util.function.Supplier,java.util.function.Consumer)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"possiblyLoosenToContainPoint(ClosedUnitFractionRange, UnitFraction)","u":"possiblyLoosenToContainPoint(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"possiblyReduceConsecutiveItems(List<T>, BiPredicate<T, T>, BinaryOperator<T>)","u":"possiblyReduceConsecutiveItems(java.util.List,java.util.function.BiPredicate,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"PreciseValue(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"PreciseValue(BigDecimal, double)","u":"%3Cinit%3E(java.math.BigDecimal,double)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"preciseValueClosedRangeMatcher(ClosedRange<T>, Epsilon)","u":"preciseValueClosedRangeMatcher(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"preciseValueExplained(P, P)","u":"preciseValueExplained(P,P)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueIidMapJsonConverter","l":"PreciseValueIidMapJsonConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueJsonApiConverter","l":"PreciseValueJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"preciseValueListMatcher(List<V>, Epsilon)","u":"preciseValueListMatcher(java.util.List,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"preciseValueMapsAlmostEqual(RBMap<K, V>, RBMap<K, V>, Epsilon)","u":"preciseValueMapsAlmostEqual(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"preciseValueMatcher(V, Epsilon)","u":"preciseValueMatcher(V,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"preciseValueRangeEpsilonContains(Range<P>, P)","u":"preciseValueRangeEpsilonContains(com.google.common.collect.Range,P)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"preciseValueRangeEpsilonContains(Range<P>, P, Epsilon)","u":"preciseValueRangeEpsilonContains(com.google.common.collect.Range,P,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"preciseValueRangeMatcher(Range<T>, Epsilon)","u":"preciseValueRangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueRBMapJsonConverter","l":"PreciseValueRBMapJsonConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"PreciseValues","l":"PreciseValues()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"preciseValuesAlmostEqual(V, V, Epsilon)","u":"preciseValuesAlmostEqual(V,V,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummaryUtilities","l":"preciseValuesToRBStatisticalSummary(Iterator<V>, DoubleFunction<V>)","u":"preciseValuesToRBStatisticalSummary(java.util.Iterator,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.collections","c":"PreciseValueWeighter","l":"PreciseValueWeighter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"preferSuppliedValueBy(double)"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"preferSuppliedValueBy(UnitFraction)","u":"preferSuppliedValueBy(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.biz.types","c":"Price","l":"price(BigDecimal)","u":"price(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"Price","l":"price(double)"},{"p":"com.rb.nonbiz.collections","c":"PrioritizedRangeMerger","l":"PrioritizedRangeMerger()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"projectOnto(RBVector)","u":"projectOnto(com.rb.nonbiz.math.vectorspaces.RBVector)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor.PseudoEnum","l":"PseudoEnum()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor","l":"pseudoEnumJsonApiPropertyDescriptor(RBMap<String, HumanReadableDocumentation>)","u":"pseudoEnumJsonApiPropertyDescriptor(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"put(double, V)","u":"put(double,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"put(E, V)","u":"put(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"put(K, V)","u":"put(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"put(K, V)","u":"put(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putAll(Map<? extends E, ? extends V>)","u":"putAll(java.util.Map)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putAll(Map<? extends K, ? extends V>)","u":"putAll(java.util.Map)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putAssumingAbsent(E, V)","u":"putAssumingAbsent(E,V)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapDynamicBuilder","l":"putAssumingAbsent(K, K, V)","u":"putAssumingAbsent(K,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapStaticBuilder","l":"putAssumingAbsent(K, K, V)","u":"putAssumingAbsent(K,K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putAssumingAbsent(K, V)","u":"putAssumingAbsent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putAssumingAbsent(K, V)","u":"putAssumingAbsent(K,V)"},{"p":"com.rb.nonbiz.text","c":"MutableRBMapOfHasUniqueId","l":"putAssumingAbsent(K, V)","u":"putAssumingAbsent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putAssumingAbsentAllowingNullValue(E, V)","u":"putAssumingAbsentAllowingNullValue(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putAssumingAbsentAllowingNullValue(K, V)","u":"putAssumingAbsentAllowingNullValue(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putAssumingAbsentOrEqual(K, V, BiPredicate<V, V>)","u":"putAssumingAbsentOrEqual(K,V,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putAssumingNoChange(K, V, BiPredicate<V, V>)","u":"putAssumingNoChange(K,V,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putAssumingNoChange(K, V, BiPredicate<V, V>)","u":"putAssumingNoChange(K,V,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putAssumingPresent(E, V)","u":"putAssumingPresent(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putAssumingPresent(K, V)","u":"putAssumingPresent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putAssumingPresent(K, V)","u":"putAssumingPresent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putIfAbsent(E, Supplier<V>)","u":"putIfAbsent(E,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putIfAbsent(E, V)","u":"putIfAbsent(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putIfAbsent(K, Supplier<V>)","u":"putIfAbsent(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putIfAbsent(K, Supplier<V>)","u":"putIfAbsent(K,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putIfAbsent(K, V)","u":"putIfAbsent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putIfAbsent(K, V)","u":"putIfAbsent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"putOrModifyExisting(E, V, BinaryOperator<V>)","u":"putOrModifyExisting(E,V,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"putOrModifyExisting(K, V, BinaryOperator<V>)","u":"putOrModifyExisting(K,V,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"putOrModifyExisting(K, V, BinaryOperator<V>)","u":"putOrModifyExisting(K,V,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"randomlyOrderedTransformValuesCopy(Function<V, V1>, Random)","u":"randomlyOrderedTransformValuesCopy(java.util.function.Function,java.util.Random)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"rangeEqualityMatcher(Range<T>)","u":"rangeEqualityMatcher(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeForAbsValue(Range<Double>)","u":"rangeForAbsValue(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeHasAtLeastOneClosedBound(Range<C>)","u":"rangeHasAtLeastOneClosedBound(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsAtLeast(Range<C>)","u":"rangeIsAtLeast(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsBounded(Range<C>)","u":"rangeIsBounded(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsClosed(Range<C>)","u":"rangeIsClosed(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsProperSubsetOnBothEnds(Range<C>, Range<C>)","u":"rangeIsProperSubsetOnBothEnds(com.google.common.collect.Range,com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsSafelyProperSubsetOf(Range<T>, Range<T>, Epsilon)","u":"rangeIsSafelyProperSubsetOf(com.google.common.collect.Range,com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rangeIsUnrestricted(Range<C>)","u":"rangeIsUnrestricted(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.jsonapi","c":"RangeJsonApiConverter","l":"RangeJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rangeMapEqualityMatcher(RangeMap<K, V>)","u":"rangeMapEqualityMatcher(com.google.common.collect.RangeMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rangeMapGeneralMatcher(RangeMap<K, V>, RBMatchers.MatcherGenerator<K>, RBMatchers.MatcherGenerator<V>)","u":"rangeMapGeneralMatcher(com.google.common.collect.RangeMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rangeMapMatcher(RangeMap<K, V>, RBMatchers.MatcherGenerator<V>)","u":"rangeMapMatcher(com.google.common.collect.RangeMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"rangeMatcher(Range<T>, RBMatchers.MatcherGenerator<T>)","u":"rangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"PartitionRangesSanityChecker","l":"rangesAreValid(Collection<ClosedUnitFractionRange>)","u":"rangesAreValid(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"rationalUnitFraction(int, int)","u":"rationalUnitFraction(int,int)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"rawStatisticalSummary"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"rawTroveIterator()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"rawTroveIterator()"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"RB_BIG_DECIMAL_MAX_VALUE"},{"p":"com.rb.nonbiz.testmatchers","c":"RBArrayMatchers","l":"RBArrayMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"RBArrays()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math","c":"RBBigDecimals","l":"RBBigDecimals()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBBiPredicates","l":"RBBiPredicates()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBBitSets","l":"RBBitSets()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"RBCachingDoubleFunction","l":"rbCachingDoubleFunction(DoubleFunction<V>, Epsilon)","u":"rbCachingDoubleFunction(java.util.function.DoubleFunction,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"rbCategoryMap(Collection<K>, Supplier<V>)","u":"rbCategoryMap(java.util.Collection,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"rbCategoryMap(Collection<K>, V, Function<K, V>)","u":"rbCategoryMap(java.util.Collection,V,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"rbCategoryMap(V, RBMap<K, V>)","u":"rbCategoryMap(V,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.jsonapi","c":"RBCategoryMapJsonApiConverter","l":"RBCategoryMapJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"rbClass(Class<T>, RBClass<?>, RBClass<?>...)","u":"rbClass(java.lang.Class,com.rb.nonbiz.reflection.RBClass,com.rb.nonbiz.reflection.RBClass...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBClassToInstanceMapMatchers","l":"RBClassToInstanceMapMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice","c":"RBClockModifier","l":"RBClockModifier()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"RBCollectionMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBColtMatchers","l":"RBColtMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.investing.modeling","c":"RBCommonsConstants","l":"RBCommonsConstants()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice.modules","c":"RBCommonsTestModule","l":"rbCommonsIntegrationTestModule()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"RBCommonsTestConstants()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice.modules","c":"RBCommonsTestModule","l":"RBCommonsTestModule()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestPlusIntegration","l":"RBCommonsTestPlusIntegration()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"RBComparables()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBComparators","l":"RBComparators()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"RBDates()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbDoubleFunctionThatReturnsEmptyOnMissingValues(RBNumericFunction<Double, Y>)","u":"rbDoubleFunctionThatReturnsEmptyOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbDoubleFunctionThatReturnsSpecifiedDefaultOnMissingValues(RBNumericFunction<Double, Y>, Y)","u":"rbDoubleFunctionThatReturnsSpecifiedDefaultOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction,Y)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbDoubleIdentityNumericFunction(DoubleFunction<Y>)","u":"rbDoubleIdentityNumericFunction(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbDoubleNumericFunction(HumanReadableLabel, DoubleUnaryOperator, DoubleFunction<Y>)","u":"rbDoubleNumericFunction(com.rb.nonbiz.text.HumanReadableLabel,java.util.function.DoubleUnaryOperator,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"RBDoubles()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBEitherMatchers","l":"RBEitherMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"rbEnumMapCoveringAllEnumValues(Class<E>, Function<E, V>)","u":"rbEnumMapCoveringAllEnumValues(java.lang.Class,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"rbEnumMapCoveringAllEnumValues(Class<E>, RBMap<E, V>)","u":"rbEnumMapCoveringAllEnumValues(java.lang.Class,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbEnumMapEqualityMatcher(RBEnumMap<E, V>)","u":"rbEnumMapEqualityMatcher(com.rb.nonbiz.collections.RBEnumMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbEnumMapMatcher(RBEnumMap<E, V>, RBMatchers.MatcherGenerator<V>)","u":"rbEnumMapMatcher(com.rb.nonbiz.collections.RBEnumMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMapMergers","l":"RBEnumMapMergers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"rbEnumMapOf(E, V, E, V)","u":"rbEnumMapOf(E,V,E,V)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"rbEnumMapOf(E, V, E, V, E, V)","u":"rbEnumMapOf(E,V,E,V,E,V)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"rbEnumMapOf(E, V, E, V, E, V, E, V)","u":"rbEnumMapOf(E,V,E,V,E,V,E,V)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"rbEnumMapOf(E, V, E, V, E, V, E, V, E, V)","u":"rbEnumMapOf(E,V,E,V,E,V,E,V,E,V)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"RBEnumMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"RBEnumMapSimpleConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"rbEnumMapToJsonObject(RBEnumMap<E, V>, Function<V, JsonElement>)","u":"rbEnumMapToJsonObject(com.rb.nonbiz.collections.RBEnumMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.io","c":"RBFileUtilities","l":"RBFileUtilities()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"RBGson()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbIdentityNumericFunction(DoubleFunction<Y>)","u":"rbIdentityNumericFunction(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbIdentityNumericFunctionThatReturnsEmptyOnMissingValues(DoubleFunction<Y>)","u":"rbIdentityNumericFunctionThatReturnsEmptyOnMissingValues(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbIdentityNumericFunctionThatReturnsSpecifiedDefaultOnMissingValues(DoubleFunction<Y>, Y)","u":"rbIdentityNumericFunctionThatReturnsSpecifiedDefaultOnMissingValues(java.util.function.DoubleFunction,Y)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T)","u":"rbIncreasingSetOf(T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T)","u":"rbIncreasingSetOf(T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"rbIncreasingSetOf(T, T, T, T, T, T, T, T, T, T)","u":"rbIncreasingSetOf(T,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"rbIndexableMatrix(RBMatrix, ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"rbIndexableMatrix(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"rbIndexableMatrixWithTrivialColumnMapping(RBMatrix, ArrayIndexMapping<R>)","u":"rbIndexableMatrixWithTrivialColumnMapping(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"rbIndexableMatrixWithTrivialRowMapping(RBMatrix, ArrayIndexMapping<C>)","u":"rbIndexableMatrixWithTrivialRowMapping(com.rb.nonbiz.math.vectorspaces.RBMatrix,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"rbIndexableSquareMatrix(RBSquareMatrix, ArrayIndexMapping<K>)","u":"rbIndexableSquareMatrix(com.rb.nonbiz.math.vectorspaces.RBSquareMatrix,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.types","c":"RBIntegers","l":"RBIntegers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBIntStreams","l":"RBIntStreams()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"RBIterables()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"RBIterators()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBIterMatchers","l":"RBIterMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"RBJsonArrays()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"rbJsonDoubleArray(double, double, double...)","u":"rbJsonDoubleArray(double,double,double...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"rbJsonDoubleArray(double[])"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"rbJsonDoubleArray(DoubleStream)","u":"rbJsonDoubleArray(java.util.stream.DoubleStream)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"rbJsonDoubleArray(Iterable<Double>)","u":"rbJsonDoubleArray(java.lang.Iterable)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"rbJsonDoubleArray(Iterator<Double>)","u":"rbJsonDoubleArray(java.util.Iterator)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"rbJsonDoubleArrayBuilder()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"rbJsonDoubleArrayBuilderWithExpectedSize(int)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArrays","l":"RBJsonDoubleArrays()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray","l":"rbJsonLocalDateArray(LocalDate, LocalDate, LocalDate...)","u":"rbJsonLocalDateArray(java.time.LocalDate,java.time.LocalDate,java.time.LocalDate...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray.RBJsonLocalDateArrayBuilder","l":"rbJsonLocalDateArrayBuilder()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBJsonMatchers","l":"RBJsonMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectAdders","l":"RBJsonObjectAdders()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"rbJsonObjectBuilder()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"rbJsonObjectBuilderWithInitialJson(JsonObject)","u":"rbJsonObjectBuilderWithInitialJson(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectGetters","l":"RBJsonObjectGetters()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"RBJsonObjects()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"RBJsonObjectSimpleConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"rbJsonStringArray(List<String>)","u":"rbJsonStringArray(java.util.List)"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"rbJsonStringArray(String, String, String...)","u":"rbJsonStringArray(java.lang.String,java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray.RBJsonStringArrayBuilder","l":"rbJsonStringArrayBuilder()"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"RBLists()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"rbListWithoutSpecialValue(List<T>)","u":"rbListWithoutSpecialValue(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"rbListWithSpecialValue(T, T, T...)","u":"rbListWithSpecialValue(T,T,T...)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"rbListWithSpecialValueSpecified(OptionalInt, List<T>)","u":"rbListWithSpecialValueSpecified(java.util.OptionalInt,java.util.List)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"rbLog(Class<?>)","u":"rbLog(java.lang.Class)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"rbLog(Class<?>, String)","u":"rbLog(java.lang.Class,java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbLongFunctionThatReturnsEmptyOnMissingValues(RBNumericFunction<Long, Y>)","u":"rbLongFunctionThatReturnsEmptyOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbLongFunctionThatReturnsSpecifiedDefaultOnMissingValues(RBNumericFunction<Long, Y>, Y)","u":"rbLongFunctionThatReturnsSpecifiedDefaultOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction,Y)"},{"p":"com.rb.nonbiz.types","c":"RBLongId","l":"RBLongId(long)","u":"%3Cinit%3E(long)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbLongIdentityNumericFunction(DoubleFunction<Y>)","u":"rbLongIdentityNumericFunction(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbLongNumericFunction(HumanReadableLabel, DoubleUnaryOperator, DoubleFunction<Y>)","u":"rbLongNumericFunction(com.rb.nonbiz.text.HumanReadableLabel,java.util.function.DoubleUnaryOperator,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.types","c":"RBLongs","l":"RBLongs()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"RBMap(Map<K, V>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapBigDecimalMatcher(RBMap<K, BigDecimal>, Epsilon)","u":"rbMapBigDecimalMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"RBMapConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapDoubleMatcher(RBMap<K, Double>, Epsilon)","u":"rbMapDoubleMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapEqualityMatcher(RBMap<K, V>)","u":"rbMapEqualityMatcher(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromCollection(Collection<V>, Function<V, K>)","u":"rbMapFromCollection(java.util.Collection,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromCollection(Collection<V>, Function<V, K>, Function<V, V2>)","u":"rbMapFromCollection(java.util.Collection,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromCollectionOfHasInstrumentId(Collection<V>)","u":"rbMapFromCollectionOfHasInstrumentId(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromIterator(Iterator<V>, Function<V, K>, Function<V, V2>)","u":"rbMapFromIterator(java.util.Iterator,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromStream(Stream<T>, Function<T, K>, BiFunction<K, T, V>)","u":"rbMapFromStream(java.util.stream.Stream,java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromStream(Stream<T>, Function<T, K>, Function<T, V>)","u":"rbMapFromStream(java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromStream(Stream<V>, Function<V, K>)","u":"rbMapFromStream(java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapFromStreamOfOptionals(Stream<T>, Function<T, K>, Function<K, Optional<V>>)","u":"rbMapFromStreamOfOptionals(java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapGroupingByPresentOptional(Stream<V>, Function<V, Optional<K>>)","u":"rbMapGroupingByPresentOptional(java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapImpreciseValueMatcher(RBMap<K, V>, Epsilon)","u":"rbMapImpreciseValueMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"rbMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor, JsonApiPropertyDescriptor)","u":"rbMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"rbMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor, JsonApiPropertyDescriptor, JsonPropertySpecificDocumentation)","u":"rbMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapMatcher(RBMap<K, V>, RBMatchers.MatcherGenerator<V>)","u":"rbMapMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"RBMapMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMapMergers","l":"RBMapMergers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V)","u":"rbMapOf(K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"rbMapOf(K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V, K, V)","u":"rbMapOf(K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"rbMapOfHasUniqueId(MutableRBMapOfHasUniqueId<K, V>)","u":"rbMapOfHasUniqueId(com.rb.nonbiz.text.MutableRBMapOfHasUniqueId)"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"rbMapOfHasUniqueIdOf(K, V, K, V)","u":"rbMapOfHasUniqueIdOf(K,V,K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"rbMapOfHasUniqueIdOf(K, V, K, V, K, V)","u":"rbMapOfHasUniqueIdOf(K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"rbMapOfHasUniqueIdOf(K, V, K, V, K, V, K, V)","u":"rbMapOfHasUniqueIdOf(K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"rbMapOfHasUniqueIdOf(K, V, K, V, K, V, K, V, K, V)","u":"rbMapOfHasUniqueIdOf(K,V,K,V,K,V,K,V,K,V)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"rbMapPreciseValueMatcher(RBMap<K, V>, Epsilon)","u":"rbMapPreciseValueMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"rbMapPreciseValueRangeMatcher(RBMap<K, Range<V>>, Epsilon)","u":"rbMapPreciseValueRangeMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.util","c":"RBMapPreconditions","l":"RBMapPreconditions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"RBMaps()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"RBMapSimpleConstructors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"RBMapsOfHasUniqueId()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"rbMapToDoubleRangeMatcher(RBMap<K, Range<Double>>, Epsilon)","u":"rbMapToDoubleRangeMatcher(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArrays1D","l":"rbMapToImmutableIndexableArray1D(RBMap<K, V>, Comparator<Map.Entry<K, V>>)","u":"rbMapToImmutableIndexableArray1D(com.rb.nonbiz.collections.RBMap,java.util.Comparator)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"rbMapToJsonArray(RBMap<K, V>, Comparator<Map.Entry<K, V>>, BiFunction<K, V, JsonElement>)","u":"rbMapToJsonArray(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"rbMapToJsonObject(RBMap<K, V>, Function<K, String>, Function<V, JsonElement>)","u":"rbMapToJsonObject(com.rb.nonbiz.collections.RBMap,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"RBMapVisitors()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"rbMapWithDefault(V, RBMap<K, V>)","u":"rbMapWithDefault(V,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapWithExpectedSizeFromStream(int, Stream<T>, Function<T, K>, Function<T, V>)","u":"rbMapWithExpectedSizeFromStream(int,java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapConstructors","l":"rbMapWithExpectedSizeFromStream(int, Stream<V>, Function<V, K>)","u":"rbMapWithExpectedSizeFromStream(int,java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"rbMapWithOptionalDefault(Optional<V>, RBMap<K, V>)","u":"rbMapWithOptionalDefault(java.util.Optional,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"rbMapWithOptionalDefaultMissing(RBMap<K, V>)","u":"rbMapWithOptionalDefaultMissing(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"rbMapWithOptionalDefaultPresent(V, RBMap<K, V>)","u":"rbMapWithOptionalDefaultPresent(V,com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers","l":"RBMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"rbMatrix(double[][])"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"RBMatrix(DoubleMatrix2D)","u":"%3Cinit%3E(cern.colt.matrix.DoubleMatrix2D)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrixUtils","l":"RBMatrixUtils()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"RBMockeries()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBMultidimensionalCounters","l":"RBMultidimensionalCounters()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"RBNumeric","l":"RBNumeric()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"rbNumericFunction(HumanReadableLabel, DoubleUnaryOperator, DoubleFunction<Y>)","u":"rbNumericFunction(com.rb.nonbiz.text.HumanReadableLabel,java.util.function.DoubleUnaryOperator,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbNumericFunctionThatReturnsEmptyOnMissingValues(RBNumericFunction<X, Y>)","u":"rbNumericFunctionThatReturnsEmptyOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction)"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"rbNumericFunctionThatReturnsSpecifiedDefaultOnMissingValues(RBNumericFunction<X, Y>, Y)","u":"rbNumericFunctionThatReturnsSpecifiedDefaultOnMissingValues(com.rb.nonbiz.functional.RBNumericFunction,Y)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"rbNumericMatcher(T, Epsilon)","u":"rbNumericMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rbNumericRangeIsAlmostSinglePoint(Range<T>)","u":"rbNumericRangeIsAlmostSinglePoint(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rbNumericRangeIsAlmostSinglePoint(Range<T>, Epsilon)","u":"rbNumericRangeIsAlmostSinglePoint(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rbNumericRangeIsAlmostThisSinglePoint(Range<T>, T)","u":"rbNumericRangeIsAlmostThisSinglePoint(com.google.common.collect.Range,T)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"rbNumericRangeIsAlmostThisSinglePoint(Range<T>, T, Epsilon)","u":"rbNumericRangeIsAlmostThisSinglePoint(com.google.common.collect.Range,T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"rbNumericRangeMatcher(Range<T>, Epsilon)","u":"rbNumericRangeMatcher(com.google.common.collect.Range,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"rbNumericValueMatcher(T, Epsilon)","u":"rbNumericValueMatcher(T,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"RBOptionalMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"RBOptionals()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"RBOptionalTransformers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.util","c":"RBOrderingPreconditions","l":"RBOrderingPreconditions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.util","c":"RBPreconditions","l":"RBPreconditions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBPredicates","l":"RBPredicates()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBRangeMatchers","l":"RBRangeMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"RBRanges()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSet(Set<T>)","u":"rbSet(java.util.Set)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"rbSetEqualsMatcher(RBSet<T>)","u":"rbSetEqualsMatcher(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"rbSetMatcher(RBSet<T>, RBMatchers.MatcherGenerator<T>, Comparator<T>)","u":"rbSetMatcher(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T)","u":"rbSetOf(T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T)","u":"rbSetOf(T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T)","u":"rbSetOf(T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"rbSetOf(T, T, T, T, T, T, T, T, T, T, T, T)","u":"rbSetOf(T,T,T,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"rbSetOfHasUniqueId(Collection<V>)","u":"rbSetOfHasUniqueId(java.util.Collection)"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"rbSetOfHasUniqueId(RBMap<UniqueId<V>, V>)","u":"rbSetOfHasUniqueId(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"rbSetOfHasUniqueId(Stream<V>)","u":"rbSetOfHasUniqueId(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.text","c":"RBSetsOfHasUniqueId","l":"rbSetOfHasUniqueIdOf(V, V, V...)","u":"rbSetOfHasUniqueIdOf(V,V,V...)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"rbSetOfHasUniqueIdToJsonObject(RBSetOfHasUniqueId<V>, Function<V, JsonElement>)","u":"rbSetOfHasUniqueIdToJsonObject(com.rb.nonbiz.text.RBSetOfHasUniqueId,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"RBSets()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"RBSetsOfHasUniqueId","l":"RBSetsOfHasUniqueId()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"rbSetToJsonArray(RBSet<V>, Comparator<V>, Function<V, JsonElement>)","u":"rbSetToJsonArray(com.rb.nonbiz.collections.RBSet,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"rbSetToJsonArray(RBSet<V>, Function<V, JsonElement>)","u":"rbSetToJsonArray(com.rb.nonbiz.collections.RBSet,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"rbSetToJsonObject(RBSet<T>, Function<T, String>, Function<T, JsonElement>)","u":"rbSetToJsonObject(com.rb.nonbiz.collections.RBSet,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBSimilarityPreconditions","l":"RBSimilarityPreconditions()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice","c":"RBSimpleTestClock","l":"RBSimpleTestClock()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice","c":"RBSimpleTestClock","l":"rbSimpleTestClock(LocalDateTime)","u":"rbSimpleTestClock(java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"RBSingleValueClassTestMatcher()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"rbSortedSetMatcher(RBSortedSet<T>, RBMatchers.MatcherGenerator<T>)","u":"rbSortedSetMatcher(com.rb.nonbiz.collections.RBSortedSet,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"rbSortedSetOf(Comparator<T>, T, T, T, T, T, T, T, T, T, T)","u":"rbSortedSetOf(java.util.Comparator,T,T,T,T,T,T,T,T,T,T)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBSquareMatrix","l":"rbSquareMatrix(double[][])"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"rbStatisticalSummary(StatisticalSummary, DoubleFunction<T>)","u":"rbStatisticalSummary(org.apache.commons.math3.stat.descriptive.StatisticalSummary,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"RBStatisticalSummary(StatisticalSummary, DoubleFunction<T>)","u":"%3Cinit%3E(org.apache.commons.math3.stat.descriptive.StatisticalSummary,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummaryUtilities","l":"RBStatisticalSummaryUtilities()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"RBStats()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBStreamMatchers","l":"RBStreamMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"RBStreams()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"rbStringToNumericFunctionThatHandlesMissingValuesBuilder(DoubleFunction<Y>)","u":"rbStringToNumericFunctionThatHandlesMissingValuesBuilder(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.util","c":"RBSubsetPreconditions","l":"RBSubsetPreconditions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBSupplier","l":"rbSupplierReturningValidValue(T)"},{"p":"com.rb.nonbiz.collections","c":"RBSupplier","l":"rbSupplierThrowingException()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapDynamicBuilder","l":"rbSymmetricUnequalPairMapDynamicBuilder(IntFunction<V[]>)","u":"rbSymmetricUnequalPairMapDynamicBuilder(java.util.function.IntFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapStaticBuilder","l":"rbSymmetricUnequalPairMapStaticBuilder(List<K>, IntFunction<V[]>)","u":"rbSymmetricUnequalPairMapStaticBuilder(java.util.List,java.util.function.IntFunction)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"RBTestMatcher()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"RBThreadLocalClock()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.guice","c":"RBThreadLocalClock","l":"RBThreadLocalClock(LocalDateTime)","u":"%3Cinit%3E(java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMatchers.RBTypeSafeMatcher","l":"RBTypeSafeMatcher()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"RBValueMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"rbVector(double[])"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"rbVector(DoubleMatrix1D)","u":"rbVector(cern.colt.matrix.DoubleMatrix1D)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers","l":"RBVisitorMatchers()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBVoid","l":"rbVoid()"},{"p":"com.rb.nonbiz.io","c":"StringFromFileReader","l":"readFromFile(String)","u":"readFromFile(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"StringFromFileReader","l":"readFromFileOrThrow(String)","u":"readFromFileOrThrow(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"JsonFileReader","l":"readJsonFile(String)","u":"readJsonFile(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"JsonFileReader","l":"readJsonFileAsArray(String)","u":"readJsonFileAsArray(java.lang.String)"},{"p":"com.rb.biz.marketdata","c":"RealInstruments","l":"RealInstruments()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.jsonapi.doc","c":"RecursiveJsonApiDocumentationLister","l":"RecursiveJsonApiDocumentationLister()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBIntStreams","l":"reduceInGroups(ClosedRange<Integer>, int, BiFunction<Integer, IntStream, V>)","u":"reduceInGroups(com.rb.nonbiz.collections.ClosedRange,int,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBIntStreams","l":"reduceInGroups(ClosedRange<Integer>, int, TriFunction<Integer, Integer, Integer, V>)","u":"reduceInGroups(com.rb.nonbiz.collections.ClosedRange,int,com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"remove(E)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"remove(E, V)","u":"remove(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"remove(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"remove(K)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"remove(K, V)","u":"remove(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"remove(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"remove(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"removeAll(Collection<? extends T>)","u":"removeAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"removeAll(Collection<? extends T>)","u":"removeAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"removeAssumingPresent(T)"},{"p":"com.rb.nonbiz.collections","c":"PartitionItemsRemover","l":"removeItemsFromPartition(Partition<K>, RBSet<K>)","u":"removeItemsFromPartition(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"replace(E, V)","u":"replace(E,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"replace(E, V, V)","u":"replace(E,V,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"replace(K, V)","u":"replace(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"replace(K, V, V)","u":"replace(K,V,V)"},{"p":"com.rb.nonbiz.text","c":"SmartFormatter","l":"resetSmartFormatter()"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"residualReturnOver(OnesBasedReturn)","u":"residualReturnOver(com.rb.biz.types.OnesBasedReturn)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"retainAll(Collection<? extends T>)","u":"retainAll(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"retainAll(Collection<? extends T>)","u":"retainAll(java.util.Collection)"},{"p":"com.rb.nonbiz.reflection","c":"AllRbTopLevelClassesRetriever","l":"retrieve()"},{"p":"com.rb.nonbiz.reflection","c":"AllClassesThatImplementInterfacesRetriever","l":"retrieve(AllRbTopLevelClasses, RBSet<Class<?>>)","u":"retrieve(com.rb.nonbiz.reflection.AllRbTopLevelClasses,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"returnEmptyList()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"returnEmptyOnMissingString()"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"returnEmptySet()"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"returnSingletonList(T)"},{"p":"com.rb.nonbiz.testutils","c":"RBMockeries","l":"returnSingletonSet(T)"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"RIGHT_ANGLE"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"right(R)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"right(R)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"right(T)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"rightOnly(R)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"rightOnly(T)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"round()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"round(int)"},{"p":"com.rb.nonbiz.types","c":"RoundedPreciseValueRange","l":"roundedPreciseValueRange(Range<P>, RoundingScale)","u":"roundedPreciseValueRange(com.google.common.collect.Range,com.rb.biz.types.trading.RoundingScale)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"roundingScale(int)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"RoundingScale(int)","u":"%3Cinit%3E(int)"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"roundSimplistically(double)"},{"p":"com.rb.biz.types","c":"Money","l":"roundToPennies()"},{"p":"com.rb.nonbiz.types","c":"RBDoubles","l":"roundToTwoDecimalPlaces(double)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"rowCardinality(int)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"rowMajorIterator()"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"runAllTests(HasJsonApiDocumentation, Function<JsonObject, T>)","u":"runAllTests(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"runAllTestsExceptForValidSampleJson(HasJsonApiDocumentation)","u":"runAllTestsExceptForValidSampleJson(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"sameNonEmptyOptional(T)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBOptionalMatchers","l":"sameOptional(Optional<T>)","u":"sameOptional(java.util.Optional)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"sanityCheckContents()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"Counter.CounterBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter.IidCounterBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection.IndexInOrderedCollectionBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats.PartitionPairDifferenceStatsBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapDynamicBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap.RBSymmetricUnequalPairMapStaticBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList.JsonPointListBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries.JsonSparseTimeSeriesBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray.RBJsonLocalDateArrayBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray.RBJsonStringArrayBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"sanityCheckContents()"},{"p":"com.rb.nonbiz.util","c":"RBBuilder","l":"sanityCheckContents()"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"sellQuantity(BigDecimal)","u":"sellQuantity(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"sellQuantity(double)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"sellQuantity(PositiveQuantity)","u":"sellQuantity(com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.nonbiz.math.sequence","c":"Sequence","l":"Sequence(T, UnaryOperator<T>)","u":"%3Cinit%3E(T,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"set(int, int)","u":"set(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"set(int, int, double)","u":"set(int,int,double)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"set(int, V)","u":"set(int,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"set(int, V)","u":"set(int,V)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"set(K, V)","u":"set(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"set(K, V)","u":"set(K,V)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"set(R, C)","u":"set(R,C)"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"set(R, C, double)","u":"set(R,C,double)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"set(R, C, double)","u":"set(R,C,double)"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"set(R, C, int)","u":"set(R,C,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"set(R, C, V)","u":"set(R,C,V)"},{"p":"com.rb.nonbiz.types","c":"ObjectReference","l":"set(T)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"set(T)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"set(X, Y, Z, V)","u":"set(X,Y,Z,V)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setAllAssumingNoOverlap(JsonObject)","u":"setAllAssumingNoOverlap(com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setArray(String, JsonArray)","u":"setArray(java.lang.String,com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setArrayIfNonEmpty(String, JsonArray)","u":"setArrayIfNonEmpty(java.lang.String,com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"setAssumingAbsent(T, Coordinates)","u":"setAssumingAbsent(T,com.rb.nonbiz.collections.Coordinates)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"setAssumingInitialized(T)"},{"p":"com.rb.nonbiz.collections","c":"BitSet2D","l":"setAssumingOff(int, int)","u":"setAssumingOff(int,int)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"setAssumingOff(R, C)","u":"setAssumingOff(R,C)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"setAssumingUninitialized(T)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"setBehaviorForRest(SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest)","u":"setBehaviorForRest(com.rb.nonbiz.collections.SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"setBehaviorWithValueAndOverride(BehaviorWithValueAndOverride<V>)","u":"setBehaviorWithValueAndOverride(com.rb.biz.investing.modeling.selection.overrides.BehaviorWithValueAndOverride)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"setBehaviorWithValueButNoOverride(BehaviorWithValueButNoOverride<V>)","u":"setBehaviorWithValueButNoOverride(com.rb.biz.investing.modeling.selection.overrides.BehaviorWithValueButNoOverride)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setBoolean(String, Boolean)","u":"setBoolean(java.lang.String,java.lang.Boolean)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setBooleanIfFalse(String, boolean)","u":"setBooleanIfFalse(java.lang.String,boolean)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setBooleanIfTrue(String, boolean)","u":"setBooleanIfTrue(java.lang.String,boolean)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"setClass(Class<?>)","u":"setClass(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setClassBeingDocumented(Class<?>)","u":"setClassBeingDocumented(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"setClassBeingDocumented(Class<?>)","u":"setClassBeingDocumented(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setClassBeingDocumented(Class<?>)","u":"setClassBeingDocumented(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setClassBeingDocumented(Class<?>)","u":"setClassBeingDocumented(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setClassOfArrayItems(Class<?>)","u":"setClassOfArrayItems(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"setClassOfSubclass(Class<?>)","u":"setClassOfSubclass(java.lang.Class)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"setClosedUnitFractionSoftRangeToSameAsHard()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection.IndexInOrderedCollectionBuilder","l":"setCollectionSize(int)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setComparatorForX(Comparator<? super X>)","u":"setComparatorForX(java.util.Comparator)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setComparatorForY(Comparator<? super Y>)","u":"setComparatorForY(java.util.Comparator)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setComparatorForY(Comparator<? super Y>)","u":"setComparatorForY(java.util.Comparator)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setDiscriminatorProperty(String)","u":"setDiscriminatorProperty(java.lang.String)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"setDiscriminatorPropertyValue(String)","u":"setDiscriminatorPropertyValue(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDouble(String, double)","u":"setDouble(java.lang.String,double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDoubleIfNotAlmostZero(String, double, Epsilon)","u":"setDoubleIfNotAlmostZero(java.lang.String,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDoublePercentage(String, double)","u":"setDoublePercentage(java.lang.String,double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDoublePercentage(String, N)","u":"setDoublePercentage(java.lang.String,N)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDoublePercentage(String, UnitFraction)","u":"setDoublePercentage(java.lang.String,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setDoublePercentageIfNotAlmostZero(String, double, Epsilon)","u":"setDoublePercentageIfNotAlmostZero(java.lang.String,double,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setEnum(String, T)","u":"setEnum(java.lang.String,T)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setEpsilonForNetAdditionSanityCheck(UnitFraction)","u":"setEpsilonForNetAdditionSanityCheck(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setEpsilonForRemovalSanityChecks(UnitFraction)","u":"setEpsilonForRemovalSanityChecks(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setEvaluatorOfX(Function<X, Y>)","u":"setEvaluatorOfX(java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIf(String, boolean, JsonElement)","u":"setIf(java.lang.String,boolean,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIf(String, T, boolean, Function<T, JsonElement>)","u":"setIf(java.lang.String,T,boolean,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIf(String, T, Predicate<T>, Function<T, JsonElement>)","u":"setIf(java.lang.String,T,java.util.function.Predicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIfNonEmpty(String, JsonObject)","u":"setIfNonEmpty(java.lang.String,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIfOptionalDoublePresent(String, OptionalDouble)","u":"setIfOptionalDoublePresent(java.lang.String,java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIfOptionalIntPresent(String, OptionalInt)","u":"setIfOptionalIntPresent(java.lang.String,java.util.OptionalInt)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIfOptionalPresent(String, Optional<T>, Function<T, JsonElement>)","u":"setIfOptionalPresent(java.lang.String,java.util.Optional,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setIfOptionalPresent(String, Optional<T>, Predicate<T>, Function<T, JsonElement>)","u":"setIfOptionalPresent(java.lang.String,java.util.Optional,java.util.function.Predicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setImpreciseValue(String, P)","u":"setImpreciseValue(java.lang.String,P)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructionsBuilder","l":"setInclusionExclusionInstructionsBuilder()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator","l":"SetInclusionExclusionPredicateEvaluator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection.IndexInOrderedCollectionBuilder","l":"setIndexFromStart(int)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setInstantiator(DoubleFunction<Y>)","u":"setInstantiator(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setInstantiator(DoubleFunction<Y>)","u":"setInstantiator(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setInstantiator(DoubleFunction<Y>)","u":"setInstantiator(java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setInt(String, int)","u":"setInt(java.lang.String,int)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo.JsonApiSubclassInfoBuilder","l":"setJsonApiConverterForTraversing(HasJsonApiDocumentation)","u":"setJsonApiConverterForTraversing(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"setJsonApiEnumDescriptor(JsonApiEnumDescriptor<E>)","u":"setJsonApiEnumDescriptor(com.rb.nonbiz.json.JsonApiEnumDescriptor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setJsonApiInfoOnMultipleSubclasses(JsonApiSubclassInfo, JsonApiSubclassInfo, JsonApiSubclassInfo...)","u":"setJsonApiInfoOnMultipleSubclasses(com.rb.nonbiz.jsonapi.JsonApiSubclassInfo,com.rb.nonbiz.jsonapi.JsonApiSubclassInfo,com.rb.nonbiz.jsonapi.JsonApiSubclassInfo...)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setJsonApiInfoOnOnlySubclass(JsonApiSubclassInfo)","u":"setJsonApiInfoOnOnlySubclass(com.rb.nonbiz.jsonapi.JsonApiSubclassInfo)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonArray(String, JsonArray)","u":"setJsonArray(java.lang.String,com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonElement(String, JsonElement)","u":"setJsonElement(java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonPrimitive(String, JsonPrimitive)","u":"setJsonPrimitive(java.lang.String,com.google.gson.JsonPrimitive)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonSubArrayIfNonEmpty(String, Optional<JsonArray>)","u":"setJsonSubArrayIfNonEmpty(java.lang.String,java.util.Optional)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonSubObject(String, JsonObject)","u":"setJsonSubObject(java.lang.String,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonSubObjectIf(String, boolean, JsonObject)","u":"setJsonSubObjectIf(java.lang.String,boolean,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonSubObjectIf(String, T, Predicate<T>, Function<T, JsonObject>)","u":"setJsonSubObjectIf(java.lang.String,T,java.util.function.Predicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setJsonSubObjectIfNonEmpty(String, Optional<JsonObject>)","u":"setJsonSubObjectIfNonEmpty(java.lang.String,java.util.Optional)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"setJsonValidationInstructions(JsonValidationInstructions)","u":"setJsonValidationInstructions(com.rb.nonbiz.json.JsonValidationInstructions)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setKeyClass(Class<?>)","u":"setKeyClass(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setKeyClass(RBClass<?>)","u":"setKeyClass(com.rb.nonbiz.reflection.RBClass)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setKeysToAdd(RBMap<K, UnitFraction>)","u":"setKeysToAdd(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"setKeysToAddOrIncrease(RBMap<K, UnitFraction>)","u":"setKeysToAddOrIncrease(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setKeysToDecrease(RBMap<K, UnitFraction>)","u":"setKeysToDecrease(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setKeysToIncrease(RBMap<K, UnitFraction>)","u":"setKeysToIncrease(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"setKeysToRemove(RBMap<K, UnitFraction>)","u":"setKeysToRemove(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"setKeysToRemoveOrDecrease(RBMap<K, UnitFraction>)","u":"setKeysToRemoveOrDecrease(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setLabel(HumanReadableLabel)","u":"setLabel(com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setLabel(HumanReadableLabel)","u":"setLabel(com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"setLabel(HumanReadableLabel)","u":"setLabel(com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setLabel(HumanReadableLabel)","u":"setLabel(com.rb.nonbiz.text.HumanReadableLabel)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setLocalDate(String, LocalDate)","u":"setLocalDate(java.lang.String,java.time.LocalDate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setLocalDateTime(String, LocalDateTime)","u":"setLocalDateTime(java.lang.String,java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setLong(String, long)","u":"setLong(java.lang.String,long)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"setLongDocumentation(HumanReadableDocumentation)","u":"setLongDocumentation(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setLowerBoundX(X)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setLowerBoundX(X)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setLowerBoundY(Y)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"setMax(double)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setMaxIterations(int)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setMaxX(X)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setMaxX(X)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setMaxY(Y)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setMaxY(Y)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"setMean(double)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setMidpointGenerator(BinaryOperator<X>)","u":"setMidpointGenerator(java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"setMin(double)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setMinX(X)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setMinX(X)"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"setMinY(Y)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"setMinY(Y)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"setN(long)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setNontrivialSampleJson(JsonArray)","u":"setNontrivialSampleJson(com.google.gson.JsonArray)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"setNontrivialSampleJson(JsonElement)","u":"setNontrivialSampleJson(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"setNontrivialSampleJson(JsonElement)","u":"setNontrivialSampleJson(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setNontrivialSampleJson(JsonElement)","u":"setNontrivialSampleJson(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setNontrivialSampleJson(JsonElement)","u":"setNontrivialSampleJson(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setNumIterationsUsed(int)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"setOnlyOnce(int, int, double)","u":"setOnlyOnce(int,int,double)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"setOnlyOnce(R, C, double)","u":"setOnlyOnce(R,C,double)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOnlyOptionalProperty(String, Class<?>)","u":"setOnlyOptionalProperty(java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOnlyOptionalProperty(String, JsonApiPropertyDescriptor)","u":"setOnlyOptionalProperty(java.lang.String,com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOnlyRequiredProperty(String, Class<?>)","u":"setOnlyRequiredProperty(java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOnlyRequiredProperty(String, JsonApiPropertyDescriptor)","u":"setOnlyRequiredProperty(java.lang.String,com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(RBMap<String, JsonApiPropertyDescriptor>)","u":"setOptionalProperties(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(String, Class<?>, String, Class<?>)","u":"setOptionalProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(String, Class<?>, String, Class<?>, String, Class<?>)","u":"setOptionalProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setOptionalProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setOptionalProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setOptionalProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setOptionalProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"setOverridesMap(RBMap<K, V>)","u":"setOverridesMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setPreciseValue(String, P)","u":"setPreciseValue(java.lang.String,P)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setPreciseValueIfNotAlmostZero(String, P, Epsilon)","u":"setPreciseValueIfNotAlmostZero(java.lang.String,P,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setRBClassOfArrayItems(RBClass<?>)","u":"setRBClassOfArrayItems(com.rb.nonbiz.reflection.RBClass)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(RBMap<String, JsonApiPropertyDescriptor>)","u":"setRequiredProperties(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(String, Class<?>, String, Class<?>)","u":"setRequiredProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(String, Class<?>, String, Class<?>, String, Class<?>)","u":"setRequiredProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setRequiredProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setRequiredProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions.JsonValidationInstructionsBuilder","l":"setRequiredProperties(String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>, String, Class<?>)","u":"setRequiredProperties(java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class,java.lang.String,java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation.JsonApiArrayDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiClassDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation.JsonApiRbNumericWrapperDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation.JsonApiClassWithSubclassesDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation.JsonApiEnumDocumentationBuilder","l":"setSingleLineSummary(HumanReadableDocumentation)","u":"setSingleLineSummary(com.rb.nonbiz.text.HumanReadableDocumentation)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"setStandardDeviation(double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectBuilder","l":"setString(String, String)","u":"setString(java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"setStringToValueMap(RBMap<String, Y>)","u":"setStringToValueMap(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setTargetY(Y)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setTargetY(Y)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setTerminationPredicate(BinarySearchTerminationPredicate<X, Y>)","u":"setTerminationPredicate(com.rb.nonbiz.search.BinarySearchTerminationPredicate)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"setUnionOfFirstAndRest(K, K...)","u":"setUnionOfFirstAndRest(K,K...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"setUnionOfFirstAndRestInstrumentIds(InstrumentId, InstrumentId...)","u":"setUnionOfFirstAndRestInstrumentIds(com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId...)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"setUnionOfFirstSecondAndRest(K, K, K...)","u":"setUnionOfFirstSecondAndRest(K,K,K...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"setUnionOfFirstSecondAndRestInstrumentIds(InstrumentId, InstrumentId, InstrumentId...)","u":"setUnionOfFirstSecondAndRestInstrumentIds(com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId,com.rb.biz.types.asset.InstrumentId...)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchParameters.BinarySearchParametersBuilder","l":"setUpperBoundX(X)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setUpperBoundX(X)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult.BinarySearchResultBuilder","l":"setUpperBoundY(Y)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setValueClass(Class<?>)","u":"setValueClass(java.lang.Class)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation.JsonApiClassWithNonFixedPropertiesDocumentationBuilder","l":"setValueClass(RBClass<?>)","u":"setValueClass(com.rb.nonbiz.reflection.RBClass)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"setValueForEtfs(T)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"setValueForMutualFunds(T)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"setValueForStocks(T)"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap.InstrumentTypeMapBuilder","l":"setValueForStructuredProducts(T)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setX0(X)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setYForXGreaterThanOrEqualToX0(Y)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setYForXGreaterThanX0(Y)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setYForXLessThanOrEqualToX0(Y)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"setYForXLessThanX0(Y)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"shallowGenericRbClass(Class<T>, Class<?>, Class<?>...)","u":"shallowGenericRbClass(java.lang.Class,java.lang.Class,java.lang.Class...)"},{"p":"com.rb.nonbiz.collections","c":"RBMaps","l":"sharedItemMap(RBSet<K>, V)","u":"sharedItemMap(com.rb.nonbiz.collections.RBSet,V)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"sharedMatcherEpsilons(Epsilon, MatcherEpsilonDescriptor<?>, MatcherEpsilonDescriptor<?>...)","u":"sharedMatcherEpsilons(com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor,com.rb.nonbiz.testutils.MatcherEpsilonDescriptor...)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"shiftDoubleRange(Range<Double>, double)","u":"shiftDoubleRange(com.google.common.collect.Range,double)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"shortValue()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"shortValue()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"shortValue()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRangesShrinker","l":"shrink(ClosedUnitFractionHardAndSoftRanges<K>, UnitFraction)","u":"shrink(com.rb.nonbiz.collections.ClosedUnitFractionHardAndSoftRanges,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeShrinker","l":"shrink(ClosedUnitFractionRange, UnitFraction)","u":"shrink(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRangesShrinker","l":"shrinkSingle(ClosedUnitFractionHardAndSoftRange, UnitFraction)","u":"shrinkSingle(com.rb.nonbiz.types.ClosedUnitFractionHardAndSoftRange,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"SIGNED_FRACTION_0"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"SIGNED_FRACTION_1"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFraction(BigDecimal)","u":"signedFraction(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"SignedFraction(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFraction(BigDecimal, double)","u":"signedFraction(java.math.BigDecimal,double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"SignedFraction(BigDecimal, double)","u":"%3Cinit%3E(java.math.BigDecimal,double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFraction(double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFraction(long, long)","u":"signedFraction(long,long)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFraction(String)","u":"signedFraction(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"signedFractionFixedTo(SignedFraction)","u":"signedFractionFixedTo(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"signedFractionFixedToOne()"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"signedFractionFixedToZero()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFractionInBps(double)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"signedFractionInPct(double)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"signedMoney(BigDecimal)","u":"signedMoney(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"SignedMoney(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"SignedMoney(BigDecimal, double)","u":"%3Cinit%3E(java.math.BigDecimal,double)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"signedMoney(double)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"signedPartition(RBMap<K, SignedFraction>)","u":"signedPartition(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"signedPartitionFromWeights(RBMap<K, V>)","u":"signedPartitionFromWeights(com.rb.nonbiz.collections.RBMap)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"signedQuantity(BigDecimal)","u":"signedQuantity(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"SignedQuantity(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"signedQuantity(double)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"signsAreOpposite(ImpreciseValue<T>, ImpreciseValue<T>)","u":"signsAreOpposite(com.rb.nonbiz.types.ImpreciseValue,com.rb.nonbiz.types.ImpreciseValue)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"signsAreOpposite(IntegerValue<T>, IntegerValue<T>)","u":"signsAreOpposite(com.rb.nonbiz.types.IntegerValue,com.rb.nonbiz.types.IntegerValue)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"signsAreOpposite(PreciseValue<T>, PreciseValue<T>)","u":"signsAreOpposite(com.rb.nonbiz.types.PreciseValue,com.rb.nonbiz.types.PreciseValue)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"signsAreSame(PreciseValue<?>, PreciseValue<?>)","u":"signsAreSame(com.rb.nonbiz.types.PreciseValue,com.rb.nonbiz.types.PreciseValue)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMapping(Collection<T>)","u":"simpleArrayIndexMapping(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMapping(Iterator<T>)","u":"simpleArrayIndexMapping(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMapping(Stream<T>)","u":"simpleArrayIndexMapping(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMapping(T...)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMappingClosedRange(ClosedRange<Integer>, IntFunction<T>)","u":"simpleArrayIndexMappingClosedRange(com.rb.nonbiz.collections.ClosedRange,java.util.function.IntFunction)"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"simpleArrayIndexMappingFromZeroWithSizeN(int, IntFunction<T>)","u":"simpleArrayIndexMappingFromZeroWithSizeN(int,java.util.function.IntFunction)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"simpleClassJsonApiPropertyDescriptor(Class<?>)","u":"simpleClassJsonApiPropertyDescriptor(java.lang.Class)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"simpleClassJsonApiPropertyDescriptor(Class<?>, JsonPropertySpecificDocumentation)","u":"simpleClassJsonApiPropertyDescriptor(java.lang.Class,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"simpleCsv(SimpleCsvHeaderRow, List<SimpleCsvRow>)","u":"simpleCsv(com.rb.nonbiz.text.csv.SimpleCsvHeaderRow,java.util.List)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"simpleCsvHeaderRow(SimpleCsvRow)","u":"simpleCsvHeaderRow(com.rb.nonbiz.text.csv.SimpleCsvRow)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvParser","l":"SimpleCsvParser()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRow","l":"simpleCsvRow(List<String>)","u":"simpleCsvRow(java.util.List)"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRowParser","l":"SimpleCsvRowParser()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"simpleFileNameHumanReadableLabel(String)","u":"simpleFileNameHumanReadableLabel(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonApiEnumDescriptor","l":"simpleJsonApiEnumDescriptor(Class<E>)","u":"simpleJsonApiEnumDescriptor(java.lang.Class)"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"simpleNonEmptyHumanReadableLabelWithoutSpaces(String)","u":"simpleNonEmptyHumanReadableLabelWithoutSpaces(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification.SimplePartitionModificationBuilder","l":"simplePartitionModificationBuilder()"},{"p":"com.rb.nonbiz.math.sequence","c":"SimpleSequence","l":"SimpleSequence(T, UnaryOperator<T>)","u":"%3Cinit%3E(T,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.jsonapi","c":"SimpleSequenceJsonApiConverter","l":"SimpleSequenceJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"simpleStepFunctionRBNumericFunctionBuilder()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"simpleUnknownClassJsonApiPropertyDescriptor(JsonPropertySpecificDocumentation)","u":"simpleUnknownClassJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"singleColumnIterator(C)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"singleColumnIterator(C)"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"singleColumnIterator(C)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"singleColumnIterator(C)"},{"p":"com.rb.nonbiz.collections","c":"SingleDetailedPartitionModificationApplier","l":"SingleDetailedPartitionModificationApplier()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"SingleDetailedPartitionModificationCalculator","l":"SingleDetailedPartitionModificationCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"singleRowIterator(R)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"singleRowIterator(R)"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"singleRowIterator(R)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"singleRowIterator(R)"},{"p":"com.rb.nonbiz.collections","c":"SingleSimplePartitionModificationApplier","l":"SingleSimplePartitionModificationApplier()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"SingleSimplePartitionModificationCalculator","l":"SingleSimplePartitionModificationCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.collections","c":"RBBitSets","l":"singletonBitSet(boolean)"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"singletonCaseInsensitiveStringFilter(String)","u":"singletonCaseInsensitiveStringFilter(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"singletonClosedRange(T)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"singletonContiguousDiscreteRangeMap(Range<K>, V)","u":"singletonContiguousDiscreteRangeMap(com.google.common.collect.Range,V)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"singletonContiguousNonDiscreteRangeMapWithEnd(K, V, K)","u":"singletonContiguousNonDiscreteRangeMapWithEnd(K,V,K)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"singletonContiguousNonDiscreteRangeMapWithNoEnd(K, V)","u":"singletonContiguousNonDiscreteRangeMapWithNoEnd(K,V)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"singletonDoubleMap(K, double)","u":"singletonDoubleMap(K,double)"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"singletonFlatLinearCombination(T, W)","u":"singletonFlatLinearCombination(T,W)"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"singletonFlatSignedLinearCombination(T)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedAllowingEmptyInstrumentMaster","l":"singletonHardCodedAllowingEmptyInstrumentMaster(InstrumentId, String)","u":"singletonHardCodedAllowingEmptyInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"singletonHardCodedInstrumentMaster(InstrumentId, String)","u":"singletonHardCodedInstrumentMaster(com.rb.biz.types.asset.InstrumentId,java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMaps","l":"singletonHasInstrumentIdMap(T, V)","u":"singletonHasInstrumentIdMap(T,V)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"singletonHasInstrumentIdPartition(T)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSets","l":"singletonHasInstrumentIdSet(T)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMaps","l":"singletonIidBiMap(InstrumentId, V)","u":"singletonIidBiMap(com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapSimpleConstructors","l":"singletonIidMap(InstrumentId, V)","u":"singletonIidMap(com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"singletonIidPartition(InstrumentId)","u":"singletonIidPartition(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidSetSimpleConstructors","l":"singletonIidSet(InstrumentId)","u":"singletonIidSet(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonArray(JsonElement)","u":"singletonJsonArray(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonBooleanArray(boolean)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonDoubleArray(double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonElementArray(JsonElement)","u":"singletonJsonElementArray(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonIntegerArray(int)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonLongArray(long)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"singletonJsonObject(String, JsonElement)","u":"singletonJsonObject(java.lang.String,com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjectSimpleConstructors","l":"singletonJsonObject(String, String)","u":"singletonJsonObject(java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonObjectPath","l":"singletonJsonObjectPath(String)","u":"singletonJsonObjectPath(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"singletonJsonStringArray(String)","u":"singletonJsonStringArray(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"singletonLinkedHashMap(K, V)","u":"singletonLinkedHashMap(K,V)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"singletonNonContiguousRangeCollectionWithEnd(Range<K>)","u":"singletonNonContiguousRangeCollectionWithEnd(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"singletonNonContiguousRangeCollectionWithNoEnd(K)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"singletonNonContiguousRangeMapWithEnd(Range<K>, V)","u":"singletonNonContiguousRangeMapWithEnd(com.google.common.collect.Range,V)"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"singletonNonContiguousRangeMapWithNoEnd(K, V)","u":"singletonNonContiguousRangeMapWithNoEnd(K,V)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"singletonNonDiscreteContiguousRangeCollectionWithEnd(K, K, ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment)","u":"singletonNonDiscreteContiguousRangeCollectionWithEnd(K,K,com.rb.nonbiz.collections.ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"singletonNonDiscreteContiguousRangeCollectionWithNoEnd(K)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"singletonPartition(K)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"singletonPositiveMultipliersIidMap(InstrumentId, PositiveMultiplier)","u":"singletonPositiveMultipliersIidMap(com.rb.biz.types.asset.InstrumentId,com.rb.nonbiz.types.PositiveMultiplier)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"singletonPositiveMultipliersMap(K, PositiveMultiplier)","u":"singletonPositiveMultipliersMap(K,com.rb.nonbiz.types.PositiveMultiplier)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMapSimpleConstructors","l":"singletonRBEnumMap(E, V)","u":"singletonRBEnumMap(E,V)"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"singletonRBIncreasingSet(T)"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"singletonRBJsonDoubleArray(double)"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray","l":"singletonRBJsonLocalDateArray(LocalDate)","u":"singletonRBJsonLocalDateArray(java.time.LocalDate)"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"singletonRBJsonStringArray(String)","u":"singletonRBJsonStringArray(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"singletonRBListWithoutSpecialValue(T)"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"singletonRBListWithSpecialValue(T)"},{"p":"com.rb.nonbiz.collections","c":"RBMapSimpleConstructors","l":"singletonRBMap(K, V)","u":"singletonRBMap(K,V)"},{"p":"com.rb.nonbiz.text","c":"RBMapsOfHasUniqueId","l":"singletonRBMapOfHasUniqueId(K, V)","u":"singletonRBMapOfHasUniqueId(K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"singletonRBSet(T)"},{"p":"com.rb.nonbiz.text","c":"RBSetsOfHasUniqueId","l":"singletonRBSetOfHasUniqueId(V)"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"singletonRBSortedSet(Comparator<T>, T)","u":"singletonRBSortedSet(java.util.Comparator,T)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"singletonSignedPartition(K)"},{"p":"com.rb.biz.types.asset","c":"TestHasStringList","l":"singletonTestHasStringList(String)","u":"singletonTestHasStringList(java.lang.String)"},{"p":"com.rb.nonbiz.reflection","c":"UniqueClassesWithDepth","l":"singletonUniqueClassesWithDepth(Class<?>, int)","u":"singletonUniqueClassesWithDepth(java.lang.Class,int)"},{"p":"com.rb.biz.marketdata.instrumentmaster","c":"HardCodedInstrumentMaster","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"ArrayIndexMapping","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"size()"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray.RBJsonDoubleArrayBuilder","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonLocalDateArray.RBJsonLocalDateArrayBuilder","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray","l":"size()"},{"p":"com.rb.nonbiz.json","c":"RBJsonStringArray.RBJsonStringArrayBuilder","l":"size()"},{"p":"com.rb.nonbiz.math.eigen","c":"DecreasingPositiveDoubles","l":"size()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"size()"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"size()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"size()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"size()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"size()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"size()"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"sizePrefix(int)"},{"p":"com.rb.nonbiz.text","c":"SmartFormatter","l":"smartFormat(String, Object...)","u":"smartFormat(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"SmartFormatter","l":"smartFormatCollection(Collection<T>)","u":"smartFormatCollection(java.util.Collection)"},{"p":"com.rb.nonbiz.text","c":"SmartFormatter","l":"SmartFormatter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"SmartFormatterHelper","l":"SmartFormatterHelper()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"SmartFormatter","l":"smartFormatWithDatePrepended(String, Object...)","u":"smartFormatWithDatePrepended(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"snapToRound(BigDecimal)","u":"snapToRound(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"snapToRound(T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"snapToZero(BigDecimal)","u":"snapToZero(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"snapToZero(T)"},{"p":"com.rb.biz.types.asset","c":"InstrumentIds","l":"sortedInstrumentIds(Collection<InstrumentId>)","u":"sortedInstrumentIds(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"sortedInstrumentIdStream()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"sortedInstrumentIdStream()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"sortedInstrumentIdStream()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"sortedKeys(Comparator<K>)","u":"sortedKeys(java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"sortedKeysStream()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"sortedKeyStream()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"sortedStream()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"sortedStream()"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"sortEfficientlyToList(Stream<T>, Function<T, C>, Comparator<T>...)","u":"sortEfficientlyToList(java.util.stream.Stream,java.util.function.Function,java.util.Comparator...)"},{"p":"com.rb.nonbiz.collections","c":"RBArrays","l":"spliceIntoArray(int[], int, int)","u":"spliceIntoArray(int[],int,int)"},{"p":"com.rb.nonbiz.text.csv","c":"CsvLineSplitter","l":"splitLineIntoComponents(String, int)","u":"splitLineIntoComponents(java.lang.String,int)"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"splitMultiplier(BigDecimal)","u":"splitMultiplier(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"splitMultiplier(PositiveQuantity, PositiveQuantity)","u":"splitMultiplier(com.rb.biz.types.trading.PositiveQuantity,com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.nonbiz.math.eigen","c":"StandardDeviationsCalculator","l":"StandardDeviationsCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"JsonValidator","l":"staticValidate(JsonObject, JsonValidationInstructions)","u":"staticValidate(com.google.gson.JsonObject,com.rb.nonbiz.json.JsonValidationInstructions)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_MAX"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_MEAN"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_MIN"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_N"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_STANDARD_DEVIATION"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_SUM"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"STATISTICAL_SUMMARY_VARIANCE"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"statisticalSummaryImpl(StatisticalSummary)","u":"statisticalSummaryImpl(org.apache.commons.math3.stat.descriptive.StatisticalSummary)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl.StatisticalSummaryImplBuilder","l":"statisticalSummaryImplBuilder()"},{"p":"com.rb.nonbiz.jsonapi","c":"StatisticalSummaryJsonApiConverter","l":"StatisticalSummaryJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryOfStatisticalSummariesCalculator","l":"StatisticalSummaryOfStatisticalSummariesCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.math.stats","c":"StdDevCalculator","l":"StdDevCalculator()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A6"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A7"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A8"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_A9"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B6"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B7"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_B8"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_C5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_D5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_E5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_F"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_G"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_H"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_L1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_L2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_L3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_L4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_L5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STOCK_S5"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StockInstrumentType","l":"stockInstrumentType()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StockInstrumentType","l":"StockInstrumentType()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSortedSet","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"stream()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"stream()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"stream()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBStreamMatchers","l":"streamEqualityMatcher(Stream<T>)","u":"streamEqualityMatcher(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"streamForEachUniquePair(RBSet<K>)","u":"streamForEachUniquePair(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"streamForEachUniqueUnorderedPairInList(List<K>)","u":"streamForEachUniqueUnorderedPairInList(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"streamIsEmpty(Stream<T>)","u":"streamIsEmpty(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"streamItemsAreUnique(Stream<T>)","u":"streamItemsAreUnique(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBStreamMatchers","l":"streamMatcher(Stream<T>, RBMatchers.MatcherGenerator<T>)","u":"streamMatcher(java.util.stream.Stream,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"streamOfDefaultValuePlusOverrides()"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"streamOfHasUniqueIdToJsonObject(Stream<V>, Function<V, JsonElement>)","u":"streamOfHasUniqueIdToJsonObject(java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"streamToJsonArray(int, Stream<T>, Function<T, JsonElement>)","u":"streamToJsonArray(int,java.util.stream.Stream,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonObjects","l":"streamToJsonObject(Stream<V>, Function<V, String>, Function<V, JsonElement>)","u":"streamToJsonObject(java.util.stream.Stream,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"strictlyMonotonic(Comparator<? super P>, P, P, P...)","u":"strictlyMonotonic(java.util.Comparator,P,P,P...)"},{"p":"com.rb.nonbiz.collections","c":"RBComparables","l":"strictlyMonotonic(P, P, P...)","u":"strictlyMonotonic(P,P,P...)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"strictWithTypesNumberMatcher(T, T)","u":"strictWithTypesNumberMatcher(T,T)"},{"p":"com.rb.nonbiz.io","c":"StringFromFileReader","l":"StringFromFileReader()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"StringFunctions()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"stringListMatcher(List<String>)","u":"stringListMatcher(java.util.List)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"stringMatcher(String)","u":"stringMatcher(java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"Strings()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.io","c":"StringToFileWriter","l":"StringToFileWriter()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_1"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_2"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_3"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_4"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_5"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_6"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_7"},{"p":"com.rb.biz.marketdata","c":"FakeInstruments","l":"STRUCTURED_PRODUCT_8"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StructuredProductInstrumentType","l":"structuredProductInstrumentType()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StructuredProductInstrumentType","l":"StructuredProductInstrumentType()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"subclassDiscriminatorPropertyDescriptor(String)","u":"subclassDiscriminatorPropertyDescriptor(java.lang.String)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"subtract(BuyQuantity)","u":"subtract(com.rb.biz.types.trading.BuyQuantity)"},{"p":"com.rb.biz.types","c":"Money","l":"subtract(Money)","u":"subtract(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"subtract(Money)","u":"subtract(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"Money","l":"subtract(Money, String, Object...)","u":"subtract(com.rb.biz.types.Money,java.lang.String,java.lang.Object...)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"subtract(NonNegativeQuantity)","u":"subtract(com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"subtract(PositiveQuantity)","u":"subtract(com.rb.biz.types.trading.PositiveQuantity)"},{"p":"com.rb.biz.types","c":"Price","l":"subtract(Price)","u":"subtract(com.rb.biz.types.Price)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"subtract(SellQuantity)","u":"subtract(com.rb.biz.types.trading.SellQuantity)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"subtract(SignedFraction)","u":"subtract(com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.biz.types","c":"Money","l":"subtract(SignedMoney)","u":"subtract(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"subtract(SignedMoney)","u":"subtract(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"subtract(SignedQuantity)","u":"subtract(com.rb.biz.types.trading.SignedQuantity)"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"subtract(T, T)","u":"subtract(T,T)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"subtract(UnitFraction)","u":"subtract(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.biz.types","c":"Money","l":"subtractAndFloorToZero(Money)","u":"subtractAndFloorToZero(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types","c":"Money","l":"subtractSigned(SignedMoney)","u":"subtractSigned(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.biz.types","c":"Money","l":"subtractToSigned(Money)","u":"subtractToSigned(com.rb.biz.types.Money)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"subtractToSigned(NonNegativeQuantity)","u":"subtractToSigned(com.rb.biz.types.trading.NonNegativeQuantity)"},{"p":"com.rb.biz.types","c":"Money","l":"subtractToSigned(SignedMoney)","u":"subtractToSigned(com.rb.biz.types.SignedMoney)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"subtractWithFloorOfZero(UnitFraction)","u":"subtractWithFloorOfZero(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"sum()"},{"p":"com.rb.nonbiz.types","c":"NonNegativeMultiplier","l":"sum(Collection<NonNegativeMultiplier>)","u":"sum(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"sum(Collection<SignedFraction>)","u":"sum(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sum(Collection<UnitFraction>)","u":"sum(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sum(Stream<UnitFraction>)","u":"sum(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sum(UnitFraction, UnitFraction, UnitFraction...)","u":"sum(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction...)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumAsBigDecimals(Collection<T>)","u":"sumAsBigDecimals(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumAsBigDecimals(Stream<T>)","u":"sumAsBigDecimals(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumBigDecimals(Collection<BigDecimal>)","u":"sumBigDecimals(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumBigDecimals(Iterator<BigDecimal>)","u":"sumBigDecimals(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumBigDecimals(Stream<BigDecimal>)","u":"sumBigDecimals(java.util.stream.Stream)"},{"p":"com.rb.biz.types.trading","c":"BuyQuantity","l":"sumBuyQuantities(Iterator<BuyQuantity>)","u":"sumBuyQuantities(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"DoubleMaps","l":"sumDoubleMaps(DoubleMap<K>, DoubleMap<K>)","u":"sumDoubleMaps(com.rb.nonbiz.collections.DoubleMap,com.rb.nonbiz.collections.DoubleMap)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"sumDoubles(Collection<Double>)","u":"sumDoubles(java.util.Collection)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"sumElements()"},{"p":"com.rb.biz.types","c":"Money","l":"sumMoney(Iterable<Money>)","u":"sumMoney(java.lang.Iterable)"},{"p":"com.rb.biz.types","c":"Money","l":"sumMoney(Iterator<Money>)","u":"sumMoney(java.util.Iterator)"},{"p":"com.rb.biz.types","c":"Money","l":"sumMoney(List<Money>)","u":"sumMoney(java.util.List)"},{"p":"com.rb.biz.types","c":"Money","l":"sumMoney(Money, Money, Money...)","u":"sumMoney(com.rb.biz.types.Money,com.rb.biz.types.Money,com.rb.biz.types.Money...)"},{"p":"com.rb.biz.types","c":"Money","l":"sumMoney(Stream<Money>)","u":"sumMoney(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumNonNegativeBigDecimals(Iterator<BigDecimal>)","u":"sumNonNegativeBigDecimals(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumNonNegativeBigDecimals(Stream<BigDecimal>)","u":"sumNonNegativeBigDecimals(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumNonNegativeBigDecimalsToDouble(Stream<BigDecimal>)","u":"sumNonNegativeBigDecimalsToDouble(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumNonNegativePreciseValuesToDouble(Collection<T>)","u":"sumNonNegativePreciseValuesToDouble(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"RBStreams","l":"sumNonNegativePreciseValuesToDouble(Stream<T>)","u":"sumNonNegativePreciseValuesToDouble(java.util.stream.Stream)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"sumNonNegativeQuantities(Iterator<NonNegativeQuantity>)","u":"sumNonNegativeQuantities(java.util.Iterator)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"sumNonNegativeQuantities(NonNegativeQuantity, NonNegativeQuantity, NonNegativeQuantity...)","u":"sumNonNegativeQuantities(com.rb.biz.types.trading.NonNegativeQuantity,com.rb.biz.types.trading.NonNegativeQuantity,com.rb.biz.types.trading.NonNegativeQuantity...)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"sumNonNegativeQuantities(Stream<NonNegativeQuantity>)","u":"sumNonNegativeQuantities(java.util.stream.Stream)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"sumPositiveQuantities(Collection<PositiveQuantity>)","u":"sumPositiveQuantities(java.util.Collection)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"sumPositiveQuantities(PositiveQuantity...)","u":"sumPositiveQuantities(com.rb.biz.types.trading.PositiveQuantity...)"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"sumPositiveQuantities(Stream<PositiveQuantity>)","u":"sumPositiveQuantities(java.util.stream.Stream)"},{"p":"com.rb.biz.types.trading","c":"SellQuantity","l":"sumSellQuantities(Iterator<SellQuantity>)","u":"sumSellQuantities(java.util.Iterator)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"sumSignedMoney(Iterable<SignedMoney>)","u":"sumSignedMoney(java.lang.Iterable)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"sumSignedMoney(Iterator<SignedMoney>)","u":"sumSignedMoney(java.util.Iterator)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"sumSignedMoney(SignedMoney, SignedMoney, SignedMoney...)","u":"sumSignedMoney(com.rb.biz.types.SignedMoney,com.rb.biz.types.SignedMoney,com.rb.biz.types.SignedMoney...)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"sumSignedMoney(Stream<SignedMoney>)","u":"sumSignedMoney(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sumToAlmostOne(Collection<UnitFraction>, Epsilon)","u":"sumToAlmostOne(java.util.Collection,com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sumToAlmostOne(Epsilon, UnitFraction, UnitFraction...)","u":"sumToAlmostOne(com.rb.nonbiz.types.Epsilon,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction...)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"sumToBigDecimal(Iterable<T>)","u":"sumToBigDecimal(java.lang.Iterable)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"sumToBigDecimal(Iterator<T>)","u":"sumToBigDecimal(java.util.Iterator)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"sumToDouble(Iterable<T>)","u":"sumToDouble(java.lang.Iterable)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"sumToDouble(Iterator<T>)","u":"sumToDouble(java.util.Iterator)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"sumToInt(Iterable<T>)","u":"sumToInt(java.lang.Iterable)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"sumToInt(Iterator<T>)","u":"sumToInt(java.util.Iterator)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"sumToLong(Iterable<T>)","u":"sumToLong(java.lang.Iterable)"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"sumToLong(Iterator<T>)","u":"sumToLong(java.util.Iterator)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sumWithCeilingOf1(Collection<UnitFraction>)","u":"sumWithCeilingOf1(java.util.Collection)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sumWithCeilingOf1(Stream<UnitFraction>)","u":"sumWithCeilingOf1(java.util.stream.Stream)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"sumWithCeilingOf1(UnitFraction, UnitFraction, UnitFraction...)","u":"sumWithCeilingOf1(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction...)"},{"p":"com.rb.biz.types","c":"Symbol","l":"symbol(String)","u":"symbol(java.lang.String)"},{"p":"com.rb.biz.types","c":"Symbol","l":"symbolAllowingInvalid(String)","u":"symbolAllowingInvalid(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"symmetricClosedUnitFractionHardToSoftRangeTighteningInstructions(UnitFraction)","u":"symmetricClosedUnitFractionHardToSoftRangeTighteningInstructions(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"targetWithClosedUnitFractionHardAndSoftRange(UnitFraction, ClosedUnitFractionHardAndSoftRange)","u":"targetWithClosedUnitFractionHardAndSoftRange(com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.ClosedUnitFractionHardAndSoftRange)"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"targetWithOptionalClosedUnitFractionHardAndSoftRange(UnitFraction, Optional<ClosedUnitFractionHardAndSoftRange>)","u":"targetWithOptionalClosedUnitFractionHardAndSoftRange(com.rb.nonbiz.types.UnitFraction,java.util.Optional)"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"targetWithoutClosedUnitFractionHardAndSoftRange(UnitFraction)","u":"targetWithoutClosedUnitFractionHardAndSoftRange(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchTerminationPredicate","l":"terminateBasedOnXandY(BiPredicate<X, X>, BiPredicate<Y, Y>)","u":"terminateBasedOnXandY(java.util.function.BiPredicate,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchTerminationPredicate","l":"terminateBasedOnXorY(BiPredicate<X, X>, BiPredicate<Y, Y>)","u":"terminateBasedOnXorY(java.util.function.BiPredicate,java.util.function.BiPredicate)"},{"p":"com.rb.nonbiz.search","c":"BinarySearchTerminationPredicate","l":"test(X, X, Y, Y)","u":"test(X,X,Y,Y)"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"testAllPropertiesMentionedInDoc(HasJsonApiDocumentation)","u":"testAllPropertiesMentionedInDoc(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"testFromJsonObject(Function<JsonObject, T>)","u":"testFromJsonObject(java.util.function.Function)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"testGetHumanReadableLabelOnAll3Objects_ifHasHumanReadableLabel()"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"testHasInstrumentId(InstrumentId, double)","u":"testHasInstrumentId(com.rb.biz.types.asset.InstrumentId,double)"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"testHasInstrumentIdMatcher(TestHasInstrumentId)","u":"testHasInstrumentIdMatcher(com.rb.nonbiz.collections.TestHasInstrumentId)"},{"p":"com.rb.biz.types.collections.ts","c":"TestHasRbSet","l":"TestHasRbSet(RBSet<K>, String)","u":"%3Cinit%3E(com.rb.nonbiz.collections.RBSet,java.lang.String)"},{"p":"com.rb.biz.types.collections.ts","c":"TestHasRbSet","l":"testHasRbSetMatcher(TestHasRbSet<K>)","u":"testHasRbSetMatcher(com.rb.biz.types.collections.ts.TestHasRbSet)"},{"p":"com.rb.biz.types.asset","c":"TestHasStringList","l":"testHasStringListOf(String, String, String...)","u":"testHasStringListOf(java.lang.String,java.lang.String,java.lang.String...)"},{"p":"com.rb.nonbiz.text","c":"TestHasUniqueId","l":"testHasUniqueId(UniqueId<TestHasUniqueId>, UnitFraction)","u":"testHasUniqueId(com.rb.nonbiz.text.UniqueId,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.text","c":"TestHasUniqueId","l":"testHasUniqueIdMatcher(TestHasUniqueId)","u":"testHasUniqueIdMatcher(com.rb.nonbiz.text.TestHasUniqueId)"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"testPropertiesMentionedAreValid(HasJsonApiDocumentation)","u":"testPropertiesMentionedAreValid(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiTestData","l":"testRoundTripConversions(Function<T, JsonArray>, Function<JsonArray, T>)","u":"testRoundTripConversions(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"testRoundTripConversions(Function<T, JsonObject>, Function<JsonObject, T>)","u":"testRoundTripConversions(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiTestData","l":"testToJsonObject(Function<T, JsonObject>)","u":"testToJsonObject(java.util.function.Function)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"testToMultilineStringOnAll3Objects_ifPrintsMultilineString()"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"testToStringOnAll3Objects_ifPrintsInstruments()"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"testToStringOnAll3Objects()"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"testToStringOnOnlyObject()"},{"p":"com.rb.nonbiz.jsonapi","c":"HasJsonApiDocumentationTestHelper","l":"testValidSampleJson(HasJsonApiDocumentation, Function<JsonObject, T>)","u":"testValidSampleJson(com.rb.nonbiz.jsonapi.HasJsonApiDocumentation,java.util.function.Function)"},{"p":"com.rb.nonbiz.threads","c":"ExecutorCompletionServiceProvider","l":"THREAD_POOL_SIZE"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"THROW_EXCEPTION"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"throwOnUnknownString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"throwWhenNoValueAndNoOverride()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"tightenClosedUnitFractionRangeAround(ClosedUnitFractionRange, UnitFraction, UnitFraction)","u":"tightenClosedUnitFractionRangeAround(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangeUtilities","l":"tightenClosedUnitFractionRangeProportionally(ClosedUnitFractionRange, UnitFraction, ClosedUnitFractionHardToSoftRangeTighteningInstructions)","u":"tightenClosedUnitFractionRangeProportionally(com.rb.nonbiz.types.ClosedUnitFractionRange,com.rb.nonbiz.types.UnitFraction,com.rb.nonbiz.types.ClosedUnitFractionHardToSoftRangeTighteningInstructions)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRangesUtilities","l":"tightenClosedUnitFractionRangesAround(ClosedUnitFractionRanges<K>, RBMap<K, UnitFraction>, UnitFraction)","u":"tightenClosedUnitFractionRangesAround(com.rb.nonbiz.collections.ClosedUnitFractionRanges,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"tightenToSoftOrCurrent(UnitFraction)","u":"tightenToSoftOrCurrent(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.collections","c":"PartitionTilter","l":"tiltPartition(Partition<K>, PositiveMultipliersMap<K>)","u":"tiltPartition(com.rb.nonbiz.collections.Partition,com.rb.nonbiz.types.PositiveMultipliersMap)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"timeScaleAdjust(double)"},{"p":"com.rb.nonbiz.types","c":"RawInterpolator","l":"to(double)"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"toAnnuallyCompoundedAnnualizedReturn()"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"toAnnuallyCompoundedAnnualizedReturn(long)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"toArray()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toAssetIdPartition()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toBasisPoints()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toBasisPoints()"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"toBasisPoints(double, int)","u":"toBasisPoints(double,int)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"toBasisPoints(double, int, boolean)","u":"toBasisPoints(double,int,boolean)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"toBasisPoints(int)"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"toBasisPoints(int)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toBasisPoints(int)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toBasisPoints(int)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"toBasisPoints(int, boolean)","u":"toBasisPoints(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"toBasisPoints(int, boolean)","u":"toBasisPoints(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toBasisPoints(int, boolean)","u":"toBasisPoints(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toBasisPoints(int, boolean)","u":"toBasisPoints(int,boolean)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toBigDecimalStatisticalSummary(Iterable<BigDecimal>)","u":"toBigDecimalStatisticalSummary(java.lang.Iterable)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toBigDecimalStatisticalSummary(Iterator<BigDecimal>)","u":"toBigDecimalStatisticalSummary(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"toBiMap()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toBuyQuantity()"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"toClosedDoubleRange(ClosedRange<P>)","u":"toClosedDoubleRange(com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"toClosedDoubleRangeFromImpreciseValue(ClosedRange<P>)","u":"toClosedDoubleRangeFromImpreciseValue(com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"toContinuouslyCompoundedAnnualizedReturn()"},{"p":"com.rb.biz.guice","c":"RBClock","l":"today()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"toDeviations()"},{"p":"com.rb.biz.types","c":"Money","l":"toDollarsWithCommas()"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toDollarsWithCommas()"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toDollarsWithoutCommas(int, int)","u":"toDollarsWithoutCommas(int,int)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"toDoubleRange(Range<T>)","u":"toDoubleRange(com.google.common.collect.Range)"},{"p":"com.rb.biz.types","c":"OnesBasedReturn","l":"toGain()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"toIidMap()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toIidMap(Function<InstrumentId, V>)","u":"toIidMap(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toIidMapWithFilteredKeys(Function<InstrumentId, Optional<V>>)","u":"toIidMapWithFilteredKeys(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"toIidSet()"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"toIidSetIfUnique(Iterator<InstrumentId>, int)","u":"toIidSetIfUnique(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"toIidSetIfUnique(List<InstrumentId>)","u":"toIidSetIfUnique(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toIidSortedStream()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toIidSortedTransformedEntriesStream(BiFunction<InstrumentId, V, V2>)","u":"toIidSortedTransformedEntriesStream(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toIidSortedTransformedValuesStream(Function<V, V2>)","u":"toIidSortedTransformedValuesStream(java.util.function.Function)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"toIndexableMatrix(ArrayIndexMapping<R>, ArrayIndexMapping<C>)","u":"toIndexableMatrix(com.rb.nonbiz.collections.ArrayIndexMapping,com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"toIndexableMatrixWithTrivialColumnMapping(ArrayIndexMapping<R>)","u":"toIndexableMatrixWithTrivialColumnMapping(com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"toIndexableMatrixWithTrivialRowMapping(ArrayIndexMapping<C>)","u":"toIndexableMatrixWithTrivialRowMapping(com.rb.nonbiz.collections.ArrayIndexMapping)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toInstrumentIdPartition()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toIntStatisticalSummary(Iterable<Integer>)","u":"toIntStatisticalSummary(java.lang.Iterable)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toIntStatisticalSummary(Iterator<Integer>)","u":"toIntStatisticalSummary(java.util.Iterator)"},{"p":"com.rb.nonbiz.jsonapi","c":"CoordinatesJsonApiConverter","l":"toJsonArray(Coordinates)","u":"toJsonArray(com.rb.nonbiz.collections.Coordinates)"},{"p":"com.rb.nonbiz.jsonapi","c":"FlatSignedLinearCombinationJsonApiConverter","l":"toJsonArray(FlatSignedLinearCombination<T>, Function<T, JsonElement>)","u":"toJsonArray(com.rb.nonbiz.collections.FlatSignedLinearCombination,java.util.function.Function)"},{"p":"com.rb.nonbiz.json","c":"RBJsonArrays","l":"toJsonArrayIfNotAllZeros(List<T>)","u":"toJsonArrayIfNotAllZeros(java.util.List)"},{"p":"com.rb.nonbiz.jsonapi","c":"ArithmeticProgressionJsonApiConverter","l":"toJsonObject(ArithmeticProgression<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.math.sequence.ArithmeticProgression,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ClosedUnitFractionRangesJsonApiConverter","l":"toJsonObject(ClosedUnitFractionRanges<C>, Function<C, String>)","u":"toJsonObject(com.rb.nonbiz.collections.ClosedUnitFractionRanges,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ConstantSequenceJsonApiConverter","l":"toJsonObject(ConstantSequence<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.math.sequence.ConstantSequence,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"FileByDateStringFormatJsonApiConverter","l":"toJsonObject(FileByDateStringFormat<T>)","u":"toJsonObject(com.rb.nonbiz.io.FileByDateStringFormat)"},{"p":"com.rb.nonbiz.jsonapi","c":"GeometricProgressionJsonApiConverter","l":"toJsonObject(GeometricProgression<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.math.sequence.GeometricProgression,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"HardAndSoftRangeJsonApiConverter","l":"toJsonObject(HardAndSoftRange<T>, Function<T, JsonPrimitive>)","u":"toJsonObject(com.rb.nonbiz.types.HardAndSoftRange,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueIidMapJsonConverter","l":"toJsonObject(IidMap<V>, JsonTickerMap)","u":"toJsonObject(com.rb.nonbiz.collections.IidMap,com.rb.biz.jsonapi.JsonTickerMap)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableDoubleIndexableArray2DJsonApiConverter","l":"toJsonObject(ImmutableDoubleIndexableArray2D<R, C>, Function<R, String>, Function<C, String>)","u":"toJsonObject(com.rb.nonbiz.collections.ImmutableDoubleIndexableArray2D,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"ImmutableIndexableArray1DJsonApiConverter","l":"toJsonObject(ImmutableIndexableArray1D<K, V>, Function<K, JsonElement>, Function<V, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.collections.ImmutableIndexableArray1D,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"InstrumentTypeMapJsonApiConverter","l":"toJsonObject(InstrumentTypeMap<T>, Predicate<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.biz.types.asset.InstrumentTypeMap,java.util.function.Predicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"MoneyFractionJsonApiConverter","l":"toJsonObject(MoneyFraction)","u":"toJsonObject(com.rb.nonbiz.types.MoneyFraction)"},{"p":"com.rb.nonbiz.jsonapi","c":"MultiDimensionalArrayJsonApiConverter","l":"toJsonObject(MultiDimensionalArray<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.collections.MultiDimensionalArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"RangeJsonApiConverter","l":"toJsonObject(Range<C>, Function<C, JsonPrimitive>)","u":"toJsonObject(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"RBCategoryMapJsonApiConverter","l":"toJsonObject(RBCategoryMap<K, V>, Function<K, String>, Function<V, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.collections.RBCategoryMap,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"PreciseValueRBMapJsonConverter","l":"toJsonObject(RBMap<K, V>, Function<K, String>)","u":"toJsonObject(com.rb.nonbiz.collections.RBMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"SimpleSequenceJsonApiConverter","l":"toJsonObject(SimpleSequence<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.math.sequence.SimpleSequence,java.util.function.Function)"},{"p":"com.rb.nonbiz.jsonapi","c":"StatisticalSummaryJsonApiConverter","l":"toJsonObject(StatisticalSummary)","u":"toJsonObject(org.apache.commons.math3.stat.descriptive.StatisticalSummary)"},{"p":"com.rb.nonbiz.jsonapi","c":"WeightedBySignedFractionJsonApiConverter","l":"toJsonObject(WeightedBySignedFraction<T>, Function<T, JsonElement>)","u":"toJsonObject(com.rb.nonbiz.types.WeightedBySignedFraction,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toListOfOptionalDoubles(List<Double>)","u":"toListOfOptionalDoubles(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toListOfOptionals(List<T>)","u":"toListOfOptionals(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"toLongIterator(Iterator<T>)","u":"toLongIterator(java.util.Iterator)"},{"p":"com.rb.biz.types","c":"Money","l":"toMillions()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"toMinimalJson(JsonElement)","u":"toMinimalJson(com.google.gson.JsonElement)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toMoney()"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toMoneyWithFloorOfZero()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"toMultilineString()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"toMultilineString()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"toMultilineString()"},{"p":"com.rb.nonbiz.text","c":"PrintsMultilineString","l":"toMultilineString()"},{"p":"com.rb.nonbiz.text","c":"PrintsInstrumentsMultilineString","l":"toMultilineString(InstrumentMaster, LocalDate)","u":"toMultilineString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"toMutableHasLongSetIfUnique(Iterator<T>, int)","u":"toMutableHasLongSetIfUnique(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"toMutableHasLongSetIfUnique(List<T>)","u":"toMutableHasLongSetIfUnique(java.util.List)"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"toNonAnnualized(double)"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"toNonAnnualized(double)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toNonNegativeQuantity()"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"toNonSpecializedOptional(OptionalDouble)","u":"toNonSpecializedOptional(java.util.OptionalDouble)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"toNonSpecializedOptional(OptionalInt)","u":"toNonSpecializedOptional(java.util.OptionalInt)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"toNonSpecializedOptional(OptionalLong)","u":"toNonSpecializedOptional(java.util.OptionalLong)"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"toNonZeroDeviationsOrThrow()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toPartitionOfUnsigned()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toPercent(int)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toPercentString()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toPercentString()"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"toPercentString(int)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toPercentString(int)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toPercentString(int)"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"toPercentString(int, boolean)","u":"toPercentString(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toPercentString(int, boolean)","u":"toPercentString(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toPercentString(int, boolean)","u":"toPercentString(int,boolean)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toPercentString(int, int)","u":"toPercentString(int,int)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toPercentString(int, int, boolean)","u":"toPercentString(int,int,boolean)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toPositiveQuantity()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"toPrettyJson(JsonElement)","u":"toPrettyJson(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"toPrettyJson(String)","u":"toPrettyJson(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"toRangeWithoutTrivialEndpoints(ClosedRange<P>, ClosedRange<P>)","u":"toRangeWithoutTrivialEndpoints(com.rb.nonbiz.collections.ClosedRange,com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toRBMap()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toRBMap(Function<InstrumentId, V>)","u":"toRBMap(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"toRBMap(Function<T, V>)","u":"toRBMap(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"toRBMapWithFilteredKeys(Function<T, Optional<V>>)","u":"toRBMapWithFilteredKeys(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"toRBMapWithTransformedKeys(Function<T, K2>, Function<T, V>)","u":"toRBMapWithTransformedKeys(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"toRBMatrix()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"toRBMatrix()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"toRBSet()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"toRBSet(BiFunction<K, V, V1>)","u":"toRBSet(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"toRBSetIfUnique(Iterator<T>)","u":"toRBSetIfUnique(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"toRBSetIfUnique(List<T>)","u":"toRBSetIfUnique(java.util.List)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummaryUtilities","l":"toRBStatisticalSummary(DoubleFunction<V>, V, V...)","u":"toRBStatisticalSummary(java.util.function.DoubleFunction,V,V...)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummaryUtilities","l":"toRBStatisticalSummary(Iterator<V>, DoubleFunction<V>)","u":"toRBStatisticalSummary(java.util.Iterator,java.util.function.DoubleFunction)"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toSellQuantity()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toSignedFraction()"},{"p":"com.rb.biz.types","c":"Money","l":"toSignedMoney()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toSignedPartition()"},{"p":"com.rb.biz.types.trading","c":"PositiveQuantity","l":"toSignedQuantity()"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"toSimpleString()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toSimpleString(InstrumentMaster, LocalDate)","u":"toSimpleString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"toSortedLinkedHashMap(RBMap<K, V>, Comparator<K>)","u":"toSortedLinkedHashMap(com.rb.nonbiz.collections.RBMap,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"toSortedLinkedHashMapWithTransformedKeys(RBMap<K1, V>, Comparator<K1>, Function<K1, K2>)","u":"toSortedLinkedHashMapWithTransformedKeys(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"LinkedHashMaps","l":"toSortedLinkedHashMapWithTransformedKeysAndValues(RBMap<K1, V1>, Comparator<K1>, Function<K1, K2>, Function<V1, V2>)","u":"toSortedLinkedHashMapWithTransformedKeysAndValues(com.rb.nonbiz.collections.RBMap,java.util.Comparator,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"toSortedList()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"toSortedList()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toSortedTransformedEntriesStream(BiFunction<InstrumentId, V, V2>, BiFunction<InstrumentId, V, V3>, Comparator<V3>)","u":"toSortedTransformedEntriesStream(java.util.function.BiFunction,java.util.function.BiFunction,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toSortedTransformedEntriesStream(BiFunction<InstrumentId, V, V2>, Comparator<V>)","u":"toSortedTransformedEntriesStream(java.util.function.BiFunction,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toSpecializedOptionalDouble(Optional<Double>)","u":"toSpecializedOptionalDouble(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toSpecializedOptionalInt(Optional<Integer>)","u":"toSpecializedOptionalInt(java.util.Optional)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummary(double, double...)","u":"toStatisticalSummary(double,double...)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummary(Iterable<Double>)","u":"toStatisticalSummary(java.lang.Iterable)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummary(Iterator<Double>)","u":"toStatisticalSummary(java.util.Iterator)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummary(P, P...)","u":"toStatisticalSummary(P,P...)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummaryFromImpreciseValues(Iterator<T>)","u":"toStatisticalSummaryFromImpreciseValues(java.util.Iterator)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStats","l":"toStatisticalSummaryFromPreciseValues(Iterator<T>)","u":"toStatisticalSummaryFromPreciseValues(java.util.Iterator)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseExistingValueAndIgnoreOverride","l":"toString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.AlwaysUseOverrideAndIgnoreExistingValue","l":"toString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.OnlyUseOverrideToFurtherReduceExistingValue","l":"toString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseExistingValueWhenOverrideMissing","l":"toString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseFixedValueWhenOverrideMissing","l":"toString()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"toString()"},{"p":"com.rb.biz.investing.quality","c":"AnnuallyCompoundedAnnualizedReturn","l":"toString()"},{"p":"com.rb.biz.investing.quality","c":"ContinuouslyCompoundedAnnualizedReturn","l":"toString()"},{"p":"com.rb.biz.jsonapi","c":"JsonTicker","l":"toString()"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"toString()"},{"p":"com.rb.biz.types","c":"Money","l":"toString()"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toString()"},{"p":"com.rb.biz.types","c":"Symbol","l":"toString()"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"toString()"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"toString()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType","l":"toString()"},{"p":"com.rb.biz.types.asset","c":"InstrumentTypeMap","l":"toString()"},{"p":"com.rb.biz.types.trading","c":"RoundingScale","l":"toString()"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"CaseInsensitiveStringFilter","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ClosedSignedFractionRanges","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionHardAndSoftRanges","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionRanges","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousDiscreteRangeMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Coordinates","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Counter","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"FlatLinearCombination","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"FlatSignedLinearCombination","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"HasLongSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidCounter","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIntegerIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"IndexInOrderedCollection","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArray","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableDoubleIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableHasLongSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableBitSet2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableIntegerIndexableArray2D","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableMultiDimensionalArray","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeCollection","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"NonContiguousRangeMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Pair","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"PairOfSameType","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"PartialComparisonResult","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"PartitionGradient","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"PartitionPairDifferenceStats","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBDoubleKeyedMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBIncreasingSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBListWithSpecialValue","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithDefault","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBMapWithOptionalDefault","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBSortedSet","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBSupplier","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"SimpleArrayIndexMapping","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"toString()"},{"p":"com.rb.nonbiz.functional","c":"AdditionSubtractionAndIdentityElement","l":"toString()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunction","l":"toString()"},{"p":"com.rb.nonbiz.functional","c":"RBNumericFunctionThatHandlesMissingValues","l":"toString()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues","l":"toString()"},{"p":"com.rb.nonbiz.functional","c":"UnitFractionFunction","l":"toString()"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"toString()"},{"p":"com.rb.nonbiz.io","c":"Filename","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiEnumDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonObjectPath","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonPointList","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonPropertySpecificDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonSparseTimeSeries","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"toString()"},{"p":"com.rb.nonbiz.json","c":"RBJsonDoubleArray","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiPair","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiSubclassInfo","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonArrayApiPair","l":"toString()"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonPrimitiveApiPair","l":"toString()"},{"p":"com.rb.nonbiz.math","c":"Angle","l":"toString()"},{"p":"com.rb.nonbiz.math.eigen","c":"DecreasingPositiveDoubles","l":"toString()"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"toString()"},{"p":"com.rb.nonbiz.math.sequence","c":"ConstantSequence","l":"toString()"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"toString()"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"toString()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryImpl","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"MatrixColumnIndex","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"MatrixRowIndex","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableSquareMatrix","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBEigenvalueDecomposition","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix.RBSingularValueDecomposition","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBSquareMatrix","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"toString()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceOrthonormalBasis","l":"toString()"},{"p":"com.rb.nonbiz.reflection","c":"ClassWithDepth","l":"toString()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"toString()"},{"p":"com.rb.nonbiz.reflection","c":"UniqueClassesWithDepth","l":"toString()"},{"p":"com.rb.nonbiz.search","c":"BinarySearchResult","l":"toString()"},{"p":"com.rb.nonbiz.search","c":"Filter","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"HumanReadableDocumentation","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"ItemWithId","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"ItemWithLabel","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"PathComponent","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"SimpleHumanReadableLabel","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"toString()"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem","l":"toString()"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnExtractor","l":"toString()"},{"p":"com.rb.nonbiz.text.csv","c":"CsvColumnInclusionFilter","l":"toString()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsv","l":"toString()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvHeaderRow","l":"toString()"},{"p":"com.rb.nonbiz.text.csv","c":"SimpleCsvRow","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"AcceptableFrequency","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardAndSoftRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionHardToSoftRangeTighteningInstructions","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"Correlation","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"DoubleMovement","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"HardAndSoftRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"IntegerValue","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"LongCounter","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"MoneyUnitFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersMap","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"RoundedPreciseValueRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"SplitMultiplier","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"TargetWithOptionalClosedUnitFractionHardAndSoftRange","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"WeightedBy","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"WeightedBySignedFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"WeightedByUnitFraction","l":"toString()"},{"p":"com.rb.nonbiz.types","c":"WeightedList","l":"toString()"},{"p":"com.rb.nonbiz.collections","c":"RBCategoryMap","l":"toString(Comparator<K>)","u":"toString(java.util.Comparator)"},{"p":"com.rb.biz.jsonapi","c":"JsonTickerMapImpl","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"ClosedUnitFractionIidHardAndSoftRanges","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdSet","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefaultsByInstrumentType","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidSet","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"TestHasInstrumentId","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.text","c":"PrintsInstruments","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.types","c":"PositiveMultipliersIidMap","l":"toString(InstrumentMaster, LocalDate)","u":"toString(com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.biz.types","c":"Money","l":"toString(int)"},{"p":"com.rb.biz.types","c":"Price","l":"toString(int)"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"toString(int)"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toString(int)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"toString(int)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"toString(int)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"toString(int)"},{"p":"com.rb.biz.types","c":"Money","l":"toString(int, boolean)","u":"toString(int,boolean)"},{"p":"com.rb.nonbiz.collections","c":"NonZeroDeviations","l":"toString(int, Function<K, ? extends Object>)","u":"toString(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.types","c":"ImpreciseValue","l":"toString(int, int)","u":"toString(int,int)"},{"p":"com.rb.nonbiz.types","c":"PreciseValue","l":"toString(int, int)","u":"toString(int,int)"},{"p":"com.rb.biz.types","c":"Money","l":"toString(int, int, boolean)","u":"toString(int,int,boolean)"},{"p":"com.rb.nonbiz.collections","c":"NearbyDatesMap","l":"toString(NearbyDatesMap<V>, InstrumentMaster, LocalDate)","u":"toString(com.rb.nonbiz.collections.NearbyDatesMap,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.math.stats","c":"RBStatisticalSummary","l":"toString(NumberFormat)","u":"toString(java.text.NumberFormat)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toStringInDecreasingAbsMembershipOrder(int, Function<K, String>)","u":"toStringInDecreasingAbsMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toStringInDecreasingMembershipOrder(int)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInDecreasingMembershipOrder(int)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInDecreasingMembershipOrder(int, Function<InstrumentId, String>)","u":"toStringInDecreasingMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"toStringInDecreasingMembershipOrder(int, Function<K, String>)","u":"toStringInDecreasingMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toStringInDecreasingMembershipOrder(int, Function<K, String>)","u":"toStringInDecreasingMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toStringInDecreasingMembershipOrder(int, Function<K, String>)","u":"toStringInDecreasingMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"toStringInDecreasingMembershipOrder(int, Function<K, String>)","u":"toStringInDecreasingMembershipOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toStringInDecreasingMembershipOrder(int, InstrumentMaster, LocalDate)","u":"toStringInDecreasingMembershipOrder(int,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInDecreasingMembershipOrder(int, InstrumentMaster, LocalDate)","u":"toStringInDecreasingMembershipOrder(int,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"toStringInIncreasingAbsDeviation(int, Function<K, ?>)","u":"toStringInIncreasingAbsDeviation(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toStringInIncreasingInstrumentIdOrder(int)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInIncreasingInstrumentIdOrder(int)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInIncreasingInstrumentIdOrder(int, Function<InstrumentId, String>)","u":"toStringInIncreasingInstrumentIdOrder(int,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdPartition","l":"toStringInIncreasingInstrumentIdOrder(int, InstrumentMaster, LocalDate)","u":"toStringInIncreasingInstrumentIdOrder(int,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"IidPartition","l":"toStringInIncreasingInstrumentIdOrder(int, InstrumentMaster, LocalDate)","u":"toStringInIncreasingInstrumentIdOrder(int,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"toStringInIncreasingKeyOrder(int, Comparator<K>, Function<K, String>)","u":"toStringInIncreasingKeyOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toStringInIncreasingKeyOrder(int, Comparator<K>, Function<K, String>)","u":"toStringInIncreasingKeyOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toStringInIncreasingKeyOrder(int, Comparator<K>, Function<K, String>)","u":"toStringInIncreasingKeyOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"toStringInIncreasingKeyOrder(int, Comparator<K>, Function<K, String>)","u":"toStringInIncreasingKeyOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"toStringInJavaGenericNotation()"},{"p":"com.rb.nonbiz.collections","c":"Deviations","l":"toStringInKeyOrder(int, Function<K, ?>, Comparator<K>)","u":"toStringInKeyOrder(int,java.util.function.Function,java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"SignedPartition","l":"toStringInOrder(int, Comparator<Map.Entry<K, SignedFraction>>, Function<K, String>)","u":"toStringInOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification","l":"toStringInOrder(int, Comparator<Map.Entry<K, UnitFraction>>, Function<K, String>)","u":"toStringInOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"Partition","l":"toStringInOrder(int, Comparator<Map.Entry<K, UnitFraction>>, Function<K, String>)","u":"toStringInOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"SimplePartitionModification","l":"toStringInOrder(int, Comparator<Map.Entry<K, UnitFraction>>, Function<K, String>)","u":"toStringInOrder(int,java.util.Comparator,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toStringKeyedRBMap()"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toStringOrEmpty(Optional<T>)","u":"toStringOrEmpty(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"toStringOrEmpty(Optional<T>, InstrumentMaster, LocalDate)","u":"toStringOrEmpty(java.util.Optional,com.rb.biz.marketdata.instrumentmaster.InstrumentMaster,java.time.LocalDate)"},{"p":"com.rb.nonbiz.types","c":"MoneySignedFraction","l":"toStringPercent(int, boolean)","u":"toStringPercent(int,boolean)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"toStringWithoutTags()"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toTransformedEntriesStream(BiFunction<InstrumentId, V, V2>)","u":"toTransformedEntriesStream(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"toTransformedStreamInXYZOrder(QuadriFunction<X, Y, Z, V, T>)","u":"toTransformedStreamInXYZOrder(com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray3D","l":"toTransformedStreamInXYZOrder(QuadriFunction<X, Y, Z, V, T>)","u":"toTransformedStreamInXYZOrder(com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"toTransformedValuesStream(Function<V, V2>)","u":"toTransformedValuesStream(java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"Strings","l":"toTrimmedStandaloneSentence(String)","u":"toTrimmedStandaloneSentence(java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"toUniqueIdOfDifferentType(UniqueId<T1>)","u":"toUniqueIdOfDifferentType(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.util","c":"JsonRoundTripStringConvertibleEnum","l":"toUniqueStableJsonString()"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"toUniqueStableString()"},{"p":"com.rb.nonbiz.util","c":"JsonRoundTripStringConvertibleEnum","l":"toUniqueStableString()"},{"p":"com.rb.nonbiz.types","c":"SignedFraction","l":"toUnitFraction()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"toUnmodifiableDoubleIndexedArray2D()"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleIndexableArray2D","l":"toUnmodifiableDoubleIndexedArray2DIgnoringEmpties()"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"trace(String, Object...)","u":"trace(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"trace(Supplier<String>)","u":"trace(java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"transform(Function<T, T1>)","u":"transform(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableDoubleIndexableArray2D","l":"transform(TriFunction<R, C, Double, V>)","u":"transform(com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"transformAllowingDuplicates(Function<T, T1>)","u":"transformAllowingDuplicates(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBSet","l":"transformAllowingDuplicates(Function<T, T1>, BiPredicate<T1, T1>, Function<T1, Integer>)","u":"transformAllowingDuplicates(java.util.function.Function,java.util.function.BiPredicate,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformAndFilterValuesCopy(Function<V, V1>, Predicate<V1>)","u":"transformAndFilterValuesCopy(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformAndFilterValuesCopy(Function<V, V1>, Predicate<V1>)","u":"transformAndFilterValuesCopy(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformAtLeastOnePresentOptionalOrThrow(Optional<T>, Optional<T>, BinaryOperator<T>)","u":"transformAtLeastOnePresentOptionalOrThrow(java.util.Optional,java.util.Optional,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformAtLeastOnePresentOptionalOrThrow(Optional<T>, Optional<T>, BinaryOperator<T>, Supplier<String>)","u":"transformAtLeastOnePresentOptionalOrThrow(java.util.Optional,java.util.Optional,java.util.function.BinaryOperator,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"transformClosedRange(ClosedRange<A>, Function<A, B>)","u":"transformClosedRange(com.rb.nonbiz.collections.ClosedRange,java.util.function.Function)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"transformCopy(TriFunction<MatrixRowIndex, MatrixColumnIndex, Double, Double>)","u":"transformCopy(com.rb.nonbiz.functional.TriFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMapWithDefault","l":"transformDefaultAndOverrides(Function<V, V2>)","u":"transformDefaultAndOverrides(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"transformedStream(BiFunction<T, V, T2>)","u":"transformedStream(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"transformEntries(QuadriFunction<X, Y, Z, V, V1>)","u":"transformEntries(com.rb.nonbiz.functional.QuadriFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformEntriesAndFilterValuesCopy(BiFunction<InstrumentId, V, V2>, Predicate<V2>)","u":"transformEntriesAndFilterValuesCopy(java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformEntriesAndFilterValuesCopy(BiFunction<K, V, V1>, Predicate<V1>)","u":"transformEntriesAndFilterValuesCopy(java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformEntriesCopy(BiFunction<InstrumentId, V, V2>)","u":"transformEntriesCopy(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformEntriesCopy(BiFunction<K, V, V1>)","u":"transformEntriesCopy(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"transformEntriesCopy(BiFunction<T, V, V2>)","u":"transformEntriesCopy(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformEntriesToOptionalAndKeepIfPresentCopy(BiFunction<InstrumentId, V, Optional<V2>>)","u":"transformEntriesToOptionalAndKeepIfPresentCopy(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformEntriesToOptionalAndKeepIfPresentCopy(BiFunction<K, V, Optional<V1>>)","u":"transformEntriesToOptionalAndKeepIfPresentCopy(java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"transformFromNullable(V1, Function<V1, V2>)","u":"transformFromNullable(V1,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"transformIfNonNull(Function<V1, V2>)","u":"transformIfNonNull(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformKeysAndValuesCopy(Function<InstrumentId, K1>, Function<V, V1>)","u":"transformKeysAndValuesCopy(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformKeysAndValuesCopy(Function<K, K1>, BiFunction<K1, V, V1>)","u":"transformKeysAndValuesCopy(java.util.function.Function,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformKeysAndValuesCopy(Function<K, K1>, Function<V, V1>)","u":"transformKeysAndValuesCopy(java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformKeysCopy(Function<K, K1>)","u":"transformKeysCopy(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"MultiDimensionalArrays","l":"transformMultiDimensionalArray(MultiDimensionalArray<X>, Function<X, Y>)","u":"transformMultiDimensionalArray(com.rb.nonbiz.collections.MultiDimensionalArray,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptional(Optional<A>, Function<A, B>)","u":"transformOptional(java.util.Optional,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptional2(Optional<A>, Function<A, Optional<B>>)","u":"transformOptional2(java.util.Optional,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalDouble(OptionalDouble, DoubleFunction<T>)","u":"transformOptionalDouble(java.util.OptionalDouble,java.util.function.DoubleFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalImpreciseValueToDoubleOrZero(Optional<T>)","u":"transformOptionalImpreciseValueToDoubleOrZero(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalImpreciseValueToOptionalDouble(Optional<T>)","u":"transformOptionalImpreciseValueToOptionalDouble(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalInt(OptionalInt, IntFunction<T>)","u":"transformOptionalInt(java.util.OptionalInt,java.util.function.IntFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalLong(OptionalLong, LongFunction<T>)","u":"transformOptionalLong(java.util.OptionalLong,java.util.function.LongFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalPreciseValueToDoubleOrZero(Optional<T>)","u":"transformOptionalPreciseValueToDoubleOrZero(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalPreciseValueToOptionalDouble(Optional<T>)","u":"transformOptionalPreciseValueToOptionalDouble(java.util.Optional)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformOptionalWithPredicate(Optional<T>, Predicate<T>)","u":"transformOptionalWithPredicate(java.util.Optional,java.util.function.Predicate)"},{"p":"com.rb.nonbiz.search","c":"Filter","l":"transformOrDefault(Function<T, T1>, T1)","u":"transformOrDefault(java.util.function.Function,T1)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionalDoubles(OptionalDouble, OptionalDouble, BiFunction<Double, Double, Double>)","u":"transformPairOfOptionalDoubles(java.util.OptionalDouble,java.util.OptionalDouble,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionalDoubles(OptionalDouble, OptionalDouble, BiFunction<Double, Double, T>, DoubleFunction<T>, DoubleFunction<T>, Supplier<T>)","u":"transformPairOfOptionalDoubles(java.util.OptionalDouble,java.util.OptionalDouble,java.util.function.BiFunction,java.util.function.DoubleFunction,java.util.function.DoubleFunction,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionalInts(OptionalInt, OptionalInt, BiFunction<Integer, Integer, T>, IntFunction<T>, IntFunction<T>, Supplier<T>)","u":"transformPairOfOptionalInts(java.util.OptionalInt,java.util.OptionalInt,java.util.function.BiFunction,java.util.function.IntFunction,java.util.function.IntFunction,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionalInts(OptionalInt, OptionalInt, BinaryOperator<Integer>)","u":"transformPairOfOptionalInts(java.util.OptionalInt,java.util.OptionalInt,java.util.function.BinaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionals(Optional<A>, Optional<B>, BiFunction<A, B, C>)","u":"transformPairOfOptionals(java.util.Optional,java.util.Optional,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionals(Optional<A>, Optional<B>, BiFunction<A, B, C>, Function<A, C>, Function<B, C>)","u":"transformPairOfOptionals(java.util.Optional,java.util.Optional,java.util.function.BiFunction,java.util.function.Function,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionals(Optional<A>, Optional<B>, BiFunction<A, B, C>, Function<A, C>, Function<B, C>, Supplier<C>)","u":"transformPairOfOptionals(java.util.Optional,java.util.Optional,java.util.function.BiFunction,java.util.function.Function,java.util.function.Function,java.util.function.Supplier)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionalTransformers","l":"transformPairOfOptionalsAssumingBothOrNeitherAreEmpty(Optional<A>, Optional<B>, BiFunction<A, B, C>)","u":"transformPairOfOptionalsAssumingBothOrNeitherAreEmpty(java.util.Optional,java.util.Optional,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"transformRange(Range<A>, Function<A, B>)","u":"transformRange(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"transformRBEnumMap(RBEnumMap<E, V1>, BiFunction<E, V1, V2>)","u":"transformRBEnumMap(com.rb.nonbiz.collections.RBEnumMap,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.util","c":"RBEnumMaps","l":"transformRBEnumMap(RBEnumMap<E, V1>, Function<V1, V2>)","u":"transformRBEnumMap(com.rb.nonbiz.collections.RBEnumMap,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"transformToBigDecimalClosedRange(ClosedRange<P>)","u":"transformToBigDecimalClosedRange(com.rb.nonbiz.collections.ClosedRange)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"transformToBigDecimalIterator(Iterator<T>)","u":"transformToBigDecimalIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"transformToBigDecimalRange(Range<P>)","u":"transformToBigDecimalRange(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.collections","c":"RBIterators","l":"transformToDoubleIterator(Iterator<T>)","u":"transformToDoubleIterator(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBLists","l":"transformUsingBothIndexAndValue(List<T1>, BiFunction<Integer, T1, T2>)","u":"transformUsingBothIndexAndValue(java.util.List,java.util.function.BiFunction)"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray3D","l":"transformValues(Function<V, V1>)","u":"transformValues(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"transformValuesCopy(Function<V, V1>)","u":"transformValuesCopy(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidMap","l":"transformValuesCopy(Function<V, V2>)","u":"transformValuesCopy(java.util.function.Function)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"transformValuesCopy(Function<V, V2>)","u":"transformValuesCopy(java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"IidBiMap","l":"transformValuesCopyOrThrow(Function<V, V2>)","u":"transformValuesCopyOrThrow(java.util.function.Function)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBIndexableMatrix","l":"transpose()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBMatrix","l":"transpose()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBMapMatchers","l":"treeMapMatcher(TreeMap<K, V>, RBMatchers.MatcherGenerator<K>, RBMatchers.MatcherGenerator<V>)","u":"treeMapMatcher(java.util.TreeMap,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"trivialLinearCombinationOfOneItem(L)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"typeSafeAlwaysTrue()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"typeSafeEqualTo(T)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBValueMatchers","l":"typeSafeSame(T)"},{"p":"com.rb.nonbiz.collections","c":"PartitionUnextender","l":"unextend(Partition<K>, K, UnitFraction)","u":"unextend(com.rb.nonbiz.collections.Partition,K,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"Pointer","l":"uninitializedPointer()"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"union(Iterator<RBSet<T>>)","u":"union(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"union(RBSet<T>, RBSet<T>)","u":"union(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"union(RBSet<T>, Set<T>)","u":"union(com.rb.nonbiz.collections.RBSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"union(RBSet<T>, T)","u":"union(com.rb.nonbiz.collections.RBSet,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"union(Set<T>, RBSet<T>)","u":"union(java.util.Set,com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"unionOfIidSets(Collection<IidSet>)","u":"unionOfIidSets(java.util.Collection)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"unionOfIidSets(IidSet, IidSet...)","u":"unionOfIidSets(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet...)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"unionOfIidSets(IidSet, Set<InstrumentId>)","u":"unionOfIidSets(com.rb.nonbiz.collections.IidSet,java.util.Set)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"unionOfIidSets(Iterator<IidSet>, int)","u":"unionOfIidSets(java.util.Iterator,int)"},{"p":"com.rb.nonbiz.collections","c":"IidSetOperations","l":"unionOfIidSets(Set<InstrumentId>, IidSet)","u":"unionOfIidSets(java.util.Set,com.rb.nonbiz.collections.IidSet)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"unionOfIncludedSets(Iterator<? extends HasRbSet<T>>)","u":"unionOfIncludedSets(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"unionOfPlainSets(Iterator<Set<T>>)","u":"unionOfPlainSets(java.util.Iterator)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"unionOfPlainSets(Set<T>, Set<T>, Set<T>...)","u":"unionOfPlainSets(java.util.Set,java.util.Set,java.util.Set...)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"unionOfRBSets(RBSet<T>, RBSet<T>, RBSet<T>...)","u":"unionOfRBSets(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet...)"},{"p":"com.rb.nonbiz.reflection","c":"UniqueClassesWithDepth","l":"uniqueClassesWithDepth(List<ClassWithDepth>)","u":"uniqueClassesWithDepth(java.util.List)"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"uniqueId(String)","u":"uniqueId(java.lang.String)"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem","l":"uniqueIdInsteadOfItem(UniqueId<T>)","u":"uniqueIdInsteadOfItem(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"uniqueIdJsonApiPropertyDescriptor(JsonApiPropertyDescriptor)","u":"uniqueIdJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"uniqueIdJsonApiPropertyDescriptor(JsonApiPropertyDescriptor, JsonPropertySpecificDocumentation)","u":"uniqueIdJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor,com.rb.nonbiz.json.JsonPropertySpecificDocumentation)"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"uniqueIdKeySet()"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"uniqueIdRbClass(Class<T>)","u":"uniqueIdRbClass(java.lang.Class)"},{"p":"com.rb.nonbiz.reflection","c":"RBClass","l":"uniqueIdRbClass(RBClass<T>)","u":"uniqueIdRbClass(com.rb.nonbiz.reflection.RBClass)"},{"p":"com.rb.nonbiz.collections","c":"UniqueIdToEnum","l":"UniqueIdToEnum()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.text","c":"UniqueId","l":"uniqueIdWithoutSpaces(String)","u":"uniqueIdWithoutSpaces(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"UNIT_FRACTION_0"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"UNIT_FRACTION_1"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"UNIT_FRACTION_ONE_HALF"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFraction(BigDecimal)","u":"unitFraction(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"UnitFraction(BigDecimal)","u":"%3Cinit%3E(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFraction(BigDecimal, double)","u":"unitFraction(java.math.BigDecimal,double)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"UnitFraction(BigDecimal, double)","u":"%3Cinit%3E(java.math.BigDecimal,double)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFraction(double)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFraction(long, long)","u":"unitFraction(long,long)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFraction(String)","u":"unitFraction(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unitFractionAtLeast(UnitFraction)","u":"unitFractionAtLeast(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unitFractionAtMost(UnitFraction)","u":"unitFractionAtMost(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unitFractionFixedTo(UnitFraction)","u":"unitFractionFixedTo(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unitFractionFixedToOne()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unitFractionFixedToZero()"},{"p":"com.rb.nonbiz.json","c":"RBGson","l":"unitFractionFromJsonPercentage(JsonElement)","u":"unitFractionFromJsonPercentage(com.google.gson.JsonElement)"},{"p":"com.rb.nonbiz.functional","c":"UnitFractionFunction","l":"unitFractionFunction(RBNumericFunction<UnitFraction, Y>)","u":"unitFractionFunction(com.rb.nonbiz.functional.RBNumericFunction)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFractionInBps(BigDecimal)","u":"unitFractionInBps(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFractionInBps(double)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"unitFractionInPct(double)"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"UNKNOWN_CLASS_OF_JSON_PROPERTY"},{"p":"com.rb.nonbiz.json","c":"JsonValidationInstructions","l":"UNKNOWN_DATA_CLASS_JSON_API_DESCRIPTOR"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"unorderedCollectionMatcher(Collection<T>, RBMatchers.MatcherGenerator<T>, Comparator<T>)","u":"unorderedCollectionMatcher(java.util.Collection,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,java.util.Comparator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"unorderedListMatcher(List<T>, RBMatchers.MatcherGenerator<T>, Comparator<T>)","u":"unorderedListMatcher(java.util.List,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator,java.util.Comparator)"},{"p":"com.rb.nonbiz.testmatchers","c":"RBCollectionMatchers","l":"unorderedListPointerMatcher(List<T>)","u":"unorderedListPointerMatcher(java.util.List)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"unrestrictedClosedUnitFractionRange()"},{"p":"com.rb.nonbiz.reflection","c":"AllRbTopLevelClasses","l":"unsafeTestOnlyAllRbTopLevelClasses(RBSet<Class<?>>)","u":"unsafeTestOnlyAllRbTopLevelClasses(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"UNUSED_DATE"},{"p":"com.rb.nonbiz.collections","c":"ClosedRange","l":"upperEndpoint()"},{"p":"com.rb.nonbiz.types","c":"ClosedSignedFractionRange","l":"upperEndpoint()"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"upperEndpoint()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"USE_CEILING"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"USE_DEFAULT_VALUE_INSTEAD_OF_SUPPLIED"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"USE_FLOOR"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"USE_NEAREST_OR_CEILING"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"USE_NEAREST_OR_FLOOR"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest","l":"USE_RULES"},{"p":"com.rb.nonbiz.types","c":"InterpolationPreference","l":"USE_SUPPLIED_VALUE_INSTEAD_OF_DEFAULT"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"useAutoLabel()"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"useAutoLabel()"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"useAutoLabel()"},{"p":"com.rb.nonbiz.functional","c":"GeometricCollaredRBNumericFunctionBuilder","l":"useAutoLabelWithPrefix(String)","u":"useAutoLabelWithPrefix(java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"LinearCollaredRBNumericFunctionBuilder","l":"useAutoLabelWithPrefix(String)","u":"useAutoLabelWithPrefix(java.lang.String)"},{"p":"com.rb.nonbiz.functional","c":"SimpleStepFunctionRBNumericFunctionBuilder","l":"useAutoLabelWithPrefix(String)","u":"useAutoLabelWithPrefix(java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"MatcherEpsilons","l":"useEpsilonInAllMatchers(Epsilon)","u":"useEpsilonInAllMatchers(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseExistingValueWhenOverrideMissing","l":"useExistingValueWhenOverrideMissing()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseExistingValueWhenOverrideMissing","l":"UseExistingValueWhenOverrideMissing()","u":"%3Cinit%3E()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseFixedValueWhenOverrideMissing","l":"useFixedValueWhenOverrideMissing(T)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides","l":"useGlobalOverrideOnlyIfValueMissing(V)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"useRulesForEverything()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"useRulesForTheseExcludeRest(RBSet<T>)","u":"useRulesForTheseExcludeRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions","l":"useRulesForTheseIncludeRest(RBSet<T>)","u":"useRulesForTheseIncludeRest(com.rb.nonbiz.collections.RBSet)"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"useStandardEpsilonForNetAdditionSanityCheck()"},{"p":"com.rb.nonbiz.collections","c":"DetailedPartitionModification.DetailedPartitionModificationBuilder","l":"useStandardEpsilonForRemovalSanityChecks()"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"useThisForMissingString(Y)"},{"p":"com.rb.nonbiz.functional","c":"RBStringToNumericFunctionThatHandlesMissingValues.RBStringToNumericFunctionThatHandlesMissingValuesBuilder","l":"useThisForUnknownString(Y)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"Overrides.OverridesBuilder","l":"useThisWhenNoValueAndNoOverride(V)"},{"p":"com.rb.nonbiz.json","c":"JsonValidator","l":"validate(JsonObject, JsonValidationInstructions)","u":"validate(com.google.gson.JsonObject,com.rb.nonbiz.json.JsonValidationInstructions)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"validateAgainstExtremes(Range<Double>)","u":"validateAgainstExtremes(com.google.common.collect.Range)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"valueExplained(T, T, T...)","u":"valueExplained(T,T,T...)"},{"p":"com.rb.nonbiz.testutils","c":"Asserters","l":"valueExplainedByMatcher(T, TypeSafeMatcher<T>)","u":"valueExplainedByMatcher(T,org.hamcrest.TypeSafeMatcher)"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"valueOrSnapToOne(Epsilon)","u":"valueOrSnapToOne(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.types","c":"UnitFraction","l":"valueOrSnapToZero(Epsilon)","u":"valueOrSnapToZero(com.rb.nonbiz.types.Epsilon)"},{"p":"com.rb.nonbiz.collections","c":"MutableOptionalDoubleRawArray2D","l":"values"},{"p":"com.rb.nonbiz.collections","c":"ContiguousNonDiscreteRangeCollection.LastPointInRangeTreatment","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"DoubleMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"HasLongMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBDoubleKeyedMap.BehaviorWhenTwoDoubleKeysAreClose","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBEnumMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"MutableRBMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"RBEnumMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"values()"},{"p":"com.rb.nonbiz.collections","c":"SetInclusionExclusionPredicateEvaluator.SetInclusionExclusionInstructions.BehaviorForRest","l":"values()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"values()"},{"p":"com.rb.nonbiz.math.stats","c":"StatisticalSummaryAspect","l":"values()"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"values()"},{"p":"com.rb.nonbiz.text","c":"RBMapOfHasUniqueId","l":"values()"},{"p":"com.rb.nonbiz.text","c":"RBSetOfHasUniqueId","l":"values()"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"valuesAreWithin(double, double)","u":"valuesAreWithin(double,double)"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"valuesAreWithin(T, T)","u":"valuesAreWithin(T,T)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"valuesForPairsWithKey(K)"},{"p":"com.rb.nonbiz.collections","c":"RBSymmetricUnequalPairMap","l":"valuesForPairsWithKeys(List<K>)","u":"valuesForPairsWithKeys(java.util.List)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"valuesInSortedKeyOrder(Comparator<K>)","u":"valuesInSortedKeyOrder(java.util.Comparator)"},{"p":"com.rb.nonbiz.collections","c":"HasInstrumentIdMap","l":"valuesStream()"},{"p":"com.rb.nonbiz.collections","c":"ImmutableIndexableArray1D","l":"valuesStream()"},{"p":"com.rb.nonbiz.collections","c":"MutableIndexableArray1D","l":"valuesStream()"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceBasis","l":"vectorSpaceBasis(RBSquareMatrix)","u":"vectorSpaceBasis(com.rb.nonbiz.math.vectorspaces.RBSquareMatrix)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"VectorSpaceOrthonormalBasis","l":"vectorSpaceOrthonormalBasis(VectorSpaceBasis)","u":"vectorSpaceOrthonormalBasis(com.rb.nonbiz.math.vectorspaces.VectorSpaceBasis)"},{"p":"com.rb.nonbiz.functional","c":"AllowsMissingValues","l":"visit(AllowsMissingValues.Visitor<T, V>)","u":"visit(com.rb.nonbiz.functional.AllowsMissingValues.Visitor)"},{"p":"com.rb.biz.types.asset","c":"AssetId","l":"visit(AssetId.AssetIdVisitor<T>)","u":"visit(com.rb.biz.types.asset.AssetId.AssetIdVisitor)"},{"p":"com.rb.biz.types.asset","c":"CashId","l":"visit(AssetId.AssetIdVisitor<T>)","u":"visit(com.rb.biz.types.asset.AssetId.AssetIdVisitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentId","l":"visit(AssetId.AssetIdVisitor<T>)","u":"visit(com.rb.biz.types.asset.AssetId.AssetIdVisitor)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride","l":"visit(BehaviorWithValueButNoOverride.Visitor<T>)","u":"visit(com.rb.biz.investing.modeling.selection.overrides.BehaviorWithValueButNoOverride.Visitor)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseExistingValueWhenOverrideMissing","l":"visit(BehaviorWithValueButNoOverride.Visitor<T>)","u":"visit(com.rb.biz.investing.modeling.selection.overrides.BehaviorWithValueButNoOverride.Visitor)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.UseFixedValueWhenOverrideMissing","l":"visit(BehaviorWithValueButNoOverride.Visitor<T>)","u":"visit(com.rb.biz.investing.modeling.selection.overrides.BehaviorWithValueButNoOverride.Visitor)"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"visit(Either.Visitor<L, R, T>)","u":"visit(com.rb.nonbiz.collections.Either.Visitor)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth","l":"visit(EitherOrBoth.EitherOrBothVisitor<L, R, T>)","u":"visit(com.rb.nonbiz.collections.EitherOrBoth.EitherOrBothVisitor)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBothOfSameType","l":"visit(EitherOrBoth.EitherOrBothVisitor<T, T, T2>)","u":"visit(com.rb.nonbiz.collections.EitherOrBoth.EitherOrBothVisitor)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither","l":"visit(EitherOrNeither.EitherOrNeitherVisitor<L, R, T>)","u":"visit(com.rb.nonbiz.collections.EitherOrNeither.EitherOrNeitherVisitor)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeitherOfSameType","l":"visit(EitherOrNeither.EitherOrNeitherVisitor<T, T, T2>)","u":"visit(com.rb.nonbiz.collections.EitherOrNeither.EitherOrNeitherVisitor)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat","l":"visit(FileByDateStringFormat.Visitor<T2>)","u":"visit(com.rb.nonbiz.io.FileByDateStringFormat.Visitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType","l":"visit(InstrumentType.Visitor<T>)","u":"visit(com.rb.biz.types.asset.InstrumentType.Visitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.EtfInstrumentType","l":"visit(InstrumentType.Visitor<T>)","u":"visit(com.rb.biz.types.asset.InstrumentType.Visitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.MutualFundInstrumentType","l":"visit(InstrumentType.Visitor<T>)","u":"visit(com.rb.biz.types.asset.InstrumentType.Visitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StockInstrumentType","l":"visit(InstrumentType.Visitor<T>)","u":"visit(com.rb.biz.types.asset.InstrumentType.Visitor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.StructuredProductInstrumentType","l":"visit(InstrumentType.Visitor<T>)","u":"visit(com.rb.biz.types.asset.InstrumentType.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiArrayDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithNonFixedPropertiesDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiClassWithSubclassesDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiEnumDocumentation","l":"visit(JsonApiDocumentation.Visitor<T>)","u":"visit(com.rb.nonbiz.jsonapi.JsonApiDocumentation.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor","l":"visit(JsonApiPropertyDescriptor.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonApiPropertyDescriptor.Visitor)"},{"p":"com.rb.nonbiz.json","c":"JsonElementType","l":"visit(JsonElementType.Visitor<T>)","u":"visit(com.rb.nonbiz.json.JsonElementType.Visitor)"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination","l":"visit(LinearCombination.NodeOrLeafVisitor<T, N, L>)","u":"visit(com.rb.nonbiz.collections.LinearCombination.NodeOrLeafVisitor)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3","l":"visit(OneOf3.Visitor<T1, T2, T3, T>)","u":"visit(com.rb.nonbiz.collections.OneOf3.Visitor)"},{"p":"com.rb.nonbiz.math.sequence","c":"ArithmeticProgression","l":"visit(SimpleSequence.Visitor<T, T2>)","u":"visit(com.rb.nonbiz.math.sequence.SimpleSequence.Visitor)"},{"p":"com.rb.nonbiz.math.sequence","c":"ConstantSequence","l":"visit(SimpleSequence.Visitor<T, T2>)","u":"visit(com.rb.nonbiz.math.sequence.SimpleSequence.Visitor)"},{"p":"com.rb.nonbiz.math.sequence","c":"GeometricProgression","l":"visit(SimpleSequence.Visitor<T, T2>)","u":"visit(com.rb.nonbiz.math.sequence.SimpleSequence.Visitor)"},{"p":"com.rb.nonbiz.math.sequence","c":"SimpleSequence","l":"visit(SimpleSequence.Visitor<T, T2>)","u":"visit(com.rb.nonbiz.math.sequence.SimpleSequence.Visitor)"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem","l":"visit(UniqueIdOrItem.Visitor<T, V>)","u":"visit(com.rb.nonbiz.text.UniqueIdOrItem.Visitor)"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem.Visitor","l":"visitActualItem(T)"},{"p":"com.rb.nonbiz.types","c":"PreciseValues.BigDecimalsEpsilonComparisonVisitor","l":"visitAlmostEqual()"},{"p":"com.rb.nonbiz.types","c":"RBDoubles.EpsilonComparisonVisitor","l":"visitAlmostEqual()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.Visitor","l":"visitAlwaysUseExistingValueAndIgnoreOverride()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.Visitor","l":"visitAlwaysUseOverrideAndIgnoreExistingValue()"},{"p":"com.rb.nonbiz.math.sequence","c":"SimpleSequence.Visitor","l":"visitArithmeticProgression(ArithmeticProgression<T>)","u":"visitArithmeticProgression(com.rb.nonbiz.math.sequence.ArithmeticProgression)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth.EitherOrBothVisitor","l":"visitBoth(L, R)","u":"visitBoth(L,R)"},{"p":"com.rb.nonbiz.collections","c":"Either","l":"visitBothAssumingSameSide(Either<L, R>, Either<L, R>, Either.BothVisitor<L, R, T>)","u":"visitBothAssumingSameSide(com.rb.nonbiz.collections.Either,com.rb.nonbiz.collections.Either,com.rb.nonbiz.collections.Either.BothVisitor)"},{"p":"com.rb.biz.types.asset","c":"AssetId.AssetIdVisitor","l":"visitCash(CashId)","u":"visitCash(com.rb.biz.types.asset.CashId)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitCollectionJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor)","u":"visitCollectionJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.CollectionJsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.math.sequence","c":"SimpleSequence.Visitor","l":"visitConstantSequence(ConstantSequence<T>)","u":"visitConstantSequence(com.rb.nonbiz.math.sequence.ConstantSequence)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.Visitor","l":"visitEtf(InstrumentType.EtfInstrumentType)","u":"visitEtf(com.rb.biz.types.asset.InstrumentType.EtfInstrumentType)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat.Visitor","l":"visitFileFormatParameterizedByDate(String)","u":"visitFileFormatParameterizedByDate(java.lang.String)"},{"p":"com.rb.nonbiz.io","c":"FileByDateStringFormat.Visitor","l":"visitFixedFilenameIgnoringDate(String)","u":"visitFixedFilenameIgnoringDate(java.lang.String)"},{"p":"com.rb.nonbiz.math.sequence","c":"SimpleSequence.Visitor","l":"visitGeometricProgression(GeometricProgression<T>)","u":"visitGeometricProgression(com.rb.nonbiz.math.sequence.GeometricProgression)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets.TwoHasLongSetsVisitor","l":"visitHasLongInBothSets(T)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets.TwoHasLongSetsVisitor","l":"visitHasLongInLeftSetOnly(T)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets.TwoHasLongSetsVisitor","l":"visitHasLongInRightSetOnly(T)"},{"p":"com.rb.nonbiz.collections","c":"HasLongSets","l":"visitHasLongsOfTwoSets(HasLongSet<T>, HasLongSet<T>, HasLongSets.TwoHasLongSetsVisitor<T>)","u":"visitHasLongsOfTwoSets(com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSet,com.rb.nonbiz.collections.HasLongSets.TwoHasLongSetsVisitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitIidMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor)","u":"visitIidMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.IidMapJsonApiPropertyDescriptor)"},{"p":"com.rb.biz.types.asset","c":"AssetId.AssetIdVisitor","l":"visitInstrumentId(InstrumentId)","u":"visitInstrumentId(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.TwoIidMapsVisitor","l":"visitInstrumentInBothMaps(InstrumentId, VL, VR)","u":"visitInstrumentInBothMaps(com.rb.biz.types.asset.InstrumentId,VL,VR)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.PairOfIidSetAndIidMapVisitor","l":"visitInstrumentInBothSetAndMap(InstrumentId, V)","u":"visitInstrumentInBothSetAndMap(com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidSets.TwoIidSetsVisitor","l":"visitInstrumentInBothSets(InstrumentId)","u":"visitInstrumentInBothSets(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.TwoIidMapsVisitor","l":"visitInstrumentInLeftMapOnly(InstrumentId, VL)","u":"visitInstrumentInLeftMapOnly(com.rb.biz.types.asset.InstrumentId,VL)"},{"p":"com.rb.nonbiz.collections","c":"IidSets.TwoIidSetsVisitor","l":"visitInstrumentInLeftSetOnly(InstrumentId)","u":"visitInstrumentInLeftSetOnly(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.PairOfIidSetAndIidMapVisitor","l":"visitInstrumentInMapOnly(InstrumentId, V)","u":"visitInstrumentInMapOnly(com.rb.biz.types.asset.InstrumentId,V)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.TwoIidMapsVisitor","l":"visitInstrumentInRightMapOnly(InstrumentId, VR)","u":"visitInstrumentInRightMapOnly(com.rb.biz.types.asset.InstrumentId,VR)"},{"p":"com.rb.nonbiz.collections","c":"IidSets.TwoIidSetsVisitor","l":"visitInstrumentInRightSetOnly(InstrumentId)","u":"visitInstrumentInRightSetOnly(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors.PairOfIidSetAndIidMapVisitor","l":"visitInstrumentInSetOnly(InstrumentId)","u":"visitInstrumentInSetOnly(com.rb.biz.types.asset.InstrumentId)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitInstrumentsOfThreeIidMaps(IidMap<V1>, IidMap<V2>, IidMap<V3>, QuadriConsumer<InstrumentId, Optional<V1>, Optional<V2>, Optional<V3>>)","u":"visitInstrumentsOfThreeIidMaps(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.functional.QuadriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitInstrumentsOfTwoIidMaps(IidMap<VL>, IidMap<VR>, IidMapVisitors.TwoIidMapsVisitor<VL, VR>)","u":"visitInstrumentsOfTwoIidMaps(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMapVisitors.TwoIidMapsVisitor)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitInstrumentsOfTwoIidMapsAssumingFullOverlap(IidMap<VL>, IidMap<VR>, TriConsumer<InstrumentId, VL, VR>)","u":"visitInstrumentsOfTwoIidMapsAssumingFullOverlap(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.functional.TriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitInstrumentsOfTwoIidMapsAssumingSubset(IidMap<VL>, IidMap<VR>, TriConsumer<InstrumentId, VL, VR>, BiConsumer<InstrumentId, VR>)","u":"visitInstrumentsOfTwoIidMapsAssumingSubset(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.functional.TriConsumer,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidSets","l":"visitInstrumentsOfTwoSets(IidSet, IidSet, IidSets.TwoIidSetsVisitor)","u":"visitInstrumentsOfTwoSets(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidSets.TwoIidSetsVisitor)"},{"p":"com.rb.nonbiz.text","c":"UniqueIdOrItem.Visitor","l":"visitIsUniqueId(UniqueId<T>)","u":"visitIsUniqueId(com.rb.nonbiz.text.UniqueId)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.TwoRBMapsVisitor","l":"visitItemInBothMaps(K, VL, VR)","u":"visitItemInBothMaps(K,VL,VR)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.PairOfRBSetAndRBMapVisitor","l":"visitItemInBothSetAndMap(K, V)","u":"visitItemInBothSetAndMap(K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBSets.TwoRBSetsVisitor","l":"visitItemInBothSets(T)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.TwoRBMapsVisitor","l":"visitItemInLeftMapOnly(K, VL)","u":"visitItemInLeftMapOnly(K,VL)"},{"p":"com.rb.nonbiz.collections","c":"RBSets.TwoRBSetsVisitor","l":"visitItemInLeftSetOnly(T)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.PairOfRBSetAndRBMapVisitor","l":"visitItemInMapOnly(K, V)","u":"visitItemInMapOnly(K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.TwoRBMapsVisitor","l":"visitItemInRightMapOnly(K, VR)","u":"visitItemInRightMapOnly(K,VR)"},{"p":"com.rb.nonbiz.collections","c":"RBSets.TwoRBSetsVisitor","l":"visitItemInRightSetOnly(T)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors.PairOfRBSetAndRBMapVisitor","l":"visitItemInSetOnly(K)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitItemsOfIidSetAndIidMap(IidSet, IidMap<V>, IidMapVisitors.PairOfIidSetAndIidMapVisitor<V>)","u":"visitItemsOfIidSetAndIidMap(com.rb.nonbiz.collections.IidSet,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMapVisitors.PairOfIidSetAndIidMapVisitor)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitItemsOfRBSetAndRBMap(RBSet<K>, RBMap<K, V>, RBMapVisitors.PairOfRBSetAndRBMapVisitor<K, V>)","u":"visitItemsOfRBSetAndRBMap(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMapVisitors.PairOfRBSetAndRBMapVisitor)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitItemsOfTwoRBMaps(RBMap<K, VL>, RBMap<K, VR>, RBMapVisitors.TwoRBMapsVisitor<K, VL, VR>)","u":"visitItemsOfTwoRBMaps(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMapVisitors.TwoRBMapsVisitor)"},{"p":"com.rb.nonbiz.collections","c":"RBSets","l":"visitItemsOfTwoSets(RBSet<T>, RBSet<T>, RBSets.TwoRBSetsVisitor<T>)","u":"visitItemsOfTwoSets(com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSet,com.rb.nonbiz.collections.RBSets.TwoRBSetsVisitor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitJavaGenericJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor)","u":"visitJavaGenericJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.JavaGenericJsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation.Visitor","l":"visitJsonApiArrayDocumentation(JsonApiArrayDocumentation)","u":"visitJsonApiArrayDocumentation(com.rb.nonbiz.jsonapi.JsonApiArrayDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation.Visitor","l":"visitJsonApiClassDocumentation(JsonApiClassDocumentation)","u":"visitJsonApiClassDocumentation(com.rb.nonbiz.jsonapi.JsonApiClassDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation.Visitor","l":"visitJsonApiClassWithNonFixedPropertiesDocumentation(JsonApiClassWithNonFixedPropertiesDocumentation)","u":"visitJsonApiClassWithNonFixedPropertiesDocumentation(com.rb.nonbiz.jsonapi.JsonApiClassWithNonFixedPropertiesDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation.Visitor","l":"visitJsonApiClassWithSubclassesDocumentation(JsonApiClassWithSubclassesDocumentation)","u":"visitJsonApiClassWithSubclassesDocumentation(com.rb.nonbiz.jsonapi.JsonApiClassWithSubclassesDocumentation)"},{"p":"com.rb.nonbiz.jsonapi","c":"JsonApiDocumentation.Visitor","l":"visitJsonApiEnumDocumentation(JsonApiEnumDocumentation<? extends Enum<?>>)","u":"visitJsonApiEnumDocumentation(com.rb.nonbiz.jsonapi.JsonApiEnumDocumentation)"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonArray()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonBoolean()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonNull()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonNumber()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonObject()"},{"p":"com.rb.nonbiz.json","c":"JsonElementType.Visitor","l":"visitJsonString()"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination.NodeOrLeafVisitor","l":"visitLeaf(L)"},{"p":"com.rb.nonbiz.collections","c":"Either.Visitor","l":"visitLeft(L)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither.EitherOrNeitherVisitor","l":"visitLeft(L)"},{"p":"com.rb.nonbiz.types","c":"PreciseValues.BigDecimalsEpsilonComparisonVisitor","l":"visitLeftIsGreater(BigDecimal)","u":"visitLeftIsGreater(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles.EpsilonComparisonVisitor","l":"visitLeftIsGreater(double)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth.EitherOrBothVisitor","l":"visitLeftOnly(L)"},{"p":"com.rb.nonbiz.collections","c":"Either.BothVisitor","l":"visitLefts(L, L)","u":"visitLefts(L,L)"},{"p":"com.rb.nonbiz.functional","c":"AllowsMissingValues.Visitor","l":"visitMissingValue()"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.Visitor","l":"visitMutualFund(InstrumentType.MutualFundInstrumentType)","u":"visitMutualFund(com.rb.biz.types.asset.InstrumentType.MutualFundInstrumentType)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither.EitherOrNeitherVisitor","l":"visitNeither()"},{"p":"com.rb.nonbiz.collections","c":"LinearCombination.NodeOrLeafVisitor","l":"visitNodeWithWeightedChildren(NodeWithWeightedChildren<N, L>)","u":"visitNodeWithWeightedChildren(com.rb.nonbiz.collections.NodeWithWeightedChildren)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3.Visitor","l":"visitOnly1stOf3(T1)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3.Visitor","l":"visitOnly2ndOf3(T2)"},{"p":"com.rb.nonbiz.collections","c":"OneOf3.Visitor","l":"visitOnly3rdOf3(T3)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueAndOverride.Visitor","l":"visitOnlyUseOverrideToFurtherReduceExistingValue()"},{"p":"com.rb.nonbiz.testmatchers","c":"RBVisitorMatchers.VisitorMatchInfo","l":"visitorMatchInfo(int, X, RBMatchers.MatcherGenerator<? extends X>)","u":"visitorMatchInfo(int,X,com.rb.nonbiz.testmatchers.RBMatchers.MatcherGenerator)"},{"p":"com.rb.nonbiz.collections","c":"RBOptionals","l":"visitPairOfOptionals(Optional<A>, Optional<B>, BiConsumer<A, B>, Consumer<A>, Consumer<B>, Runnable)","u":"visitPairOfOptionals(java.util.Optional,java.util.Optional,java.util.function.BiConsumer,java.util.function.Consumer,java.util.function.Consumer,java.lang.Runnable)"},{"p":"com.rb.nonbiz.functional","c":"AllowsMissingValues.Visitor","l":"visitPresentValue(V)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitPseudoEnumJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor)","u":"visitPseudoEnumJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.PseudoEnumJsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitRBMapJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor)","u":"visitRBMapJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.RBMapJsonApiPropertyDescriptor)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitRBMapsExpectingSameKeys(RBMap<K, V1>, RBMap<K, V2>, RBMap<K, V3>, QuadriConsumer<K, V1, V2, V3>)","u":"visitRBMapsExpectingSameKeys(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.QuadriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitRBMapsExpectingSameKeys(RBMap<K, V1>, RBMap<K, V2>, RBMap<K, V3>, TriConsumer<V1, V2, V3>)","u":"visitRBMapsExpectingSameKeys(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.TriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitRBMapsExpectingSameKeys(RBMap<K, V1>, RBMap<K, V2>, TriConsumer<K, V1, V2>)","u":"visitRBMapsExpectingSameKeys(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.TriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"Either.Visitor","l":"visitRight(R)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrNeither.EitherOrNeitherVisitor","l":"visitRight(R)"},{"p":"com.rb.nonbiz.types","c":"PreciseValues.BigDecimalsEpsilonComparisonVisitor","l":"visitRightIsGreater(BigDecimal)","u":"visitRightIsGreater(java.math.BigDecimal)"},{"p":"com.rb.nonbiz.types","c":"RBDoubles.EpsilonComparisonVisitor","l":"visitRightIsGreater(double)"},{"p":"com.rb.nonbiz.collections","c":"EitherOrBoth.EitherOrBothVisitor","l":"visitRightOnly(R)"},{"p":"com.rb.nonbiz.collections","c":"Either.BothVisitor","l":"visitRights(R, R)","u":"visitRights(R,R)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitSharedInstrumentsOfTwoIidMaps(IidMap<VL>, IidMap<VR>, BiConsumer<VL, VR>)","u":"visitSharedInstrumentsOfTwoIidMaps(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"IidMapVisitors","l":"visitSharedInstrumentsOfTwoIidMaps(IidMap<VL>, IidMap<VR>, TriConsumer<InstrumentId, VL, VR>)","u":"visitSharedInstrumentsOfTwoIidMaps(com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.collections.IidMap,com.rb.nonbiz.functional.TriConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitSharedItemsOfTwoRBMaps(RBMap<K, VL>, RBMap<K, VR>, BiConsumer<VL, VR>)","u":"visitSharedItemsOfTwoRBMaps(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,java.util.function.BiConsumer)"},{"p":"com.rb.nonbiz.collections","c":"RBMapVisitors","l":"visitSharedItemsOfTwoRBMaps(RBMap<K, VL>, RBMap<K, VR>, TriConsumer<K, VL, VR>)","u":"visitSharedItemsOfTwoRBMaps(com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.collections.RBMap,com.rb.nonbiz.functional.TriConsumer)"},{"p":"com.rb.nonbiz.json","c":"JsonApiPropertyDescriptor.Visitor","l":"visitSimpleClassJsonApiPropertyDescriptor(JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor)","u":"visitSimpleClassJsonApiPropertyDescriptor(com.rb.nonbiz.json.JsonApiPropertyDescriptor.SimpleClassJsonApiPropertyDescriptor)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.Visitor","l":"visitStock(InstrumentType.StockInstrumentType)","u":"visitStock(com.rb.biz.types.asset.InstrumentType.StockInstrumentType)"},{"p":"com.rb.biz.types.asset","c":"InstrumentType.Visitor","l":"visitStructuredProduct(InstrumentType.StructuredProductInstrumentType)","u":"visitStructuredProduct(com.rb.biz.types.asset.InstrumentType.StructuredProductInstrumentType)"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.Visitor","l":"visitUseExistingValueWhenOverrideMissing()"},{"p":"com.rb.biz.investing.modeling.selection.overrides","c":"BehaviorWithValueButNoOverride.Visitor","l":"visitUseFixedValueWhenOverrideMissing(T)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"warn(String, Object...)","u":"warn(java.lang.String,java.lang.Object...)"},{"p":"com.rb.nonbiz.text","c":"RBLog","l":"warn(Supplier<String>)","u":"warn(java.util.function.Supplier)"},{"p":"com.rb.nonbiz.types","c":"Weighted","l":"weighted(T, double)","u":"weighted(T,double)"},{"p":"com.rb.nonbiz.collections","c":"RBIterables","l":"weightedAverage(List<Double>, List<Double>)","u":"weightedAverage(java.util.List,java.util.List)"},{"p":"com.rb.nonbiz.types","c":"WeightedBy","l":"weightedBy(T, W)","u":"weightedBy(T,W)"},{"p":"com.rb.nonbiz.types","c":"WeightedBy","l":"WeightedBy(T, W)","u":"%3Cinit%3E(T,W)"},{"p":"com.rb.nonbiz.types","c":"WeightedBySignedFraction","l":"weightedBySignedFraction(T, SignedFraction)","u":"weightedBySignedFraction(T,com.rb.nonbiz.types.SignedFraction)"},{"p":"com.rb.nonbiz.jsonapi","c":"WeightedBySignedFractionJsonApiConverter","l":"WeightedBySignedFractionJsonApiConverter()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"WeightedByUnitFraction","l":"weightedByUnitFraction(T, UnitFraction)","u":"weightedByUnitFraction(T,com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"WIDEST_POSSIBLE_CLOSED_UNIT_FRACTION_RANGE"},{"p":"com.rb.nonbiz.testutils","c":"RBSingleValueClassTestMatcher","l":"willMatch(T, T)","u":"willMatch(T,T)"},{"p":"com.rb.nonbiz.testutils","c":"RBTestMatcher","l":"willMatch(T, T)","u":"willMatch(T,T)"},{"p":"com.rb.biz.types","c":"Money","l":"WITH_DOLLAR_SIGN_PREFIX"},{"p":"com.rb.nonbiz.types","c":"AcceptableDifference","l":"withinEpsilon(double, double)","u":"withinEpsilon(double,double)"},{"p":"com.rb.nonbiz.collections","c":"RBMap","l":"withItemAddedAssumingAbsent(K, V)","u":"withItemAddedAssumingAbsent(K,V)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewDecreasedClosedLowerEndpoint(Range<P>, UnaryOperator<P>)","u":"withNewDecreasedClosedLowerEndpoint(com.google.common.collect.Range,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewIncreasedClosedUpperEndpoint(Range<P>, UnaryOperator<P>)","u":"withNewIncreasedClosedUpperEndpoint(com.google.common.collect.Range,java.util.function.UnaryOperator)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewLowerEndpoint(Range<P>, Function<Optional<P>, P>)","u":"withNewLowerEndpoint(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewLowerEndpointFloor(Range<C>, C)","u":"withNewLowerEndpointFloor(com.google.common.collect.Range,C)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewUpperEndpoint(Range<P>, Function<Optional<P>, P>)","u":"withNewUpperEndpoint(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withNewUpperEndpointCeiling(Range<C>, C)","u":"withNewUpperEndpointCeiling(com.google.common.collect.Range,C)"},{"p":"com.rb.biz.types","c":"Money","l":"WITHOUT_DOLLAR_SIGN_PREFIX"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withPossiblyNewLowerEndpoint(Range<P>, Function<Optional<P>, Optional<P>>)","u":"withPossiblyNewLowerEndpoint(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.collections","c":"RBRanges","l":"withPossiblyNewUpperEndpoint(Range<P>, Function<Optional<P>, Optional<P>>)","u":"withPossiblyNewUpperEndpoint(com.google.common.collect.Range,java.util.function.Function)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"withPossiblyTightenedLowerBound(UnitFraction)","u":"withPossiblyTightenedLowerBound(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.nonbiz.types","c":"ClosedUnitFractionRange","l":"withPossiblyTightenedUpperBound(UnitFraction)","u":"withPossiblyTightenedUpperBound(com.rb.nonbiz.types.UnitFraction)"},{"p":"com.rb.biz.types","c":"StringFunctions","l":"withUnderscores(long)"},{"p":"com.rb.nonbiz.io","c":"JsonFileWriter","l":"writePrettyJsonToFile(String, JsonObject)","u":"writePrettyJsonToFile(java.lang.String,com.google.gson.JsonObject)"},{"p":"com.rb.nonbiz.io","c":"StringToFileWriter","l":"writeToFile(String, Iterator<String>)","u":"writeToFile(java.lang.String,java.util.Iterator)"},{"p":"com.rb.nonbiz.io","c":"StringToFileWriter","l":"writeToFile(String, String)","u":"writeToFile(java.lang.String,java.lang.String)"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"X"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"Y"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"yearsAreConsecutive(Year, Year)","u":"yearsAreConsecutive(java.time.Year,java.time.Year)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"yyMMdd_hhmmss_NoHyphens(LocalDateTime)","u":"yyMMdd_hhmmss_NoHyphens(java.time.LocalDateTime)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"yyMMddNoHyphens(LocalDate)","u":"yyMMddNoHyphens(java.time.LocalDate)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"yyyyMMdd(LocalDate)","u":"yyyyMMdd(java.time.LocalDate)"},{"p":"com.rb.nonbiz.date","c":"RBDates","l":"yyyyMMddNoHyphens(LocalDate)","u":"yyyyMMddNoHyphens(java.time.LocalDate)"},{"p":"com.rb.nonbiz.testutils","c":"TestEnumXYZ","l":"Z"},{"p":"com.rb.nonbiz.math.stats","c":"ZScore","l":"Z_SCORE_0"},{"p":"com.rb.nonbiz.types","c":"Epsilon","l":"ZERO_EPSILON"},{"p":"com.rb.biz.types","c":"Money","l":"ZERO_MONEY"},{"p":"com.rb.nonbiz.types","c":"MoneyFraction","l":"ZERO_MONEY_FRACTION"},{"p":"com.rb.biz.types.trading","c":"NonNegativeQuantity","l":"ZERO_NON_NEGATIVE_QUANTITY"},{"p":"com.rb.biz.types","c":"Price","l":"ZERO_PRICE"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"ZERO_RATIONAL_FRACTION"},{"p":"com.rb.nonbiz.testutils","c":"RBCommonsTestConstants","l":"ZERO_SEED"},{"p":"com.rb.biz.types","c":"SignedMoney","l":"ZERO_SIGNED_MONEY"},{"p":"com.rb.biz.types.trading","c":"SignedQuantity","l":"ZERO_SIGNED_QUANTITY"},{"p":"com.rb.nonbiz.json","c":"ZeroBasedPercentageReturn","l":"ZeroBasedPercentageReturn()","u":"%3Cinit%3E()"},{"p":"com.rb.nonbiz.types","c":"RationalUnitFraction","l":"zeroRationalUnitFraction(int)"},{"p":"com.rb.nonbiz.math.vectorspaces","c":"RBVector","l":"zeroRBVectorWithDimension(int)"},{"p":"com.rb.nonbiz.math.stats","c":"ZScore","l":"zScore(double)"},{"p":"com.rb.nonbiz.math.stats","c":"ZScore","l":"ZScore(double)","u":"%3Cinit%3E(double)"}];updateSearchResults();