syntax = "proto3";

option java_package = "com.rb.nonbiz.math.beta";

// This format is verbose; we really could just do this with a 2d array (implemented as 1d because
// protobuf doesn't support it), and store the row & column keys separately.
// This is what I had originally, but the problem is that it's hard to read the protobuf with automated tools.
// The format below is maximally readable, even if it results in a bigger file on disk.
//
// To save you the effort on how to protobuf-compile this:
// cd ~/ssd/rb; protoc --java_out=./src/main/java ./src/main/java/com/rb/nonbiz/math/beta/BetaProto.proto
message BetasForSingleDayMsg {

    message BetasTo {
        int64 to_instrument_id = 1;
        double beta = 2;

        // Conceptually similar to QualityOfReturnsMsg in the eigendecomposition protobuf messages.
        // Ideally we'll be computing betas based on e.g. 250 days (or whatever the beta generation instructions say),
        // but in some cases we'll have to use a smaller amount of days, when insufficient days are available.
        int32 actual_num_days_in_beta_calculation = 3;
        double correlation = 4;
    }

    message BetasFrom {
        int64 from_instrument_id = 1;
        repeated BetasTo betas_to = 2;
    }

    string human_description = 1;
    // Ideally, we'll compute betas using this many days of history; but in some cases, we may be forced to use fewer;
    // that will show in BetasTo.actual_num_days_in_beta_calculation
    int32 max_num_days_in_beta_calculation = 2;
    repeated BetasFrom betas_from = 3;

}