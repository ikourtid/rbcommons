// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/java/com/rb/nonbiz/math/eigen/EigenProto.proto

package com.rb.nonbiz.math.eigen;

public final class EigenProto {
  private EigenProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface EigenDecompositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:EigenDecomposition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string human_description = 1;</code>
     */
    java.lang.String getHumanDescription();
    /**
     * <code>string human_description = 1;</code>
     */
    com.google.protobuf.ByteString
        getHumanDescriptionBytes();

    /**
     * <pre>
     * Between 0 and 1; we typically try to get enough eigenvectors with eigenvalues
     * such that the explanatory power of the eigenvectors we keep is at most 80% of total.
     * We can always decide to only care about using the biggest factors that only get us to e.g. 70%.
     * Note that this is the MINIMUM; if e.g. it's 80%, and the least important eigenvector takes us from
     * 79% explanatory power to 82% explanatory power, then this will still be 80%.
     * </pre>
     *
     * <code>double eigenvector_coverage_fraction = 2;</code>
     */
    double getEigenvectorCoverageFraction();

    /**
     * <pre>
     * this applies to all eigenvectors, not just the ones that are included in this file after skipping
     * the least important ones. It is useful for cases where e.g. we store eigenvectors for up to 80%
     * explanatory power, but decide to use up to 70% for a backtest. We can always choose less.
     * </pre>
     *
     * <code>double sum_of_all_eigenvalues_including_skipped = 3;</code>
     */
    double getSumOfAllEigenvaluesIncludingSkipped();

    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> 
        getAllQualityOfReturnsList();
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getAllQualityOfReturns(int index);
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    int getAllQualityOfReturnsCount();
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder> 
        getAllQualityOfReturnsOrBuilderList();
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder getAllQualityOfReturnsOrBuilder(
        int index);

    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> 
        getRetainedEigenpairsDescendingList();
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getRetainedEigenpairsDescending(int index);
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    int getRetainedEigenpairsDescendingCount();
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder> 
        getRetainedEigenpairsDescendingOrBuilderList();
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder getRetainedEigenpairsDescendingOrBuilder(
        int index);

    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> 
        getInstrumentFactorLoadingsList();
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getInstrumentFactorLoadings(int index);
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    int getInstrumentFactorLoadingsCount();
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder> 
        getInstrumentFactorLoadingsOrBuilderList();
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder getInstrumentFactorLoadingsOrBuilder(
        int index);

    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> 
        getStatsList();
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getStats(int index);
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    int getStatsCount();
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder> 
        getStatsOrBuilderList();
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder getStatsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * To save you the effort on how to protobuf-compile this:
   * cd ~/ssd/rb; protoc --java_out=./src/main/java ./src/main/java/com/rb/nonbiz/math/eigen/EigenProto.proto
   * </pre>
   *
   * Protobuf type {@code EigenDecomposition}
   */
  public  static final class EigenDecomposition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:EigenDecomposition)
      EigenDecompositionOrBuilder {
    // Use EigenDecomposition.newBuilder() to construct.
    private EigenDecomposition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EigenDecomposition() {
      humanDescription_ = "";
      eigenvectorCoverageFraction_ = 0D;
      sumOfAllEigenvaluesIncludingSkipped_ = 0D;
      allQualityOfReturns_ = java.util.Collections.emptyList();
      retainedEigenpairsDescending_ = java.util.Collections.emptyList();
      instrumentFactorLoadings_ = java.util.Collections.emptyList();
      stats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private EigenDecomposition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              humanDescription_ = s;
              break;
            }
            case 17: {

              eigenvectorCoverageFraction_ = input.readDouble();
              break;
            }
            case 25: {

              sumOfAllEigenvaluesIncludingSkipped_ = input.readDouble();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                allQualityOfReturns_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg>();
                mutable_bitField0_ |= 0x00000008;
              }
              allQualityOfReturns_.add(
                  input.readMessage(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.parser(), extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                retainedEigenpairsDescending_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair>();
                mutable_bitField0_ |= 0x00000010;
              }
              retainedEigenpairsDescending_.add(
                  input.readMessage(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                instrumentFactorLoadings_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings>();
                mutable_bitField0_ |= 0x00000020;
              }
              instrumentFactorLoadings_.add(
                  input.readMessage(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                stats_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg>();
                mutable_bitField0_ |= 0x00000040;
              }
              stats_.add(
                  input.readMessage(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          allQualityOfReturns_ = java.util.Collections.unmodifiableList(allQualityOfReturns_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          retainedEigenpairsDescending_ = java.util.Collections.unmodifiableList(retainedEigenpairsDescending_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          instrumentFactorLoadings_ = java.util.Collections.unmodifiableList(instrumentFactorLoadings_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          stats_ = java.util.Collections.unmodifiableList(stats_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Builder.class);
    }

    public interface EigenpairOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EigenDecomposition.Eigenpair)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>double eigenvalue = 1;</code>
       */
      double getEigenvalue();

      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      java.util.List<java.lang.Double> getEigenvectorElementsList();
      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      int getEigenvectorElementsCount();
      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      double getEigenvectorElements(int index);
    }
    /**
     * Protobuf type {@code EigenDecomposition.Eigenpair}
     */
    public  static final class Eigenpair extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EigenDecomposition.Eigenpair)
        EigenpairOrBuilder {
      // Use Eigenpair.newBuilder() to construct.
      private Eigenpair(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Eigenpair() {
        eigenvalue_ = 0D;
        eigenvectorElements_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private Eigenpair(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 9: {

                eigenvalue_ = input.readDouble();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  eigenvectorElements_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                eigenvectorElements_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  eigenvectorElements_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  eigenvectorElements_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorElements_ = java.util.Collections.unmodifiableList(eigenvectorElements_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_Eigenpair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_Eigenpair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder.class);
      }

      private int bitField0_;
      public static final int EIGENVALUE_FIELD_NUMBER = 1;
      private double eigenvalue_;
      /**
       * <code>double eigenvalue = 1;</code>
       */
      public double getEigenvalue() {
        return eigenvalue_;
      }

      public static final int EIGENVECTOR_ELEMENTS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> eigenvectorElements_;
      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getEigenvectorElementsList() {
        return eigenvectorElements_;
      }
      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      public int getEigenvectorElementsCount() {
        return eigenvectorElements_.size();
      }
      /**
       * <code>repeated double eigenvector_elements = 2;</code>
       */
      public double getEigenvectorElements(int index) {
        return eigenvectorElements_.get(index);
      }
      private int eigenvectorElementsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (eigenvalue_ != 0D) {
          output.writeDouble(1, eigenvalue_);
        }
        if (getEigenvectorElementsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(eigenvectorElementsMemoizedSerializedSize);
        }
        for (int i = 0; i < eigenvectorElements_.size(); i++) {
          output.writeDoubleNoTag(eigenvectorElements_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (eigenvalue_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(1, eigenvalue_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getEigenvectorElementsList().size();
          size += dataSize;
          if (!getEigenvectorElementsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          eigenvectorElementsMemoizedSerializedSize = dataSize;
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair)) {
          return super.equals(obj);
        }
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair other = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair) obj;

        boolean result = true;
        result = result && (
            java.lang.Double.doubleToLongBits(getEigenvalue())
            == java.lang.Double.doubleToLongBits(
                other.getEigenvalue()));
        result = result && getEigenvectorElementsList()
            .equals(other.getEigenvectorElementsList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + EIGENVALUE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getEigenvalue()));
        if (getEigenvectorElementsCount() > 0) {
          hash = (37 * hash) + EIGENVECTOR_ELEMENTS_FIELD_NUMBER;
          hash = (53 * hash) + getEigenvectorElementsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code EigenDecomposition.Eigenpair}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EigenDecomposition.Eigenpair)
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_Eigenpair_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_Eigenpair_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder.class);
        }

        // Construct using com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          eigenvalue_ = 0D;

          eigenvectorElements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_Eigenpair_descriptor;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getDefaultInstanceForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.getDefaultInstance();
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair build() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair buildPartial() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair result = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.eigenvalue_ = eigenvalue_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorElements_ = java.util.Collections.unmodifiableList(eigenvectorElements_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.eigenvectorElements_ = eigenvectorElements_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair) {
            return mergeFrom((com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair other) {
          if (other == com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.getDefaultInstance()) return this;
          if (other.getEigenvalue() != 0D) {
            setEigenvalue(other.getEigenvalue());
          }
          if (!other.eigenvectorElements_.isEmpty()) {
            if (eigenvectorElements_.isEmpty()) {
              eigenvectorElements_ = other.eigenvectorElements_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEigenvectorElementsIsMutable();
              eigenvectorElements_.addAll(other.eigenvectorElements_);
            }
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private double eigenvalue_ ;
        /**
         * <code>double eigenvalue = 1;</code>
         */
        public double getEigenvalue() {
          return eigenvalue_;
        }
        /**
         * <code>double eigenvalue = 1;</code>
         */
        public Builder setEigenvalue(double value) {
          
          eigenvalue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double eigenvalue = 1;</code>
         */
        public Builder clearEigenvalue() {
          
          eigenvalue_ = 0D;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> eigenvectorElements_ = java.util.Collections.emptyList();
        private void ensureEigenvectorElementsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorElements_ = new java.util.ArrayList<java.lang.Double>(eigenvectorElements_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public java.util.List<java.lang.Double>
            getEigenvectorElementsList() {
          return java.util.Collections.unmodifiableList(eigenvectorElements_);
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public int getEigenvectorElementsCount() {
          return eigenvectorElements_.size();
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public double getEigenvectorElements(int index) {
          return eigenvectorElements_.get(index);
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public Builder setEigenvectorElements(
            int index, double value) {
          ensureEigenvectorElementsIsMutable();
          eigenvectorElements_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public Builder addEigenvectorElements(double value) {
          ensureEigenvectorElementsIsMutable();
          eigenvectorElements_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public Builder addAllEigenvectorElements(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureEigenvectorElementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, eigenvectorElements_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double eigenvector_elements = 2;</code>
         */
        public Builder clearEigenvectorElements() {
          eigenvectorElements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:EigenDecomposition.Eigenpair)
      }

      // @@protoc_insertion_point(class_scope:EigenDecomposition.Eigenpair)
      private static final com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair();
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Eigenpair>
          PARSER = new com.google.protobuf.AbstractParser<Eigenpair>() {
        public Eigenpair parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new Eigenpair(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Eigenpair> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Eigenpair> getParserForType() {
        return PARSER;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface InstrumentLoadingsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EigenDecomposition.InstrumentLoadings)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 instrument_id = 1;</code>
       */
      long getInstrumentId();

      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      java.util.List<java.lang.Double> getEigenvectorLoadingsList();
      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      int getEigenvectorLoadingsCount();
      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      double getEigenvectorLoadings(int index);
    }
    /**
     * Protobuf type {@code EigenDecomposition.InstrumentLoadings}
     */
    public  static final class InstrumentLoadings extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EigenDecomposition.InstrumentLoadings)
        InstrumentLoadingsOrBuilder {
      // Use InstrumentLoadings.newBuilder() to construct.
      private InstrumentLoadings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private InstrumentLoadings() {
        instrumentId_ = 0L;
        eigenvectorLoadings_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private InstrumentLoadings(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                instrumentId_ = input.readInt64();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  eigenvectorLoadings_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                eigenvectorLoadings_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  eigenvectorLoadings_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  eigenvectorLoadings_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorLoadings_ = java.util.Collections.unmodifiableList(eigenvectorLoadings_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_InstrumentLoadings_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_InstrumentLoadings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder.class);
      }

      private int bitField0_;
      public static final int INSTRUMENT_ID_FIELD_NUMBER = 1;
      private long instrumentId_;
      /**
       * <code>int64 instrument_id = 1;</code>
       */
      public long getInstrumentId() {
        return instrumentId_;
      }

      public static final int EIGENVECTOR_LOADINGS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> eigenvectorLoadings_;
      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getEigenvectorLoadingsList() {
        return eigenvectorLoadings_;
      }
      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      public int getEigenvectorLoadingsCount() {
        return eigenvectorLoadings_.size();
      }
      /**
       * <pre>
       * in decreasing order of eigenvalue
       * </pre>
       *
       * <code>repeated double eigenvector_loadings = 2;</code>
       */
      public double getEigenvectorLoadings(int index) {
        return eigenvectorLoadings_.get(index);
      }
      private int eigenvectorLoadingsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (instrumentId_ != 0L) {
          output.writeInt64(1, instrumentId_);
        }
        if (getEigenvectorLoadingsList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(eigenvectorLoadingsMemoizedSerializedSize);
        }
        for (int i = 0; i < eigenvectorLoadings_.size(); i++) {
          output.writeDoubleNoTag(eigenvectorLoadings_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (instrumentId_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, instrumentId_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getEigenvectorLoadingsList().size();
          size += dataSize;
          if (!getEigenvectorLoadingsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          eigenvectorLoadingsMemoizedSerializedSize = dataSize;
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings)) {
          return super.equals(obj);
        }
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings other = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings) obj;

        boolean result = true;
        result = result && (getInstrumentId()
            == other.getInstrumentId());
        result = result && getEigenvectorLoadingsList()
            .equals(other.getEigenvectorLoadingsList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + INSTRUMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstrumentId());
        if (getEigenvectorLoadingsCount() > 0) {
          hash = (37 * hash) + EIGENVECTOR_LOADINGS_FIELD_NUMBER;
          hash = (53 * hash) + getEigenvectorLoadingsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code EigenDecomposition.InstrumentLoadings}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EigenDecomposition.InstrumentLoadings)
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_InstrumentLoadings_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_InstrumentLoadings_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder.class);
        }

        // Construct using com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          instrumentId_ = 0L;

          eigenvectorLoadings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_InstrumentLoadings_descriptor;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getDefaultInstanceForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.getDefaultInstance();
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings build() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings buildPartial() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings result = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.instrumentId_ = instrumentId_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorLoadings_ = java.util.Collections.unmodifiableList(eigenvectorLoadings_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.eigenvectorLoadings_ = eigenvectorLoadings_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings) {
            return mergeFrom((com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings other) {
          if (other == com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.getDefaultInstance()) return this;
          if (other.getInstrumentId() != 0L) {
            setInstrumentId(other.getInstrumentId());
          }
          if (!other.eigenvectorLoadings_.isEmpty()) {
            if (eigenvectorLoadings_.isEmpty()) {
              eigenvectorLoadings_ = other.eigenvectorLoadings_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEigenvectorLoadingsIsMutable();
              eigenvectorLoadings_.addAll(other.eigenvectorLoadings_);
            }
            onChanged();
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long instrumentId_ ;
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public long getInstrumentId() {
          return instrumentId_;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder setInstrumentId(long value) {
          
          instrumentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder clearInstrumentId() {
          
          instrumentId_ = 0L;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> eigenvectorLoadings_ = java.util.Collections.emptyList();
        private void ensureEigenvectorLoadingsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            eigenvectorLoadings_ = new java.util.ArrayList<java.lang.Double>(eigenvectorLoadings_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public java.util.List<java.lang.Double>
            getEigenvectorLoadingsList() {
          return java.util.Collections.unmodifiableList(eigenvectorLoadings_);
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public int getEigenvectorLoadingsCount() {
          return eigenvectorLoadings_.size();
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public double getEigenvectorLoadings(int index) {
          return eigenvectorLoadings_.get(index);
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public Builder setEigenvectorLoadings(
            int index, double value) {
          ensureEigenvectorLoadingsIsMutable();
          eigenvectorLoadings_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public Builder addEigenvectorLoadings(double value) {
          ensureEigenvectorLoadingsIsMutable();
          eigenvectorLoadings_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public Builder addAllEigenvectorLoadings(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureEigenvectorLoadingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, eigenvectorLoadings_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * in decreasing order of eigenvalue
         * </pre>
         *
         * <code>repeated double eigenvector_loadings = 2;</code>
         */
        public Builder clearEigenvectorLoadings() {
          eigenvectorLoadings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:EigenDecomposition.InstrumentLoadings)
      }

      // @@protoc_insertion_point(class_scope:EigenDecomposition.InstrumentLoadings)
      private static final com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings();
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<InstrumentLoadings>
          PARSER = new com.google.protobuf.AbstractParser<InstrumentLoadings>() {
        public InstrumentLoadings parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new InstrumentLoadings(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<InstrumentLoadings> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<InstrumentLoadings> getParserForType() {
        return PARSER;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface QualityOfReturnsMsgOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EigenDecomposition.QualityOfReturnsMsg)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 instrument_id = 1;</code>
       */
      long getInstrumentId();

      /**
       * <pre>
       * # of returns where both the 'before' and the 'after' prices were available - i.e. the 'happy path'
       * </pre>
       *
       * <code>int32 num_actual = 2;</code>
       */
      int getNumActual();

      /**
       * <pre>
       * e.g. due to market halts
       * </pre>
       *
       * <code>int32 num_gap_filled = 3;</code>
       */
      int getNumGapFilled();

      /**
       * <pre>
       * This includes any history gap fills we may do for the first day of PRICES, since the first day of
       * RETURNS is the next day (since we need a previous price).
       * </pre>
       *
       * <code>int32 num_back_filled = 4;</code>
       */
      int getNumBackFilled();
    }
    /**
     * Protobuf type {@code EigenDecomposition.QualityOfReturnsMsg}
     */
    public  static final class QualityOfReturnsMsg extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EigenDecomposition.QualityOfReturnsMsg)
        QualityOfReturnsMsgOrBuilder {
      // Use QualityOfReturnsMsg.newBuilder() to construct.
      private QualityOfReturnsMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private QualityOfReturnsMsg() {
        instrumentId_ = 0L;
        numActual_ = 0;
        numGapFilled_ = 0;
        numBackFilled_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private QualityOfReturnsMsg(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                instrumentId_ = input.readInt64();
                break;
              }
              case 16: {

                numActual_ = input.readInt32();
                break;
              }
              case 24: {

                numGapFilled_ = input.readInt32();
                break;
              }
              case 32: {

                numBackFilled_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_QualityOfReturnsMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder.class);
      }

      public static final int INSTRUMENT_ID_FIELD_NUMBER = 1;
      private long instrumentId_;
      /**
       * <code>int64 instrument_id = 1;</code>
       */
      public long getInstrumentId() {
        return instrumentId_;
      }

      public static final int NUM_ACTUAL_FIELD_NUMBER = 2;
      private int numActual_;
      /**
       * <pre>
       * # of returns where both the 'before' and the 'after' prices were available - i.e. the 'happy path'
       * </pre>
       *
       * <code>int32 num_actual = 2;</code>
       */
      public int getNumActual() {
        return numActual_;
      }

      public static final int NUM_GAP_FILLED_FIELD_NUMBER = 3;
      private int numGapFilled_;
      /**
       * <pre>
       * e.g. due to market halts
       * </pre>
       *
       * <code>int32 num_gap_filled = 3;</code>
       */
      public int getNumGapFilled() {
        return numGapFilled_;
      }

      public static final int NUM_BACK_FILLED_FIELD_NUMBER = 4;
      private int numBackFilled_;
      /**
       * <pre>
       * This includes any history gap fills we may do for the first day of PRICES, since the first day of
       * RETURNS is the next day (since we need a previous price).
       * </pre>
       *
       * <code>int32 num_back_filled = 4;</code>
       */
      public int getNumBackFilled() {
        return numBackFilled_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (instrumentId_ != 0L) {
          output.writeInt64(1, instrumentId_);
        }
        if (numActual_ != 0) {
          output.writeInt32(2, numActual_);
        }
        if (numGapFilled_ != 0) {
          output.writeInt32(3, numGapFilled_);
        }
        if (numBackFilled_ != 0) {
          output.writeInt32(4, numBackFilled_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (instrumentId_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, instrumentId_);
        }
        if (numActual_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, numActual_);
        }
        if (numGapFilled_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, numGapFilled_);
        }
        if (numBackFilled_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, numBackFilled_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg)) {
          return super.equals(obj);
        }
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg other = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg) obj;

        boolean result = true;
        result = result && (getInstrumentId()
            == other.getInstrumentId());
        result = result && (getNumActual()
            == other.getNumActual());
        result = result && (getNumGapFilled()
            == other.getNumGapFilled());
        result = result && (getNumBackFilled()
            == other.getNumBackFilled());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + INSTRUMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstrumentId());
        hash = (37 * hash) + NUM_ACTUAL_FIELD_NUMBER;
        hash = (53 * hash) + getNumActual();
        hash = (37 * hash) + NUM_GAP_FILLED_FIELD_NUMBER;
        hash = (53 * hash) + getNumGapFilled();
        hash = (37 * hash) + NUM_BACK_FILLED_FIELD_NUMBER;
        hash = (53 * hash) + getNumBackFilled();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code EigenDecomposition.QualityOfReturnsMsg}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EigenDecomposition.QualityOfReturnsMsg)
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_QualityOfReturnsMsg_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder.class);
        }

        // Construct using com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          instrumentId_ = 0L;

          numActual_ = 0;

          numGapFilled_ = 0;

          numBackFilled_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getDefaultInstanceForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.getDefaultInstance();
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg build() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg buildPartial() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg result = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg(this);
          result.instrumentId_ = instrumentId_;
          result.numActual_ = numActual_;
          result.numGapFilled_ = numGapFilled_;
          result.numBackFilled_ = numBackFilled_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg) {
            return mergeFrom((com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg other) {
          if (other == com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.getDefaultInstance()) return this;
          if (other.getInstrumentId() != 0L) {
            setInstrumentId(other.getInstrumentId());
          }
          if (other.getNumActual() != 0) {
            setNumActual(other.getNumActual());
          }
          if (other.getNumGapFilled() != 0) {
            setNumGapFilled(other.getNumGapFilled());
          }
          if (other.getNumBackFilled() != 0) {
            setNumBackFilled(other.getNumBackFilled());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long instrumentId_ ;
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public long getInstrumentId() {
          return instrumentId_;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder setInstrumentId(long value) {
          
          instrumentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder clearInstrumentId() {
          
          instrumentId_ = 0L;
          onChanged();
          return this;
        }

        private int numActual_ ;
        /**
         * <pre>
         * # of returns where both the 'before' and the 'after' prices were available - i.e. the 'happy path'
         * </pre>
         *
         * <code>int32 num_actual = 2;</code>
         */
        public int getNumActual() {
          return numActual_;
        }
        /**
         * <pre>
         * # of returns where both the 'before' and the 'after' prices were available - i.e. the 'happy path'
         * </pre>
         *
         * <code>int32 num_actual = 2;</code>
         */
        public Builder setNumActual(int value) {
          
          numActual_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * # of returns where both the 'before' and the 'after' prices were available - i.e. the 'happy path'
         * </pre>
         *
         * <code>int32 num_actual = 2;</code>
         */
        public Builder clearNumActual() {
          
          numActual_ = 0;
          onChanged();
          return this;
        }

        private int numGapFilled_ ;
        /**
         * <pre>
         * e.g. due to market halts
         * </pre>
         *
         * <code>int32 num_gap_filled = 3;</code>
         */
        public int getNumGapFilled() {
          return numGapFilled_;
        }
        /**
         * <pre>
         * e.g. due to market halts
         * </pre>
         *
         * <code>int32 num_gap_filled = 3;</code>
         */
        public Builder setNumGapFilled(int value) {
          
          numGapFilled_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * e.g. due to market halts
         * </pre>
         *
         * <code>int32 num_gap_filled = 3;</code>
         */
        public Builder clearNumGapFilled() {
          
          numGapFilled_ = 0;
          onChanged();
          return this;
        }

        private int numBackFilled_ ;
        /**
         * <pre>
         * This includes any history gap fills we may do for the first day of PRICES, since the first day of
         * RETURNS is the next day (since we need a previous price).
         * </pre>
         *
         * <code>int32 num_back_filled = 4;</code>
         */
        public int getNumBackFilled() {
          return numBackFilled_;
        }
        /**
         * <pre>
         * This includes any history gap fills we may do for the first day of PRICES, since the first day of
         * RETURNS is the next day (since we need a previous price).
         * </pre>
         *
         * <code>int32 num_back_filled = 4;</code>
         */
        public Builder setNumBackFilled(int value) {
          
          numBackFilled_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This includes any history gap fills we may do for the first day of PRICES, since the first day of
         * RETURNS is the next day (since we need a previous price).
         * </pre>
         *
         * <code>int32 num_back_filled = 4;</code>
         */
        public Builder clearNumBackFilled() {
          
          numBackFilled_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:EigenDecomposition.QualityOfReturnsMsg)
      }

      // @@protoc_insertion_point(class_scope:EigenDecomposition.QualityOfReturnsMsg)
      private static final com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg();
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<QualityOfReturnsMsg>
          PARSER = new com.google.protobuf.AbstractParser<QualityOfReturnsMsg>() {
        public QualityOfReturnsMsg parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new QualityOfReturnsMsg(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<QualityOfReturnsMsg> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<QualityOfReturnsMsg> getParserForType() {
        return PARSER;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface StatsMsgOrBuilder extends
        // @@protoc_insertion_point(interface_extends:EigenDecomposition.StatsMsg)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 instrument_id = 1;</code>
       */
      long getInstrumentId();

      /**
       * <code>double annualized_standard_deviation = 2;</code>
       */
      double getAnnualizedStandardDeviation();
    }
    /**
     * Protobuf type {@code EigenDecomposition.StatsMsg}
     */
    public  static final class StatsMsg extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:EigenDecomposition.StatsMsg)
        StatsMsgOrBuilder {
      // Use StatsMsg.newBuilder() to construct.
      private StatsMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private StatsMsg() {
        instrumentId_ = 0L;
        annualizedStandardDeviation_ = 0D;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private StatsMsg(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                instrumentId_ = input.readInt64();
                break;
              }
              case 17: {

                annualizedStandardDeviation_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_StatsMsg_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_StatsMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder.class);
      }

      public static final int INSTRUMENT_ID_FIELD_NUMBER = 1;
      private long instrumentId_;
      /**
       * <code>int64 instrument_id = 1;</code>
       */
      public long getInstrumentId() {
        return instrumentId_;
      }

      public static final int ANNUALIZED_STANDARD_DEVIATION_FIELD_NUMBER = 2;
      private double annualizedStandardDeviation_;
      /**
       * <code>double annualized_standard_deviation = 2;</code>
       */
      public double getAnnualizedStandardDeviation() {
        return annualizedStandardDeviation_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (instrumentId_ != 0L) {
          output.writeInt64(1, instrumentId_);
        }
        if (annualizedStandardDeviation_ != 0D) {
          output.writeDouble(2, annualizedStandardDeviation_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (instrumentId_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, instrumentId_);
        }
        if (annualizedStandardDeviation_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, annualizedStandardDeviation_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg)) {
          return super.equals(obj);
        }
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg other = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg) obj;

        boolean result = true;
        result = result && (getInstrumentId()
            == other.getInstrumentId());
        result = result && (
            java.lang.Double.doubleToLongBits(getAnnualizedStandardDeviation())
            == java.lang.Double.doubleToLongBits(
                other.getAnnualizedStandardDeviation()));
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + INSTRUMENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInstrumentId());
        hash = (37 * hash) + ANNUALIZED_STANDARD_DEVIATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAnnualizedStandardDeviation()));
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code EigenDecomposition.StatsMsg}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:EigenDecomposition.StatsMsg)
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_StatsMsg_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_StatsMsg_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder.class);
        }

        // Construct using com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          instrumentId_ = 0L;

          annualizedStandardDeviation_ = 0D;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_StatsMsg_descriptor;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getDefaultInstanceForType() {
          return com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.getDefaultInstance();
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg build() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg buildPartial() {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg result = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg(this);
          result.instrumentId_ = instrumentId_;
          result.annualizedStandardDeviation_ = annualizedStandardDeviation_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg) {
            return mergeFrom((com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg other) {
          if (other == com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.getDefaultInstance()) return this;
          if (other.getInstrumentId() != 0L) {
            setInstrumentId(other.getInstrumentId());
          }
          if (other.getAnnualizedStandardDeviation() != 0D) {
            setAnnualizedStandardDeviation(other.getAnnualizedStandardDeviation());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long instrumentId_ ;
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public long getInstrumentId() {
          return instrumentId_;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder setInstrumentId(long value) {
          
          instrumentId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int64 instrument_id = 1;</code>
         */
        public Builder clearInstrumentId() {
          
          instrumentId_ = 0L;
          onChanged();
          return this;
        }

        private double annualizedStandardDeviation_ ;
        /**
         * <code>double annualized_standard_deviation = 2;</code>
         */
        public double getAnnualizedStandardDeviation() {
          return annualizedStandardDeviation_;
        }
        /**
         * <code>double annualized_standard_deviation = 2;</code>
         */
        public Builder setAnnualizedStandardDeviation(double value) {
          
          annualizedStandardDeviation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double annualized_standard_deviation = 2;</code>
         */
        public Builder clearAnnualizedStandardDeviation() {
          
          annualizedStandardDeviation_ = 0D;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:EigenDecomposition.StatsMsg)
      }

      // @@protoc_insertion_point(class_scope:EigenDecomposition.StatsMsg)
      private static final com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg();
      }

      public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<StatsMsg>
          PARSER = new com.google.protobuf.AbstractParser<StatsMsg>() {
        public StatsMsg parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new StatsMsg(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<StatsMsg> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<StatsMsg> getParserForType() {
        return PARSER;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int HUMAN_DESCRIPTION_FIELD_NUMBER = 1;
    private volatile java.lang.Object humanDescription_;
    /**
     * <code>string human_description = 1;</code>
     */
    public java.lang.String getHumanDescription() {
      java.lang.Object ref = humanDescription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        humanDescription_ = s;
        return s;
      }
    }
    /**
     * <code>string human_description = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHumanDescriptionBytes() {
      java.lang.Object ref = humanDescription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        humanDescription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EIGENVECTOR_COVERAGE_FRACTION_FIELD_NUMBER = 2;
    private double eigenvectorCoverageFraction_;
    /**
     * <pre>
     * Between 0 and 1; we typically try to get enough eigenvectors with eigenvalues
     * such that the explanatory power of the eigenvectors we keep is at most 80% of total.
     * We can always decide to only care about using the biggest factors that only get us to e.g. 70%.
     * Note that this is the MINIMUM; if e.g. it's 80%, and the least important eigenvector takes us from
     * 79% explanatory power to 82% explanatory power, then this will still be 80%.
     * </pre>
     *
     * <code>double eigenvector_coverage_fraction = 2;</code>
     */
    public double getEigenvectorCoverageFraction() {
      return eigenvectorCoverageFraction_;
    }

    public static final int SUM_OF_ALL_EIGENVALUES_INCLUDING_SKIPPED_FIELD_NUMBER = 3;
    private double sumOfAllEigenvaluesIncludingSkipped_;
    /**
     * <pre>
     * this applies to all eigenvectors, not just the ones that are included in this file after skipping
     * the least important ones. It is useful for cases where e.g. we store eigenvectors for up to 80%
     * explanatory power, but decide to use up to 70% for a backtest. We can always choose less.
     * </pre>
     *
     * <code>double sum_of_all_eigenvalues_including_skipped = 3;</code>
     */
    public double getSumOfAllEigenvaluesIncludingSkipped() {
      return sumOfAllEigenvaluesIncludingSkipped_;
    }

    public static final int ALL_QUALITY_OF_RETURNS_FIELD_NUMBER = 4;
    private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> allQualityOfReturns_;
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> getAllQualityOfReturnsList() {
      return allQualityOfReturns_;
    }
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder> 
        getAllQualityOfReturnsOrBuilderList() {
      return allQualityOfReturns_;
    }
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    public int getAllQualityOfReturnsCount() {
      return allQualityOfReturns_.size();
    }
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getAllQualityOfReturns(int index) {
      return allQualityOfReturns_.get(index);
    }
    /**
     * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder getAllQualityOfReturnsOrBuilder(
        int index) {
      return allQualityOfReturns_.get(index);
    }

    public static final int RETAINED_EIGENPAIRS_DESCENDING_FIELD_NUMBER = 5;
    private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> retainedEigenpairsDescending_;
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> getRetainedEigenpairsDescendingList() {
      return retainedEigenpairsDescending_;
    }
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder> 
        getRetainedEigenpairsDescendingOrBuilderList() {
      return retainedEigenpairsDescending_;
    }
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    public int getRetainedEigenpairsDescendingCount() {
      return retainedEigenpairsDescending_.size();
    }
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getRetainedEigenpairsDescending(int index) {
      return retainedEigenpairsDescending_.get(index);
    }
    /**
     * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder getRetainedEigenpairsDescendingOrBuilder(
        int index) {
      return retainedEigenpairsDescending_.get(index);
    }

    public static final int INSTRUMENT_FACTOR_LOADINGS_FIELD_NUMBER = 6;
    private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> instrumentFactorLoadings_;
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> getInstrumentFactorLoadingsList() {
      return instrumentFactorLoadings_;
    }
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder> 
        getInstrumentFactorLoadingsOrBuilderList() {
      return instrumentFactorLoadings_;
    }
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    public int getInstrumentFactorLoadingsCount() {
      return instrumentFactorLoadings_.size();
    }
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getInstrumentFactorLoadings(int index) {
      return instrumentFactorLoadings_.get(index);
    }
    /**
     * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder getInstrumentFactorLoadingsOrBuilder(
        int index) {
      return instrumentFactorLoadings_.get(index);
    }

    public static final int STATS_FIELD_NUMBER = 7;
    private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> stats_;
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> getStatsList() {
      return stats_;
    }
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder> 
        getStatsOrBuilderList() {
      return stats_;
    }
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    public int getStatsCount() {
      return stats_.size();
    }
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getStats(int index) {
      return stats_.get(index);
    }
    /**
     * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
     */
    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder getStatsOrBuilder(
        int index) {
      return stats_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getHumanDescriptionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, humanDescription_);
      }
      if (eigenvectorCoverageFraction_ != 0D) {
        output.writeDouble(2, eigenvectorCoverageFraction_);
      }
      if (sumOfAllEigenvaluesIncludingSkipped_ != 0D) {
        output.writeDouble(3, sumOfAllEigenvaluesIncludingSkipped_);
      }
      for (int i = 0; i < allQualityOfReturns_.size(); i++) {
        output.writeMessage(4, allQualityOfReturns_.get(i));
      }
      for (int i = 0; i < retainedEigenpairsDescending_.size(); i++) {
        output.writeMessage(5, retainedEigenpairsDescending_.get(i));
      }
      for (int i = 0; i < instrumentFactorLoadings_.size(); i++) {
        output.writeMessage(6, instrumentFactorLoadings_.get(i));
      }
      for (int i = 0; i < stats_.size(); i++) {
        output.writeMessage(7, stats_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getHumanDescriptionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, humanDescription_);
      }
      if (eigenvectorCoverageFraction_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, eigenvectorCoverageFraction_);
      }
      if (sumOfAllEigenvaluesIncludingSkipped_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, sumOfAllEigenvaluesIncludingSkipped_);
      }
      for (int i = 0; i < allQualityOfReturns_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, allQualityOfReturns_.get(i));
      }
      for (int i = 0; i < retainedEigenpairsDescending_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, retainedEigenpairsDescending_.get(i));
      }
      for (int i = 0; i < instrumentFactorLoadings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, instrumentFactorLoadings_.get(i));
      }
      for (int i = 0; i < stats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, stats_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition)) {
        return super.equals(obj);
      }
      com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition other = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition) obj;

      boolean result = true;
      result = result && getHumanDescription()
          .equals(other.getHumanDescription());
      result = result && (
          java.lang.Double.doubleToLongBits(getEigenvectorCoverageFraction())
          == java.lang.Double.doubleToLongBits(
              other.getEigenvectorCoverageFraction()));
      result = result && (
          java.lang.Double.doubleToLongBits(getSumOfAllEigenvaluesIncludingSkipped())
          == java.lang.Double.doubleToLongBits(
              other.getSumOfAllEigenvaluesIncludingSkipped()));
      result = result && getAllQualityOfReturnsList()
          .equals(other.getAllQualityOfReturnsList());
      result = result && getRetainedEigenpairsDescendingList()
          .equals(other.getRetainedEigenpairsDescendingList());
      result = result && getInstrumentFactorLoadingsList()
          .equals(other.getInstrumentFactorLoadingsList());
      result = result && getStatsList()
          .equals(other.getStatsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HUMAN_DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getHumanDescription().hashCode();
      hash = (37 * hash) + EIGENVECTOR_COVERAGE_FRACTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getEigenvectorCoverageFraction()));
      hash = (37 * hash) + SUM_OF_ALL_EIGENVALUES_INCLUDING_SKIPPED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSumOfAllEigenvaluesIncludingSkipped()));
      if (getAllQualityOfReturnsCount() > 0) {
        hash = (37 * hash) + ALL_QUALITY_OF_RETURNS_FIELD_NUMBER;
        hash = (53 * hash) + getAllQualityOfReturnsList().hashCode();
      }
      if (getRetainedEigenpairsDescendingCount() > 0) {
        hash = (37 * hash) + RETAINED_EIGENPAIRS_DESCENDING_FIELD_NUMBER;
        hash = (53 * hash) + getRetainedEigenpairsDescendingList().hashCode();
      }
      if (getInstrumentFactorLoadingsCount() > 0) {
        hash = (37 * hash) + INSTRUMENT_FACTOR_LOADINGS_FIELD_NUMBER;
        hash = (53 * hash) + getInstrumentFactorLoadingsList().hashCode();
      }
      if (getStatsCount() > 0) {
        hash = (37 * hash) + STATS_FIELD_NUMBER;
        hash = (53 * hash) + getStatsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * To save you the effort on how to protobuf-compile this:
     * cd ~/ssd/rb; protoc --java_out=./src/main/java ./src/main/java/com/rb/nonbiz/math/eigen/EigenProto.proto
     * </pre>
     *
     * Protobuf type {@code EigenDecomposition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:EigenDecomposition)
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecompositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.class, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Builder.class);
      }

      // Construct using com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAllQualityOfReturnsFieldBuilder();
          getRetainedEigenpairsDescendingFieldBuilder();
          getInstrumentFactorLoadingsFieldBuilder();
          getStatsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        humanDescription_ = "";

        eigenvectorCoverageFraction_ = 0D;

        sumOfAllEigenvaluesIncludingSkipped_ = 0D;

        if (allQualityOfReturnsBuilder_ == null) {
          allQualityOfReturns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          allQualityOfReturnsBuilder_.clear();
        }
        if (retainedEigenpairsDescendingBuilder_ == null) {
          retainedEigenpairsDescending_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          retainedEigenpairsDescendingBuilder_.clear();
        }
        if (instrumentFactorLoadingsBuilder_ == null) {
          instrumentFactorLoadings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          instrumentFactorLoadingsBuilder_.clear();
        }
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          statsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.rb.nonbiz.math.eigen.EigenProto.internal_static_EigenDecomposition_descriptor;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition getDefaultInstanceForType() {
        return com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.getDefaultInstance();
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition build() {
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition buildPartial() {
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition result = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.humanDescription_ = humanDescription_;
        result.eigenvectorCoverageFraction_ = eigenvectorCoverageFraction_;
        result.sumOfAllEigenvaluesIncludingSkipped_ = sumOfAllEigenvaluesIncludingSkipped_;
        if (allQualityOfReturnsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            allQualityOfReturns_ = java.util.Collections.unmodifiableList(allQualityOfReturns_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.allQualityOfReturns_ = allQualityOfReturns_;
        } else {
          result.allQualityOfReturns_ = allQualityOfReturnsBuilder_.build();
        }
        if (retainedEigenpairsDescendingBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            retainedEigenpairsDescending_ = java.util.Collections.unmodifiableList(retainedEigenpairsDescending_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.retainedEigenpairsDescending_ = retainedEigenpairsDescending_;
        } else {
          result.retainedEigenpairsDescending_ = retainedEigenpairsDescendingBuilder_.build();
        }
        if (instrumentFactorLoadingsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            instrumentFactorLoadings_ = java.util.Collections.unmodifiableList(instrumentFactorLoadings_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.instrumentFactorLoadings_ = instrumentFactorLoadings_;
        } else {
          result.instrumentFactorLoadings_ = instrumentFactorLoadingsBuilder_.build();
        }
        if (statsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            stats_ = java.util.Collections.unmodifiableList(stats_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition) {
          return mergeFrom((com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition other) {
        if (other == com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.getDefaultInstance()) return this;
        if (!other.getHumanDescription().isEmpty()) {
          humanDescription_ = other.humanDescription_;
          onChanged();
        }
        if (other.getEigenvectorCoverageFraction() != 0D) {
          setEigenvectorCoverageFraction(other.getEigenvectorCoverageFraction());
        }
        if (other.getSumOfAllEigenvaluesIncludingSkipped() != 0D) {
          setSumOfAllEigenvaluesIncludingSkipped(other.getSumOfAllEigenvaluesIncludingSkipped());
        }
        if (allQualityOfReturnsBuilder_ == null) {
          if (!other.allQualityOfReturns_.isEmpty()) {
            if (allQualityOfReturns_.isEmpty()) {
              allQualityOfReturns_ = other.allQualityOfReturns_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureAllQualityOfReturnsIsMutable();
              allQualityOfReturns_.addAll(other.allQualityOfReturns_);
            }
            onChanged();
          }
        } else {
          if (!other.allQualityOfReturns_.isEmpty()) {
            if (allQualityOfReturnsBuilder_.isEmpty()) {
              allQualityOfReturnsBuilder_.dispose();
              allQualityOfReturnsBuilder_ = null;
              allQualityOfReturns_ = other.allQualityOfReturns_;
              bitField0_ = (bitField0_ & ~0x00000008);
              allQualityOfReturnsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAllQualityOfReturnsFieldBuilder() : null;
            } else {
              allQualityOfReturnsBuilder_.addAllMessages(other.allQualityOfReturns_);
            }
          }
        }
        if (retainedEigenpairsDescendingBuilder_ == null) {
          if (!other.retainedEigenpairsDescending_.isEmpty()) {
            if (retainedEigenpairsDescending_.isEmpty()) {
              retainedEigenpairsDescending_ = other.retainedEigenpairsDescending_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRetainedEigenpairsDescendingIsMutable();
              retainedEigenpairsDescending_.addAll(other.retainedEigenpairsDescending_);
            }
            onChanged();
          }
        } else {
          if (!other.retainedEigenpairsDescending_.isEmpty()) {
            if (retainedEigenpairsDescendingBuilder_.isEmpty()) {
              retainedEigenpairsDescendingBuilder_.dispose();
              retainedEigenpairsDescendingBuilder_ = null;
              retainedEigenpairsDescending_ = other.retainedEigenpairsDescending_;
              bitField0_ = (bitField0_ & ~0x00000010);
              retainedEigenpairsDescendingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRetainedEigenpairsDescendingFieldBuilder() : null;
            } else {
              retainedEigenpairsDescendingBuilder_.addAllMessages(other.retainedEigenpairsDescending_);
            }
          }
        }
        if (instrumentFactorLoadingsBuilder_ == null) {
          if (!other.instrumentFactorLoadings_.isEmpty()) {
            if (instrumentFactorLoadings_.isEmpty()) {
              instrumentFactorLoadings_ = other.instrumentFactorLoadings_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureInstrumentFactorLoadingsIsMutable();
              instrumentFactorLoadings_.addAll(other.instrumentFactorLoadings_);
            }
            onChanged();
          }
        } else {
          if (!other.instrumentFactorLoadings_.isEmpty()) {
            if (instrumentFactorLoadingsBuilder_.isEmpty()) {
              instrumentFactorLoadingsBuilder_.dispose();
              instrumentFactorLoadingsBuilder_ = null;
              instrumentFactorLoadings_ = other.instrumentFactorLoadings_;
              bitField0_ = (bitField0_ & ~0x00000020);
              instrumentFactorLoadingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstrumentFactorLoadingsFieldBuilder() : null;
            } else {
              instrumentFactorLoadingsBuilder_.addAllMessages(other.instrumentFactorLoadings_);
            }
          }
        }
        if (statsBuilder_ == null) {
          if (!other.stats_.isEmpty()) {
            if (stats_.isEmpty()) {
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureStatsIsMutable();
              stats_.addAll(other.stats_);
            }
            onChanged();
          }
        } else {
          if (!other.stats_.isEmpty()) {
            if (statsBuilder_.isEmpty()) {
              statsBuilder_.dispose();
              statsBuilder_ = null;
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000040);
              statsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStatsFieldBuilder() : null;
            } else {
              statsBuilder_.addAllMessages(other.stats_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object humanDescription_ = "";
      /**
       * <code>string human_description = 1;</code>
       */
      public java.lang.String getHumanDescription() {
        java.lang.Object ref = humanDescription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          humanDescription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string human_description = 1;</code>
       */
      public com.google.protobuf.ByteString
          getHumanDescriptionBytes() {
        java.lang.Object ref = humanDescription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          humanDescription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string human_description = 1;</code>
       */
      public Builder setHumanDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        humanDescription_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string human_description = 1;</code>
       */
      public Builder clearHumanDescription() {
        
        humanDescription_ = getDefaultInstance().getHumanDescription();
        onChanged();
        return this;
      }
      /**
       * <code>string human_description = 1;</code>
       */
      public Builder setHumanDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        humanDescription_ = value;
        onChanged();
        return this;
      }

      private double eigenvectorCoverageFraction_ ;
      /**
       * <pre>
       * Between 0 and 1; we typically try to get enough eigenvectors with eigenvalues
       * such that the explanatory power of the eigenvectors we keep is at most 80% of total.
       * We can always decide to only care about using the biggest factors that only get us to e.g. 70%.
       * Note that this is the MINIMUM; if e.g. it's 80%, and the least important eigenvector takes us from
       * 79% explanatory power to 82% explanatory power, then this will still be 80%.
       * </pre>
       *
       * <code>double eigenvector_coverage_fraction = 2;</code>
       */
      public double getEigenvectorCoverageFraction() {
        return eigenvectorCoverageFraction_;
      }
      /**
       * <pre>
       * Between 0 and 1; we typically try to get enough eigenvectors with eigenvalues
       * such that the explanatory power of the eigenvectors we keep is at most 80% of total.
       * We can always decide to only care about using the biggest factors that only get us to e.g. 70%.
       * Note that this is the MINIMUM; if e.g. it's 80%, and the least important eigenvector takes us from
       * 79% explanatory power to 82% explanatory power, then this will still be 80%.
       * </pre>
       *
       * <code>double eigenvector_coverage_fraction = 2;</code>
       */
      public Builder setEigenvectorCoverageFraction(double value) {
        
        eigenvectorCoverageFraction_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Between 0 and 1; we typically try to get enough eigenvectors with eigenvalues
       * such that the explanatory power of the eigenvectors we keep is at most 80% of total.
       * We can always decide to only care about using the biggest factors that only get us to e.g. 70%.
       * Note that this is the MINIMUM; if e.g. it's 80%, and the least important eigenvector takes us from
       * 79% explanatory power to 82% explanatory power, then this will still be 80%.
       * </pre>
       *
       * <code>double eigenvector_coverage_fraction = 2;</code>
       */
      public Builder clearEigenvectorCoverageFraction() {
        
        eigenvectorCoverageFraction_ = 0D;
        onChanged();
        return this;
      }

      private double sumOfAllEigenvaluesIncludingSkipped_ ;
      /**
       * <pre>
       * this applies to all eigenvectors, not just the ones that are included in this file after skipping
       * the least important ones. It is useful for cases where e.g. we store eigenvectors for up to 80%
       * explanatory power, but decide to use up to 70% for a backtest. We can always choose less.
       * </pre>
       *
       * <code>double sum_of_all_eigenvalues_including_skipped = 3;</code>
       */
      public double getSumOfAllEigenvaluesIncludingSkipped() {
        return sumOfAllEigenvaluesIncludingSkipped_;
      }
      /**
       * <pre>
       * this applies to all eigenvectors, not just the ones that are included in this file after skipping
       * the least important ones. It is useful for cases where e.g. we store eigenvectors for up to 80%
       * explanatory power, but decide to use up to 70% for a backtest. We can always choose less.
       * </pre>
       *
       * <code>double sum_of_all_eigenvalues_including_skipped = 3;</code>
       */
      public Builder setSumOfAllEigenvaluesIncludingSkipped(double value) {
        
        sumOfAllEigenvaluesIncludingSkipped_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * this applies to all eigenvectors, not just the ones that are included in this file after skipping
       * the least important ones. It is useful for cases where e.g. we store eigenvectors for up to 80%
       * explanatory power, but decide to use up to 70% for a backtest. We can always choose less.
       * </pre>
       *
       * <code>double sum_of_all_eigenvalues_including_skipped = 3;</code>
       */
      public Builder clearSumOfAllEigenvaluesIncludingSkipped() {
        
        sumOfAllEigenvaluesIncludingSkipped_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> allQualityOfReturns_ =
        java.util.Collections.emptyList();
      private void ensureAllQualityOfReturnsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          allQualityOfReturns_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg>(allQualityOfReturns_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder> allQualityOfReturnsBuilder_;

      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> getAllQualityOfReturnsList() {
        if (allQualityOfReturnsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allQualityOfReturns_);
        } else {
          return allQualityOfReturnsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public int getAllQualityOfReturnsCount() {
        if (allQualityOfReturnsBuilder_ == null) {
          return allQualityOfReturns_.size();
        } else {
          return allQualityOfReturnsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg getAllQualityOfReturns(int index) {
        if (allQualityOfReturnsBuilder_ == null) {
          return allQualityOfReturns_.get(index);
        } else {
          return allQualityOfReturnsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder setAllQualityOfReturns(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg value) {
        if (allQualityOfReturnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.set(index, value);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder setAllQualityOfReturns(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder builderForValue) {
        if (allQualityOfReturnsBuilder_ == null) {
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.set(index, builderForValue.build());
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder addAllQualityOfReturns(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg value) {
        if (allQualityOfReturnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.add(value);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder addAllQualityOfReturns(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg value) {
        if (allQualityOfReturnsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.add(index, value);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder addAllQualityOfReturns(
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder builderForValue) {
        if (allQualityOfReturnsBuilder_ == null) {
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.add(builderForValue.build());
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder addAllQualityOfReturns(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder builderForValue) {
        if (allQualityOfReturnsBuilder_ == null) {
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.add(index, builderForValue.build());
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder addAllAllQualityOfReturns(
          java.lang.Iterable<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg> values) {
        if (allQualityOfReturnsBuilder_ == null) {
          ensureAllQualityOfReturnsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allQualityOfReturns_);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder clearAllQualityOfReturns() {
        if (allQualityOfReturnsBuilder_ == null) {
          allQualityOfReturns_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public Builder removeAllQualityOfReturns(int index) {
        if (allQualityOfReturnsBuilder_ == null) {
          ensureAllQualityOfReturnsIsMutable();
          allQualityOfReturns_.remove(index);
          onChanged();
        } else {
          allQualityOfReturnsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder getAllQualityOfReturnsBuilder(
          int index) {
        return getAllQualityOfReturnsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder getAllQualityOfReturnsOrBuilder(
          int index) {
        if (allQualityOfReturnsBuilder_ == null) {
          return allQualityOfReturns_.get(index);  } else {
          return allQualityOfReturnsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder> 
           getAllQualityOfReturnsOrBuilderList() {
        if (allQualityOfReturnsBuilder_ != null) {
          return allQualityOfReturnsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allQualityOfReturns_);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder addAllQualityOfReturnsBuilder() {
        return getAllQualityOfReturnsFieldBuilder().addBuilder(
            com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder addAllQualityOfReturnsBuilder(
          int index) {
        return getAllQualityOfReturnsFieldBuilder().addBuilder(
            index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.QualityOfReturnsMsg all_quality_of_returns = 4;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder> 
           getAllQualityOfReturnsBuilderList() {
        return getAllQualityOfReturnsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder> 
          getAllQualityOfReturnsFieldBuilder() {
        if (allQualityOfReturnsBuilder_ == null) {
          allQualityOfReturnsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.QualityOfReturnsMsgOrBuilder>(
                  allQualityOfReturns_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          allQualityOfReturns_ = null;
        }
        return allQualityOfReturnsBuilder_;
      }

      private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> retainedEigenpairsDescending_ =
        java.util.Collections.emptyList();
      private void ensureRetainedEigenpairsDescendingIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          retainedEigenpairsDescending_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair>(retainedEigenpairsDescending_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder> retainedEigenpairsDescendingBuilder_;

      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> getRetainedEigenpairsDescendingList() {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(retainedEigenpairsDescending_);
        } else {
          return retainedEigenpairsDescendingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public int getRetainedEigenpairsDescendingCount() {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          return retainedEigenpairsDescending_.size();
        } else {
          return retainedEigenpairsDescendingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair getRetainedEigenpairsDescending(int index) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          return retainedEigenpairsDescending_.get(index);
        } else {
          return retainedEigenpairsDescendingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder setRetainedEigenpairsDescending(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair value) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.set(index, value);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder setRetainedEigenpairsDescending(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder builderForValue) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.set(index, builderForValue.build());
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder addRetainedEigenpairsDescending(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair value) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.add(value);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder addRetainedEigenpairsDescending(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair value) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.add(index, value);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder addRetainedEigenpairsDescending(
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder builderForValue) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.add(builderForValue.build());
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder addRetainedEigenpairsDescending(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder builderForValue) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.add(index, builderForValue.build());
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder addAllRetainedEigenpairsDescending(
          java.lang.Iterable<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair> values) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          ensureRetainedEigenpairsDescendingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, retainedEigenpairsDescending_);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder clearRetainedEigenpairsDescending() {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          retainedEigenpairsDescending_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public Builder removeRetainedEigenpairsDescending(int index) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          ensureRetainedEigenpairsDescendingIsMutable();
          retainedEigenpairsDescending_.remove(index);
          onChanged();
        } else {
          retainedEigenpairsDescendingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder getRetainedEigenpairsDescendingBuilder(
          int index) {
        return getRetainedEigenpairsDescendingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder getRetainedEigenpairsDescendingOrBuilder(
          int index) {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          return retainedEigenpairsDescending_.get(index);  } else {
          return retainedEigenpairsDescendingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder> 
           getRetainedEigenpairsDescendingOrBuilderList() {
        if (retainedEigenpairsDescendingBuilder_ != null) {
          return retainedEigenpairsDescendingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(retainedEigenpairsDescending_);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder addRetainedEigenpairsDescendingBuilder() {
        return getRetainedEigenpairsDescendingFieldBuilder().addBuilder(
            com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder addRetainedEigenpairsDescendingBuilder(
          int index) {
        return getRetainedEigenpairsDescendingFieldBuilder().addBuilder(
            index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.Eigenpair retained_eigenpairs_descending = 5;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder> 
           getRetainedEigenpairsDescendingBuilderList() {
        return getRetainedEigenpairsDescendingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder> 
          getRetainedEigenpairsDescendingFieldBuilder() {
        if (retainedEigenpairsDescendingBuilder_ == null) {
          retainedEigenpairsDescendingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.Eigenpair.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.EigenpairOrBuilder>(
                  retainedEigenpairsDescending_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          retainedEigenpairsDescending_ = null;
        }
        return retainedEigenpairsDescendingBuilder_;
      }

      private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> instrumentFactorLoadings_ =
        java.util.Collections.emptyList();
      private void ensureInstrumentFactorLoadingsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          instrumentFactorLoadings_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings>(instrumentFactorLoadings_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder> instrumentFactorLoadingsBuilder_;

      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> getInstrumentFactorLoadingsList() {
        if (instrumentFactorLoadingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instrumentFactorLoadings_);
        } else {
          return instrumentFactorLoadingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public int getInstrumentFactorLoadingsCount() {
        if (instrumentFactorLoadingsBuilder_ == null) {
          return instrumentFactorLoadings_.size();
        } else {
          return instrumentFactorLoadingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings getInstrumentFactorLoadings(int index) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          return instrumentFactorLoadings_.get(index);
        } else {
          return instrumentFactorLoadingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder setInstrumentFactorLoadings(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings value) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.set(index, value);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder setInstrumentFactorLoadings(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder builderForValue) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.set(index, builderForValue.build());
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder addInstrumentFactorLoadings(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings value) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.add(value);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder addInstrumentFactorLoadings(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings value) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.add(index, value);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder addInstrumentFactorLoadings(
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder builderForValue) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.add(builderForValue.build());
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder addInstrumentFactorLoadings(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder builderForValue) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.add(index, builderForValue.build());
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder addAllInstrumentFactorLoadings(
          java.lang.Iterable<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings> values) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          ensureInstrumentFactorLoadingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instrumentFactorLoadings_);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder clearInstrumentFactorLoadings() {
        if (instrumentFactorLoadingsBuilder_ == null) {
          instrumentFactorLoadings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public Builder removeInstrumentFactorLoadings(int index) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          ensureInstrumentFactorLoadingsIsMutable();
          instrumentFactorLoadings_.remove(index);
          onChanged();
        } else {
          instrumentFactorLoadingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder getInstrumentFactorLoadingsBuilder(
          int index) {
        return getInstrumentFactorLoadingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder getInstrumentFactorLoadingsOrBuilder(
          int index) {
        if (instrumentFactorLoadingsBuilder_ == null) {
          return instrumentFactorLoadings_.get(index);  } else {
          return instrumentFactorLoadingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder> 
           getInstrumentFactorLoadingsOrBuilderList() {
        if (instrumentFactorLoadingsBuilder_ != null) {
          return instrumentFactorLoadingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instrumentFactorLoadings_);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder addInstrumentFactorLoadingsBuilder() {
        return getInstrumentFactorLoadingsFieldBuilder().addBuilder(
            com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder addInstrumentFactorLoadingsBuilder(
          int index) {
        return getInstrumentFactorLoadingsFieldBuilder().addBuilder(
            index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.InstrumentLoadings instrument_factor_loadings = 6;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder> 
           getInstrumentFactorLoadingsBuilderList() {
        return getInstrumentFactorLoadingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder> 
          getInstrumentFactorLoadingsFieldBuilder() {
        if (instrumentFactorLoadingsBuilder_ == null) {
          instrumentFactorLoadingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadings.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.InstrumentLoadingsOrBuilder>(
                  instrumentFactorLoadings_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          instrumentFactorLoadings_ = null;
        }
        return instrumentFactorLoadingsBuilder_;
      }

      private java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> stats_ =
        java.util.Collections.emptyList();
      private void ensureStatsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          stats_ = new java.util.ArrayList<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg>(stats_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder> statsBuilder_;

      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> getStatsList() {
        if (statsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stats_);
        } else {
          return statsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public int getStatsCount() {
        if (statsBuilder_ == null) {
          return stats_.size();
        } else {
          return statsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg getStats(int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);
        } else {
          return statsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder setStats(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.set(index, value);
          onChanged();
        } else {
          statsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder setStats(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.set(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder addStats(com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(value);
          onChanged();
        } else {
          statsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder addStats(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(index, value);
          onChanged();
        } else {
          statsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder addStats(
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder addStats(
          int index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder addAllStats(
          java.lang.Iterable<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg> values) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stats_);
          onChanged();
        } else {
          statsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          statsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public Builder removeStats(int index) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.remove(index);
          onChanged();
        } else {
          statsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder getStatsBuilder(
          int index) {
        return getStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder getStatsOrBuilder(
          int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);  } else {
          return statsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public java.util.List<? extends com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder> 
           getStatsOrBuilderList() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stats_);
        }
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder addStatsBuilder() {
        return getStatsFieldBuilder().addBuilder(
            com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder addStatsBuilder(
          int index) {
        return getStatsFieldBuilder().addBuilder(
            index, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.getDefaultInstance());
      }
      /**
       * <code>repeated .EigenDecomposition.StatsMsg stats = 7;</code>
       */
      public java.util.List<com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder> 
           getStatsBuilderList() {
        return getStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsg.Builder, com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition.StatsMsgOrBuilder>(
                  stats_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:EigenDecomposition)
    }

    // @@protoc_insertion_point(class_scope:EigenDecomposition)
    private static final com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition();
    }

    public static com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EigenDecomposition>
        PARSER = new com.google.protobuf.AbstractParser<EigenDecomposition>() {
      public EigenDecomposition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EigenDecomposition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EigenDecomposition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EigenDecomposition> getParserForType() {
      return PARSER;
    }

    public com.rb.nonbiz.math.eigen.EigenProto.EigenDecomposition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EigenDecomposition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EigenDecomposition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EigenDecomposition_Eigenpair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EigenDecomposition_Eigenpair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EigenDecomposition_InstrumentLoadings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EigenDecomposition_InstrumentLoadings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EigenDecomposition_QualityOfReturnsMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_EigenDecomposition_StatsMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_EigenDecomposition_StatsMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7src/main/java/com/rb/nonbiz/math/eigen" +
      "/EigenProto.proto\"\330\005\n\022EigenDecomposition" +
      "\022\031\n\021human_description\030\001 \001(\t\022%\n\035eigenvect" +
      "or_coverage_fraction\030\002 \001(\001\0220\n(sum_of_all" +
      "_eigenvalues_including_skipped\030\003 \001(\001\022G\n\026" +
      "all_quality_of_returns\030\004 \003(\0132\'.EigenDeco" +
      "mposition.QualityOfReturnsMsg\022E\n\036retaine" +
      "d_eigenpairs_descending\030\005 \003(\0132\035.EigenDec" +
      "omposition.Eigenpair\022J\n\032instrument_facto" +
      "r_loadings\030\006 \003(\0132&.EigenDecomposition.In",
      "strumentLoadings\022+\n\005stats\030\007 \003(\0132\034.EigenD" +
      "ecomposition.StatsMsg\032=\n\tEigenpair\022\022\n\nei" +
      "genvalue\030\001 \001(\001\022\034\n\024eigenvector_elements\030\002" +
      " \003(\001\032I\n\022InstrumentLoadings\022\025\n\rinstrument" +
      "_id\030\001 \001(\003\022\034\n\024eigenvector_loadings\030\002 \003(\001\032" +
      "q\n\023QualityOfReturnsMsg\022\025\n\rinstrument_id\030" +
      "\001 \001(\003\022\022\n\nnum_actual\030\002 \001(\005\022\026\n\016num_gap_fil" +
      "led\030\003 \001(\005\022\027\n\017num_back_filled\030\004 \001(\005\032H\n\010St" +
      "atsMsg\022\025\n\rinstrument_id\030\001 \001(\003\022%\n\035annuali" +
      "zed_standard_deviation\030\002 \001(\001B\032\n\030com.rb.n",
      "onbiz.math.eigenb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_EigenDecomposition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_EigenDecomposition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EigenDecomposition_descriptor,
        new java.lang.String[] { "HumanDescription", "EigenvectorCoverageFraction", "SumOfAllEigenvaluesIncludingSkipped", "AllQualityOfReturns", "RetainedEigenpairsDescending", "InstrumentFactorLoadings", "Stats", });
    internal_static_EigenDecomposition_Eigenpair_descriptor =
      internal_static_EigenDecomposition_descriptor.getNestedTypes().get(0);
    internal_static_EigenDecomposition_Eigenpair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EigenDecomposition_Eigenpair_descriptor,
        new java.lang.String[] { "Eigenvalue", "EigenvectorElements", });
    internal_static_EigenDecomposition_InstrumentLoadings_descriptor =
      internal_static_EigenDecomposition_descriptor.getNestedTypes().get(1);
    internal_static_EigenDecomposition_InstrumentLoadings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EigenDecomposition_InstrumentLoadings_descriptor,
        new java.lang.String[] { "InstrumentId", "EigenvectorLoadings", });
    internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor =
      internal_static_EigenDecomposition_descriptor.getNestedTypes().get(2);
    internal_static_EigenDecomposition_QualityOfReturnsMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EigenDecomposition_QualityOfReturnsMsg_descriptor,
        new java.lang.String[] { "InstrumentId", "NumActual", "NumGapFilled", "NumBackFilled", });
    internal_static_EigenDecomposition_StatsMsg_descriptor =
      internal_static_EigenDecomposition_descriptor.getNestedTypes().get(3);
    internal_static_EigenDecomposition_StatsMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_EigenDecomposition_StatsMsg_descriptor,
        new java.lang.String[] { "InstrumentId", "AnnualizedStandardDeviation", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
